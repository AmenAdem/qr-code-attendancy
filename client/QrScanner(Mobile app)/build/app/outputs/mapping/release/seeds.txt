androidx.appcompat.view.menu.ActionMenuItemView
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.layout.WindowBackend
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.window.embedding.SplitController$Companion
androidx.window.layout.DisplayFeature
androidx.window.core.Version$Companion
androidx.window.embedding.SplitPairFilter
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.appcompat.widget.AlertDialogLayout
com.journeyapps.barcodescanner.CaptureActivity
androidx.window.core.Bounds
androidx.window.embedding.SplitRule
androidx.window.layout.SidecarWindowBackend
androidx.appcompat.app.AlertController$RecycleListView
io.flutter.embedding.engine.FlutterJNI
androidx.savedstate.Recreator
androidx.window.embedding.EmbeddingAdapter
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
com.journeyapps.barcodescanner.DecoratedBarcodeView
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.embedding.EmbeddingCompat$Companion
androidx.savedstate.SavedStateRegistry$1
androidx.annotation.Keep
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.window.layout.WindowInfoTrackerDecorator
androidx.window.R$attr
androidx.window.R$id
androidx.appcompat.widget.ButtonBarLayout
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.lifecycle.SavedStateHandleController$1
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.window.layout.WindowInfoTracker$Companion
androidx.activity.ComponentActivity$3
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.window.layout.WindowLayoutInfo
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.window.layout.EmptyDecorator
androidx.window.layout.WindowInfoTracker
androidx.activity.ImmLeaksCleaner
androidx.window.embedding.ExtensionEmbeddingBackend
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.appcompat.widget.SearchView
androidx.window.layout.SidecarAdapter$Companion
androidx.window.embedding.SplitPairRule
androidx.window.layout.FoldingFeature$State
androidx.window.embedding.ActivityFilter
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.layout.WindowMetrics
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.appcompat.view.menu.ExpandedMenuView
androidx.appcompat.widget.ViewStubCompat
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.window.layout.HardwareFoldingFeature
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.embedding.EmbeddingRule
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.versionedparcelable.ParcelImpl
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.core.app.CoreComponentFactory
androidx.window.layout.DisplayCompatHelperApi28
androidx.core.app.RemoteActionCompat
androidx.window.layout.ExtensionInterfaceCompat
android.support.v4.app.RemoteActionCompatParcelizer
androidx.activity.ComponentActivity$4
androidx.window.embedding.SplitRuleParser
com.example.testprojet.MainActivity
androidx.window.layout.SidecarAdapter
com.journeyapps.barcodescanner.BarcodeView
androidx.window.layout.FoldingFeature$State$Companion
androidx.window.layout.ActivityCompatHelperApi24
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.window.layout.SidecarWindowBackend$Companion
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.appcompat.widget.ActionMenuView
androidx.window.core.Version
androidx.window.embedding.MatcherUtils
androidx.window.embedding.SplitInfo
androidx.window.layout.FoldingFeature$Orientation
androidx.window.embedding.EmbeddingCompat
io.flutter.plugin.platform.SingleViewPresentation
androidx.appcompat.widget.ActionBarContextView
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.embedding.ActivityRule
com.journeyapps.barcodescanner.ViewfinderView
androidx.window.layout.FoldingFeature$OcclusionType$Companion
io.flutter.view.FlutterCallbackInformation
androidx.activity.result.ActivityResultRegistry$1
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.appcompat.widget.DialogTitle
androidx.window.java.R
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.window.core.ExperimentalWindowApi
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
androidx.core.widget.NestedScrollView
androidx.window.layout.SidecarCompat
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.embedding.ActivityStack
androidx.appcompat.widget.ActionBarContainer
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.layout.HardwareFoldingFeature$Type
androidx.window.embedding.SplitController
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.embedding.SplitRule$LayoutDir
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.lifecycle.Lifecycling$1
androidx.window.embedding.EmptyEmbeddingComponent
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.window.embedding.SplitPlaceholderRule
androidx.appcompat.view.menu.ListMenuItemView
androidx.appcompat.widget.SearchView$SearchAutoComplete
io.flutter.plugins.GeneratedPluginRegistrant
androidx.window.embedding.EmbeddingTranslatingCallback
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.R
androidx.window.layout.WindowInfoTrackerImpl
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.window.core.Version$bigInteger$2
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
io.flutter.view.AccessibilityViewEmbedder
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.appcompat.widget.ContentFrameLayout
androidx.fragment.app.Fragment$5
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.layout.FoldingFeature
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.fragment.app.FragmentManager$6
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.layout.SidecarCompat$Companion
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.activity.ComponentActivity$5
androidx.core.graphics.drawable.IconCompat
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.window.embedding.EmbeddingBackend
androidx.appcompat.widget.Toolbar
androidx.window.layout.WindowMetricsCalculator
androidx.window.R$styleable
androidx.lifecycle.SavedStateHandleController
androidx.core.app.RemoteActionCompatParcelizer
androidx.appcompat.app.AlertController$2: android.view.View val$top
androidx.appcompat.R$style: int Theme_AppCompat_Empty
androidx.appcompat.R$styleable: int ActionBar_background
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR
androidx.fragment.app.FragmentTransaction: java.lang.ClassLoader mClassLoader
androidx.core.content.res.ComplexColorCompat: android.content.res.ColorStateList mColorStateList
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $VALUES
com.journeyapps.barcodescanner.camera.CameraInstance: android.os.Handler readyHandler
androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
kotlin.SynchronizedLazyImpl: java.lang.Object _value
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
com.google.zxing.oned.Code39Reader: int[] counters
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.DisplayConfiguration displayConfiguration
com.journeyapps.barcodescanner.ViewfinderView: int resultColor
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.app.AlertDialog mPopup
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller
io.flutter.Log: int WARN
androidx.fragment.app.Fragment: boolean mRemoving
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.ResultPoint[] NO_POINTS
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map messageHandlers
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.LayoutIncludeDetector mLayoutIncludeDetector
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table LOWER
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.window.R$attr: int secondaryActivityName
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl this$0
androidx.fragment.app.FragmentManager$5: androidx.fragment.app.FragmentManager this$0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.SparseArrayCompat mStateIds
com.journeyapps.barcodescanner.DecoratedBarcodeView: android.widget.TextView statusView
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object proposedUpdate
com.google.zxing.BinaryBitmap: com.google.zxing.common.BitMatrix matrix
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
com.journeyapps.barcodescanner.RawImageData: int width
kotlin.jvm.internal.CallableReference: java.lang.Class owner
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: android.view.KeyEvent keyEvent
androidx.core.provider.FontRequest: java.util.List mCertificates
androidx.fragment.app.FragmentTransaction: int mBreadCrumbShortTitleRes
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMaxTextSizeInPx
androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE
com.journeyapps.barcodescanner.ViewfinderView$1: com.journeyapps.barcodescanner.ViewfinderView this$0
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.util.concurrent.locks.ReentrantReadWriteLock cacheLock
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
androidx.core.R$id: int accessibility_custom_action_27
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier mTextClassifier
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
androidx.collection.LongSparseArray: long[] mKeys
kotlinx.coroutines.DebugKt: boolean RECOVER_STACK_TRACES
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
androidx.appcompat.widget.AppCompatTextHelper$1: java.lang.ref.WeakReference val$textViewWeak
androidx.fragment.app.BackStackState: java.lang.String mName
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.content.Context mResolvedContext
androidx.fragment.app.FragmentTransition$5: android.view.View val$epicenterView
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float[] VALUES
androidx.appcompat.R$drawable: int abc_dialog_material_background
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12
kotlin.text.DelimitedRangesSequence: int startIndex
androidx.appcompat.resources.R$drawable: int abc_vector_test
com.google.zxing.qrcode.detector.AlignmentPatternFinder: java.util.List possibleCenters
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
androidx.appcompat.widget.ActionMenuView: boolean mReserveOverflow
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable
androidx.appcompat.R$styleable: int[] ColorStateListItem
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnMenuItemClickListener mClickListener
androidx.core.app.ActivityCompat$1: int val$requestCode
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$sharedElementTransition
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
com.journeyapps.barcodescanner.CameraPreview$5: com.journeyapps.barcodescanner.CameraPreview this$0
io.flutter.embedding.android.FlutterView$4: java.lang.Runnable val$onDone
androidx.appcompat.view.ContextThemeWrapper: android.view.LayoutInflater mInflater
com.journeyapps.barcodescanner.camera.DisplayConfiguration: int rotation
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType CHARACTER_SET
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix readMappingMatrix
androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray mWrapped
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTintMode
com.journeyapps.barcodescanner.SourceData: android.graphics.Rect cropRect
androidx.fragment.app.FragmentTransaction: int mBreadCrumbTitleRes
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.String TAG
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int[] mThemeAttrs
androidx.appcompat.R$styleable: int TextAppearance_fontFamily
androidx.fragment.app.FragmentTransition$5: androidx.collection.ArrayMap val$inSharedElements
io.flutter.plugin.common.MethodChannel: java.lang.String name
androidx.appcompat.R$styleable: int[] StateListDrawableItem
androidx.fragment.R$styleable: int Fragment_android_id
androidx.appcompat.widget.Toolbar: int mTitleMarginBottom
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.widget.TextView mTextView
androidx.appcompat.view.menu.BaseMenuWrapper: android.content.Context mContext
androidx.appcompat.view.menu.MenuBuilder: int[] sCategoryToOrder
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_011
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemListenerMethodName
com.google.zxing.common.GridSampler: com.google.zxing.common.GridSampler gridSampler
com.google.zxing.client.android.InactivityTimer$PowerStatusReceiver: com.google.zxing.client.android.InactivityTimer this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleX
com.google.zxing.MultiFormatReader: java.util.Map hints
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact ADDING
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitle
kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS
androidx.appcompat.widget.ActionBarBackgroundDrawable: androidx.appcompat.widget.ActionBarContainer mContainer
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean automaticallyRegisterPlugins
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport parent
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
com.google.zxing.client.android.DecodeFormatManager: java.util.Set AZTEC_FORMATS
androidx.fragment.app.DefaultSpecialEffectsController$5: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mFrames
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView this$0
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.BarcodeView barcodeView
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9
androidx.core.app.ActivityRecreator: java.lang.Class activityThreadClass
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table BINARY
androidx.core.R$styleable: int GradientColor_android_centerX
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
kotlinx.coroutines.scheduling.CoroutineScheduler: long idleWorkerKeepAliveNs
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646
androidx.appcompat.widget.ThemeUtils: int[] PRESSED_STATE_SET
androidx.appcompat.widget.SuggestionsAdapter: int mText2Col
androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.appcompat.widget.ScrollingTabContainerView: int mStackedTabMaxWidth
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE
androidx.core.widget.NestedScrollView: int mMaximumVelocity
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
com.google.zxing.qrcode.detector.FinderPatternFinder: int[] crossCheckStateCount
androidx.appcompat.view.menu.CascadingMenuPopup: int mXOffset
androidx.appcompat.R$dimen: int abc_star_medium
androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode mIconTintMode
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type HC_PLATFORM_VIEW
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback
io.flutter.embedding.android.FlutterTextureView: boolean isAttachedToFlutterRenderer
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks
com.journeyapps.barcodescanner.BarcodeView$1: com.journeyapps.barcodescanner.BarcodeView this$0
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: boolean finished
androidx.appcompat.view.menu.ListMenuItemView: boolean mForceShowIcon
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset
androidx.appcompat.R$string: int abc_searchview_description_search
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
com.google.zxing.client.android.BeepManager: android.content.Context context
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.CollapsibleActionView mWrappedView
androidx.appcompat.R$id: int submenuarrow
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.google.zxing.common.DetectorResult: com.google.zxing.ResultPoint[] points
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup
com.google.zxing.client.android.DecodeFormatManager: java.util.regex.Pattern COMMA_PATTERN
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.Size previewSize
androidx.appcompat.app.TwilightManager$TwilightState: long yesterdaySunset
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked
androidx.appcompat.widget.SearchView: android.os.Bundle mAppSearchData
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable mIconDrawable
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mDeltaTime
androidx.appcompat.widget.AppCompatSeekBar: androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.google.zxing.oned.rss.RSS14Reader: int[] OUTSIDE_GSUM
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClassName
androidx.appcompat.view.menu.MenuItemWrapperICS: androidx.core.internal.view.SupportMenuItem mWrappedObject
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback
com.google.zxing.oned.rss.DataCharacter: int checksumPortion
androidx.appcompat.app.AppCompatDelegateImpl$4: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_11
androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit
androidx.fragment.app.DefaultSpecialEffectsController$4: android.view.ViewGroup val$container
androidx.fragment.app.DefaultSpecialEffectsController$8: java.util.ArrayList val$transitioningViews
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_9
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
androidx.appcompat.R$styleable: int AlertDialog_listLayout
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitleCondensed
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
com.google.zxing.common.StringUtils: boolean ASSUME_SHIFT_JIS
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.google.zxing.oned.ITFReader: int narrowLineWidth
androidx.appcompat.R$styleable: int LinearLayoutCompat_divider
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater mInflater
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType ALLOWED_LENGTHS
androidx.appcompat.resources.R$styleable: int[] GradientColorItem
androidx.appcompat.widget.SearchView: int[] mTemp
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
com.google.zxing.common.CharacterSetECI: java.util.Map NAME_TO_ECI
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.ConcurrentLinkedQueue queue
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.appcompat.view.menu.MenuBuilder: boolean mIsClosing
androidx.appcompat.widget.ListPopupWindow: int mDropDownWindowLayoutType
androidx.appcompat.app.AppCompatViewInflater: androidx.collection.SimpleArrayMap sConstructorMap
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.reflect.Method mMethod
androidx.core.provider.FontRequestWorker$TypefaceResult: android.graphics.Typeface mTypeface
com.google.zxing.qrcode.detector.FinderPattern: float estimatedModuleSize
androidx.appcompat.widget.ActionMenuView: int mGeneratedItemPadding
androidx.appcompat.app.AlertController$AlertParams: android.view.LayoutInflater mInflater
androidx.core.R$id: int accessibility_custom_action_7
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingRight
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.fragment.app.FragmentActivity$1: androidx.fragment.app.FragmentActivity this$0
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNegativeButtonText
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table PUNCT
kotlinx.coroutines.ThreadLocalEventLoop: java.lang.ThreadLocal ref
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
androidx.appcompat.R$styleable: int ActionMode_background
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.WeakHashMap mViewsContainingListeners
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling
androidx.appcompat.widget.ActionBarContainer: android.view.View mActionBarView
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.core.graphics.drawable.IconCompat: int mInt2
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
com.journeyapps.barcodescanner.camera.CameraInstance: boolean cameraClosed
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_16
androidx.core.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemStatusBarContrastEnforced
com.journeyapps.barcodescanner.camera.DisplayConfiguration: com.journeyapps.barcodescanner.Size viewfinderSize
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
io.flutter.embedding.android.DrawableSplashScreen$1: io.flutter.embedding.android.DrawableSplashScreen this$0
com.google.zxing.common.CharacterSetECI: java.util.Map VALUE_TO_ECI
androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor
kotlinx.coroutines.IncompleteStateBox: kotlinx.coroutines.Incomplete state
kotlin.collections.EmptyList: kotlin.collections.EmptyList INSTANCE
androidx.appcompat.widget.Toolbar: int mTitleMarginTop
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
androidx.appcompat.R$styleable: int SearchView_searchIcon
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode
com.journeyapps.barcodescanner.DecoderThread: android.os.Handler$Callback callback
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE
androidx.core.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Key topmostKey
com.google.zxing.common.detector.WhiteRectangleDetector: int height
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.ImageView mIconView
androidx.fragment.app.FragmentState: boolean mRetainInstance
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha
kotlin.jvm.internal.FunctionReference: int flags
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
kotlinx.coroutines.channels.Channel$Factory: int CHANNEL_DEFAULT_CAPACITY
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
androidx.appcompat.app.AlertController$AlertParams: int mCheckedItem
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance
com.google.zxing.common.DecoderResult: java.lang.Integer errorsCorrected
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mPositiveButtonIcon
androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.lifecycle.ClassesInfoCache: java.util.Map mHasLifecycleMethods
androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
androidx.fragment.app.FragmentTransition$6: androidx.collection.ArrayMap val$nameOverrides
androidx.appcompat.app.AlertController$AlertParams: boolean mRecycleOnMeasure
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.AbstractChannel this$0
androidx.appcompat.app.TwilightManager$TwilightState: long nextUpdate
com.journeyapps.barcodescanner.camera.DisplayConfiguration: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy previewScalingStrategy
androidx.core.view.WindowInsetsCompat$Impl20: boolean sVisibleRectReflectionFetched
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
androidx.fragment.app.Fragment: int mState
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 INSTANCE
androidx.appcompat.view.menu.ListMenuItemView: int mTextAppearance
com.journeyapps.barcodescanner.CameraPreview$2: com.journeyapps.barcodescanner.CameraPreview this$0
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
androidx.interpolator.view.animation.LookupTableInterpolator: float mStepSize
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
androidx.appcompat.R$drawable: int abc_ratingbar_material
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
androidx.core.graphics.TypefaceCompatBaseImpl$2: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.appcompat.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.appcompat.app.WindowDecorActionBar$3: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.fragment.app.FragmentContainerView: java.util.ArrayList mDisappearingFragmentChildren
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mInternalImageTint
androidx.appcompat.R$layout: int abc_list_menu_item_radio
androidx.core.R$id: int tag_screen_reader_focusable
androidx.appcompat.view.menu.ActionMenuItemView: boolean mExpandedFormat
androidx.fragment.app.Fragment$AnimationInfo: int mPopEnterAnim
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport job
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.Class sAttachInfoClass
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mForceShowIcon
androidx.core.view.WindowInsetsCompat$BuilderImpl29: android.view.WindowInsets$Builder mPlatBuilder
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: java.util.WeakHashMap mPanesToVisible
androidx.appcompat.app.AppCompatDialog: androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher
androidx.fragment.app.FragmentManager$11: androidx.fragment.app.FragmentManager this$0
androidx.core.R$id: int tag_accessibility_heading
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: char[] PUNCT_CHARS
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates
kotlinx.coroutines.JobImpl: boolean handlesException
androidx.lifecycle.SavedStateHandleController: boolean mIsAttached
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mClickableSpanActionId
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL
androidx.savedstate.SavedStateRegistry: boolean mRestored
com.google.zxing.client.android.R$styleable: int[] zxing_camera_preview
kotlinx.coroutines.CoroutineContextKt: boolean useCoroutinesScheduler
androidx.appcompat.app.AlertDialog: androidx.appcompat.app.AlertController mAlert
androidx.core.app.ActivityCompat$1: android.app.Activity val$activity
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.flutter.view.AccessibilityBridge$5: int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType
androidx.core.graphics.drawable.IconCompat: byte[] mData
androidx.fragment.app.BackStackState: int mBreadCrumbTitleRes
kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
androidx.appcompat.R$styleable: int MenuItem_android_id
androidx.window.R$styleable: int[] ActivityRule
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: boolean mProxyStarted
com.journeyapps.barcodescanner.RawImageData: int height
androidx.appcompat.R$styleable: int CompoundButton_buttonCompat
kotlinx.coroutines.CompletedExceptionally: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU
androidx.appcompat.widget.LinearLayoutCompat: int mGravity
androidx.core.R$id: int accessibility_custom_action_19
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.google.zxing.oned.UPCEANReader: int[] START_END_PATTERN
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.PorterDuff$Mode mTickMarkTintMode
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
androidx.window.R$styleable: int[] SplitPairFilter
androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks
androidx.appcompat.widget.TooltipPopup: android.view.WindowManager$LayoutParams mLayoutParams
androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.WorkQueue localQueue
androidx.appcompat.widget.SearchView: boolean mSubmitButtonEnabled
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.FragmentTransitionImpl val$impl
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRelative
androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitLeft
androidx.lifecycle.LiveData$ObserverWrapper: int mLastVersion
androidx.appcompat.R$string: int abc_menu_shift_shortcut_label
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch
kotlinx.coroutines.DebugKt: boolean DEBUG
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG
androidx.collection.LruCache: int createCount
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon
com.google.zxing.oned.CodaBarReader: char[] ALPHABET
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth
androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom
androidx.core.app.ActivityRecreator$1: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
androidx.fragment.app.FragmentHostCallback: android.app.Activity mActivity
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.Runnable opener
androidx.fragment.app.FragmentAnim$1: androidx.fragment.app.Fragment val$fragment
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$RecycleListView val$listView
com.journeyapps.barcodescanner.DecoderThread: android.os.Handler handler
androidx.core.provider.CallbackWithHandler: androidx.core.provider.FontsContractCompat$FontRequestCallback mCallback
androidx.window.R$attr: int splitLayoutDirection
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner this$0
com.journeyapps.barcodescanner.DecoderThread: com.journeyapps.barcodescanner.Decoder decoder
kotlinx.coroutines.channels.ArrayChannel: int head
androidx.appcompat.app.AlertController: int mViewSpacingRight
androidx.appcompat.R$styleable: int SearchView_suggestionRowLayout
kotlinx.coroutines.DispatcherExecutor: kotlinx.coroutines.CoroutineDispatcher dispatcher
androidx.appcompat.widget.ScrollingTabContainerView: java.lang.Runnable mTabSelector
androidx.appcompat.widget.ActionBarContextView: int mTitleStyleRes
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
androidx.appcompat.R$styleable: int MenuItem_actionViewClass
com.google.zxing.PlanarYUVLuminanceSource: byte[] yuvData
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
androidx.collection.ArraySet: androidx.collection.MapCollections mCollections
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.appcompat.view.menu.ActionMenuItemView: int mSavedPaddingLeft
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR_SET
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl
kotlinx.coroutines.CommonPool: boolean usePrivatePool
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence oldText
androidx.appcompat.R$attr: int textColorSearchUrl
androidx.fragment.app.Fragment: boolean mRetainInstance
androidx.fragment.app.Fragment: boolean mIsCreated
androidx.fragment.app.DefaultSpecialEffectsController$2: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.core.widget.AutoScrollHelper: android.view.View mTarget
androidx.appcompat.widget.LinearLayoutCompat: int mTotalLength
kotlin.ranges.IntProgression: int step
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_7
androidx.appcompat.widget.AppCompatReceiveContentHelper$1: android.view.View val$view
androidx.core.graphics.Insets: int top
androidx.core.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap
androidx.window.R$styleable: int ActivityRule_alwaysExpand
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int mId
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int throwableFields
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int maxPoolSize
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
androidx.appcompat.view.menu.CascadingMenuPopup: android.content.Context mContext
com.journeyapps.barcodescanner.camera.CameraInstance$4: com.journeyapps.barcodescanner.camera.CameraInstance this$0
androidx.appcompat.view.menu.MenuPopupHelper: boolean mForceShowIcon
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.google.zxing.pdf417.PDF417Common: int[] SYMBOL_TABLE
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
androidx.core.widget.NestedScrollView: int[] mScrollConsumed
androidx.lifecycle.LiveData: boolean mDispatchingValue
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.camera.AutoFocusManager autoFocusManager
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.text.DelimitedRangesSequence this$0
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.fragment.app.FragmentState: android.os.Bundle mArguments
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
androidx.core.content.ContextCompat: java.lang.Object sSync
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Class sFontFamily
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU
androidx.appcompat.R$styleable: int ActionBar_subtitle
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence mHintText
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: androidx.appcompat.widget.ForwardingListener this$0
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_93
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
io.flutter.embedding.android.FlutterSurfaceView: boolean isPaused
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode
androidx.appcompat.app.AlertController$AlertParams: android.database.Cursor mCursor
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME
androidx.fragment.app.FragmentTransitionCompat21$5: android.graphics.Rect val$epicenter
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsIn
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
androidx.appcompat.app.TwilightCalculator: long sunrise
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation
com.google.zxing.Result: byte[] rawBytes
androidx.appcompat.widget.ListPopupWindow: int mListItemExpandMaximum
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST
com.google.zxing.common.reedsolomon.GenericGF: int generatorBase
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.appcompat.widget.ViewStubCompat: int mInflatedId
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraInstance cameraInstance
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemIconResId
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView
androidx.lifecycle.viewmodel.R$id: int view_tree_view_model_store_owner
androidx.appcompat.view.menu.ActionMenuItem: int mId
androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP
androidx.appcompat.widget.DrawableUtils: java.lang.Class sInsetsClazz
androidx.core.R$styleable: int FontFamilyFont_fontStyle
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.DetectionResultColumn[] detectionResultColumns
androidx.appcompat.view.menu.CascadingMenuPopup$1: androidx.appcompat.view.menu.CascadingMenuPopup this$0
androidx.appcompat.widget.ActionMenuPresenter: boolean mMaxItemsSet
androidx.appcompat.R$layout: int abc_action_bar_title_item
androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd
androidx.core.provider.FontRequestWorker$4: java.lang.String val$id
androidx.appcompat.app.AlertController$2: android.view.View val$bottom
androidx.appcompat.R$id: int decor_content_parent
androidx.collection.LruCache: int hitCount
androidx.core.graphics.drawable.WrappedDrawableState: int mChangingConfigurations
androidx.appcompat.app.AlertController: android.widget.ListAdapter mAdapter
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.Symbol NOT_IN_STACK
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
com.google.zxing.common.DecoderResult: int structuredAppendSequenceNumber
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderFactory decoderFactory
androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate
androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowViewGroup
androidx.appcompat.widget.Toolbar$2: androidx.appcompat.widget.Toolbar this$0
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mResults
com.google.zxing.common.BitArray: int size
androidx.appcompat.R$styleable: int[] SearchView
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
androidx.fragment.app.Fragment: boolean mAdded
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
com.journeyapps.barcodescanner.CameraPreview$3: com.journeyapps.barcodescanner.CameraPreview this$0
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View val$mutatorView
com.journeyapps.barcodescanner.camera.CenterCropStrategy: java.lang.String TAG
androidx.core.app.ActivityRecreator: java.lang.reflect.Field mainThreadField
androidx.fragment.app.FragmentTransition$6: java.util.ArrayList val$sharedElementsOut
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$exitingViews
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mTappableElementInsets
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.util.WeakHashMap exceptionCtors
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: android.view.animation.Animation animation
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mNeedsAutoSizeText
androidx.appcompat.resources.R$styleable: int[] FontFamilyFont
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
androidx.core.app.ActivityCompat$2: android.app.Activity val$activity
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl mImpl
androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity
androidx.appcompat.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented
androidx.appcompat.widget.ActionBarOverlayLayout$1: androidx.appcompat.widget.ActionBarOverlayLayout this$0
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] PUNCT_TABLE
androidx.core.provider.FontRequestWorker$3: java.lang.String val$id
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.graphics.RectF TEMP_RECTF
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
androidx.appcompat.widget.SearchView$5: androidx.appcompat.widget.SearchView this$0
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle
com.google.zxing.client.android.DecodeFormatManager: java.util.Set DATA_MATRIX_FORMATS
androidx.appcompat.R$id: int message
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.android.FlutterView this$0
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sResourcesImplField
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.Menu menu
androidx.appcompat.widget.ForwardingListener: int mLongPressTimeout
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Object mRealOwner
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.KeyboardManager keyboardManager
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener
androidx.appcompat.resources.R$styleable: int[] GradientColor
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
androidx.cursoradapter.widget.ResourceCursorAdapter: int mDropDownLayout
androidx.appcompat.R$drawable: int abc_seekbar_track_material
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasXOffset
com.google.zxing.common.PerspectiveTransform: float a11
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
androidx.window.R$attr: int splitMinWidth
androidx.appcompat.app.AlertController: androidx.appcompat.app.AppCompatDialog mDialog
com.google.zxing.qrcode.decoder.FormatInformation: byte dataMask
androidx.appcompat.widget.ThemeUtils: int[] SELECTED_STATE_SET
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method nameMethod
androidx.appcompat.R$styleable: int[] FragmentContainerView
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.BarcodeCallback callback
androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView
androidx.fragment.app.FragmentTransitionCompat21$2: android.view.View val$fragmentView
androidx.fragment.app.FragmentManagerState: int mBackStackIndex
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousNodeId
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
androidx.appcompat.app.AppCompatActivity$1: androidx.appcompat.app.AppCompatActivity this$0
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
androidx.fragment.app.FragmentTransition$1: androidx.fragment.app.Fragment val$outFragment
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
kotlinx.coroutines.scheduling.TasksKt: int BLOCKING_DEFAULT_PARALLELISM
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mContext
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.Class mMenuBuilderClass
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_110
com.google.zxing.oned.UPCEANReader: int[][] L_PATTERNS
androidx.core.widget.NestedScrollView: int mTouchSlop
androidx.appcompat.widget.Toolbar$1: androidx.appcompat.widget.Toolbar this$0
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord firstOutTransaction
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.common.BitArray information
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor
androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions
com.google.zxing.client.android.AmbientLightManager: android.os.Handler handler
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.String mMethodName
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
androidx.core.content.res.ResourcesCompat: java.lang.ThreadLocal sTempTypedValue
com.journeyapps.barcodescanner.BarcodeView: android.os.Handler$Callback resultCallback
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
androidx.savedstate.Recreator$SavedStateProvider: java.util.Set mClasses
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher
kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
androidx.appcompat.widget.ForwardingListener: int mTapTimeout
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityViewCommand mCommand
androidx.fragment.app.FragmentHostCallback: android.os.Handler mHandler
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mExitTransitionCallback
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
androidx.appcompat.widget.SearchView: android.graphics.drawable.Drawable mSearchHintIcon
androidx.appcompat.widget.Toolbar: int mTitleTextAppearance
androidx.appcompat.R$styleable: int[] StateListDrawable
androidx.appcompat.view.menu.ListMenuItemView: android.content.Context mTextAppearanceContext
androidx.appcompat.app.AlertController: int mAlertDialogLayout
kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler
com.google.zxing.qrcode.detector.FinderPatternFinder: com.google.zxing.common.BitMatrix image
io.flutter.Log: int DEBUG
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$AlertParams this$0
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets[] mOverriddenInsets
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode ECI
androidx.appcompat.view.menu.CascadingMenuPopup$3: androidx.appcompat.view.menu.CascadingMenuPopup this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] EMPTY
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.ResultPoint[] NO_POINTS
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int[] mFrameTimes
androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable
androidx.appcompat.widget.AppCompatEditText: androidx.core.widget.TextViewOnReceiveContentListener mDefaultOnReceiveContentListener
com.google.zxing.oned.UPCEANExtension2Support: java.lang.StringBuilder decodeRowStringBuffer
com.journeyapps.barcodescanner.ViewfinderView: int scannerAlpha
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.Fragment val$outFragment
androidx.core.R$styleable: int FontFamilyFont_fontWeight
androidx.fragment.R$styleable: int[] FragmentContainerView
com.google.zxing.common.DecoderResult: int numBits
kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List rows
androidx.appcompat.R$styleable: int MenuView_android_itemTextAppearance
androidx.fragment.app.Fragment$1: androidx.fragment.app.Fragment this$0
com.google.zxing.client.android.DecodeFormatManager: java.util.Set PRODUCT_FORMATS
com.google.zxing.pdf417.decoder.Codeword: int rowNumber
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
io.flutter.embedding.android.FlutterTextureView: boolean isPaused
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton
androidx.cursoradapter.widget.CursorAdapter: boolean mAutoRequery
androidx.core.widget.TextViewCompat$OreoCallback: boolean mInitializedMenuBuilderReferences
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
androidx.activity.result.ActivityResultRegistry: java.util.Random mRandom
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: java.lang.String encodedName
androidx.appcompat.widget.RtlSpacingHelper: int mStart
androidx.fragment.app.FragmentTransitionCompat21$2: java.util.ArrayList val$exitingViews
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
com.journeyapps.barcodescanner.SourceData: com.journeyapps.barcodescanner.RawImageData data
androidx.fragment.app.DefaultSpecialEffectsController$9: androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo val$transitionInfo
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.journeyapps.barcodescanner.CaptureManager: java.lang.String missingCameraPermissionDialogMessage
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnKeyListener mOnKeyListener
androidx.collection.SparseArrayCompat: java.lang.Object DELETED
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
androidx.appcompat.R$layout: int abc_search_dropdown_item_icons_2line
androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_128
androidx.appcompat.widget.SuggestionsAdapter: boolean mClosed
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl
androidx.appcompat.R$dimen: int abc_action_bar_stacked_max_height
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI UTF8
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State INVISIBLE
com.journeyapps.barcodescanner.CaptureManager: com.google.zxing.client.android.InactivityTimer inactivityTimer
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.zxing.common.PerspectiveTransform: float a33
androidx.core.graphics.drawable.IconCompat: java.lang.String mString1
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
com.google.zxing.client.android.DecodeFormatManager: java.util.Set INDUSTRIAL_FORMATS
androidx.fragment.app.Fragment: android.view.View mView
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory mFactory
androidx.core.R$id: int tag_transition_group
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.CharSequence $this_splitToSequence
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementTargetNames
com.google.zxing.LuminanceSource: int width
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnCancelListener mOnCancelListener
androidx.core.widget.AutoScrollHelper: int DEFAULT_ACTIVATION_DELAY
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.google.zxing.pdf417.decoder.ec.ModulusPoly: int[] coefficients
androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown
com.google.zxing.client.android.R$id: int zxing_decode_failed
androidx.appcompat.R$styleable: int CompoundButton_buttonTint
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mTimeoutMs
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mTargetBounds
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
androidx.core.R$styleable: int GradientColor_android_tileMode
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_15
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
androidx.collection.ArraySet: java.lang.Object[] sTwiceBaseCache
androidx.core.R$id: int tag_on_apply_window_listener
com.google.zxing.common.BitSource: byte[] bytes
androidx.core.os.ExecutorCompat$HandlerExecutor: android.os.Handler mHandler
androidx.appcompat.app.TwilightManager: android.location.LocationManager mLocationManager
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState
com.journeyapps.barcodescanner.CameraPreview: int openedOrientation
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache
androidx.appcompat.view.menu.StandardMenuPopup: boolean mHasContentWidth
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutNumericChar
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCategory
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mFillRule
kotlinx.coroutines.LazyStandaloneCoroutine: kotlin.coroutines.Continuation continuation
androidx.appcompat.widget.ListPopupWindow: android.database.DataSetObserver mObserver
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraSettings cameraSettings
androidx.appcompat.view.menu.ListMenuPresenter: android.view.LayoutInflater mInflater
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect childRect
androidx.window.core.Version: int major
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mStrategy
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State GONE
androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
androidx.fragment.app.FragmentState: java.lang.String mWho
kotlin.ranges.IntProgressionIterator: int next
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeStepGranularityInPx
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object result
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp
androidx.appcompat.app.AlertController$AlertParams: androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver
androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: float average
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.BoundingBox boundingBox
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: boolean mLoadedAnim
androidx.fragment.app.BackStackState: int[] mOps
androidx.fragment.app.FragmentTransaction: int mPopExitAnim
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray mAutofillConfigurations
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact REMOVING
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int[] crossCheckStateCount
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraSurface surface
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
com.journeyapps.barcodescanner.camera.AutoFocusManager$1: com.journeyapps.barcodescanner.camera.AutoFocusManager this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTintMode
kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingLeft
com.journeyapps.barcodescanner.DecoderResultPointCallback: com.journeyapps.barcodescanner.Decoder decoder
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.core.R$id: int tag_accessibility_pane_title
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String tooltip
androidx.appcompat.R$styleable: int[] TextAppearance
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
com.google.zxing.datamatrix.decoder.DataBlock: byte[] codewords
androidx.appcompat.widget.SearchView: android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener
androidx.core.R$id: int accessibility_custom_action_26
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorFilter mCursorFilter
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
androidx.collection.LruCache: int putCount
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
com.google.zxing.MultiFormatReader: com.google.zxing.Reader[] readers
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat UPC_A
androidx.appcompat.R$styleable: int[] View
androidx.appcompat.widget.ButtonBarLayout: int mMinimumHeight
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo
androidx.appcompat.R$styleable: int AppCompatTextView_drawableRightCompat
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10
androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String schedulerName
androidx.appcompat.view.menu.BaseMenuPresenter: int mMenuLayoutRes
androidx.appcompat.R$styleable: int SearchView_android_maxWidth
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager
kotlin.jvm.internal.ClassReference: java.util.Map simpleNames
androidx.appcompat.view.menu.MenuPopupHelper: boolean mOverflowOnly
androidx.appcompat.R$styleable: int MenuItem_android_checkable
androidx.appcompat.widget.ViewStubCompat: int mLayoutResource
androidx.core.R$id: int accessibility_custom_action_1
kotlinx.coroutines.flow.internal.SafeCollector: int collectContextSize
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableEndTint
io.flutter.view.VsyncWaiter$1$1: long val$cookie
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$enterTransition
androidx.appcompat.widget.VectorEnabledTintResources: boolean sCompatVectorFromResourcesEnabled
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
androidx.core.app.ActivityRecreator: java.lang.reflect.Method requestRelaunchActivityMethod
androidx.fragment.app.SpecialEffectsController$Operation: boolean mIsCanceled
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: int secondDigit
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue
kotlin.text.DelimitedRangesSequence$iterator$1: int currentStartIndex
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader mShader
com.google.zxing.oned.UPCEANExtensionSupport: com.google.zxing.oned.UPCEANExtension5Support fiveSupport
kotlin.text.DelimitedRangesSequence$iterator$1: int counter
com.google.zxing.oned.rss.RSS14Reader: int[] INSIDE_GSUM
com.google.zxing.oned.UPCEANExtension5Support: int[] CHECK_DIGIT_ENCODINGS
androidx.appcompat.R$attr: int colorSwitchThumbNormal
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.view.ActionMode val$mode
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList mIconTintList
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
androidx.core.graphics.Insets: androidx.core.graphics.Insets NONE
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
androidx.core.widget.TextViewCompat$OreoCallback: boolean mCanUseMenuBuilderReferences
androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.reflect.Method mResolvedMethod
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.DisplayConfiguration displayConfiguration
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems
com.google.zxing.pdf417.PDF417ResultMetadata: java.lang.String fileName
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller
androidx.appcompat.R$attr: int actionOverflowButtonStyle
androidx.appcompat.widget.AppCompatTextHelper$2: int val$style
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionProviderConstructorArguments
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL
androidx.appcompat.widget.DropDownListView: java.lang.reflect.Field mIsChildViewEnabled
androidx.appcompat.widget.ScrollingTabContainerView: int mMaxTabWidth
androidx.appcompat.app.AlertController: android.widget.TextView mTitleView
com.google.zxing.client.android.R$layout: int zxing_capture
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex
androidx.core.provider.FontRequestWorker$1: int val$style
com.google.zxing.datamatrix.decoder.Version$ECB: int dataCodewords
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mInflater
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost
kotlinx.coroutines.UndispatchedMarker: kotlinx.coroutines.UndispatchedMarker INSTANCE
androidx.appcompat.R$styleable: int Toolbar_titleMarginStart
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab mTab
androidx.appcompat.widget.DropDownListView: int mMotionPosition
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.appcompat.view.menu.MenuBuilder: boolean mIsActionItemsStale
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
androidx.appcompat.app.AlertController$AlertParams: android.content.Context mContext
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
com.journeyapps.barcodescanner.DefaultDecoderFactory: java.util.Collection decodeFormats
androidx.appcompat.resources.R$styleable: int[] StateListDrawable
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon
com.journeyapps.barcodescanner.camera.CameraSettings: boolean continuousFocusEnabled
androidx.fragment.app.Fragment: float mPostponedAlpha
com.journeyapps.barcodescanner.camera.CameraSettings: boolean autoFocusEnabled
kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE
androidx.appcompat.widget.LinearLayoutCompat: int mOrientation
androidx.core.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType ORIENTATION
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: androidx.appcompat.widget.ListPopupWindow this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.appcompat.widget.LinearLayoutCompat: int mDividerHeight
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
androidx.appcompat.widget.ListPopupWindow: android.view.View mDropDownAnchorView
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
com.journeyapps.barcodescanner.camera.CameraManager: boolean previewing
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment lastIn
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
androidx.appcompat.R$attr: int actionBarWidgetTheme
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
androidx.fragment.app.DefaultSpecialEffectsController$1: java.util.List val$awaitingContainerChanges
androidx.appcompat.R$styleable: int AlertDialog_buttonPanelSideLayout
androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean ANDROID_DETECTED
androidx.appcompat.R$id: int action_bar
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.appcompat.R$styleable: int MenuItem_android_onClick
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
io.flutter.embedding.android.FlutterSplashView: java.lang.String transitioningIsolateId
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_PATH
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupOrder
androidx.appcompat.widget.ActionMenuPresenter: int mActionItemWidthLimit
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int rngState
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
androidx.appcompat.R$styleable: int MenuGroup_android_menuCategory
androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat[] $VALUES
androidx.appcompat.widget.ActionBarContainer: boolean mIsStacked
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNegativeText
androidx.fragment.app.FragmentHostCallback: android.content.Context mContext
androidx.fragment.app.FragmentTransition$4: android.view.View val$nonExistentView
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1
androidx.appcompat.R$styleable: int MenuItem_numericModifiers
androidx.appcompat.widget.SuggestionsAdapter: android.content.Context mProviderContext
androidx.fragment.app.SpecialEffectsController$Operation$1: androidx.fragment.app.SpecialEffectsController$Operation this$0
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
androidx.appcompat.R$drawable: int abc_btn_check_material_anim
androidx.appcompat.widget.ActionMenuPresenter: int mMaxItems
androidx.appcompat.R$style: int Animation_AppCompat_Tooltip
androidx.appcompat.R$styleable: int MenuItem_android_checked
com.google.zxing.qrcode.decoder.BitMatrixParser: boolean mirror
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean hasSkipped
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Method sGetViewRootImplMethod
androidx.appcompat.R$styleable: int RecycleListView_paddingTopNoTitle
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.view.View mCustomView
androidx.appcompat.R$styleable: int MenuView_android_itemBackground
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType OTHER
androidx.appcompat.widget.ListPopupWindow: int mDropDownVerticalOffset
androidx.appcompat.R$id: int action_bar_title
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table MIXED
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object[][] THREE_DIGIT_DATA_LENGTH
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.FragmentTransitionImpl val$impl
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingBottomNoButtons
androidx.appcompat.widget.ToolbarWidgetWrapper: int mNavigationMode
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String mGroupName
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA
com.journeyapps.barcodescanner.CaptureActivity: com.journeyapps.barcodescanner.DecoratedBarcodeView barcodeScannerView
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStopQueued
androidx.appcompat.view.SupportActionModeWrapper: android.content.Context mContext
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q
androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.core.view.ActionProvider itemActionProvider
androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus
kotlin.jvm.internal.PackageReference: java.lang.String moduleName
androidx.appcompat.widget.TooltipPopup: android.view.View mContentView
com.journeyapps.barcodescanner.RotationListener: com.journeyapps.barcodescanner.RotationCallback callback
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.content.ClipDescription mDescription
kotlinx.coroutines.scheduling.LimitingDispatcher: kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher dispatcher
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.PorterDuff$Mode mTintMode
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback
io.flutter.embedding.android.FlutterSurfaceView: boolean isAttachedToFlutterRenderer
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableRight
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext collectContext
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity3ParamsMethod
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode mButtonTintMode
androidx.window.R$id: int ltr
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceArray buffer
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.qrcode.decoder.Decoder decoder
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection
androidx.fragment.app.FragmentTransition$6: android.view.View val$nonExistentView
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.Fragment val$outFragment
androidx.core.content.res.ResourcesCompat$FontCallback$1: android.graphics.Typeface val$typeface
androidx.core.R$id: int accessibility_custom_action_8
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConstructorFetched
androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates
com.google.zxing.client.android.R$id: int zxing_status_view
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE
androidx.appcompat.widget.AppCompatAutoCompleteTextView: int[] TINT_ATTRS
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesNonTouch
com.google.zxing.qrcode.detector.AlignmentPatternFinder: com.google.zxing.common.BitMatrix image
androidx.appcompat.widget.VectorEnabledTintResources: java.lang.ref.WeakReference mContextRef
androidx.appcompat.widget.AppCompatCheckedTextView: int[] TINT_ATTRS
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterView val$flutterView
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat DATA_MATRIX
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
androidx.fragment.app.SpecialEffectsController$1: androidx.fragment.app.SpecialEffectsController this$0
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState
androidx.appcompat.view.menu.StandardMenuPopup$2: androidx.appcompat.view.menu.StandardMenuPopup this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
com.journeyapps.barcodescanner.SourceData: boolean previewMirrored
com.google.zxing.client.android.R$color: int zxing_viewfinder_laser
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead queue
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mMandatorySystemGestureInsets
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$exitingViews
androidx.fragment.app.FragmentTransitionImpl$1: int val$numSharedElements
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.core.os.CancellationSignal mSignal
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.LayoutInflater mInflater
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
androidx.core.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment firstOut
androidx.appcompat.widget.ButtonBarLayout: boolean mAllowStacking
io.flutter.plugin.localization.LocalizationPlugin$1: io.flutter.plugin.localization.LocalizationPlugin this$0
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mTempRect
com.google.zxing.common.detector.WhiteRectangleDetector: int width
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sIOThreadExecutor
androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint topRight
androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext
com.journeyapps.barcodescanner.camera.CameraThread: com.journeyapps.barcodescanner.camera.CameraThread instance
androidx.appcompat.content.res.AppCompatResources: java.lang.ThreadLocal TL_TYPED_VALUE
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat EAN_8
androidx.core.R$styleable: int GradientColorItem_android_color
androidx.window.R$attr: int activityAction
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.core.content.res.ResourcesCompat$FontCallback$2: androidx.core.content.res.ResourcesCompat$FontCallback this$0
androidx.appcompat.R$attr: int alertDialogStyle
androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
com.google.zxing.oned.Code93Reader: int[] counters
androidx.appcompat.widget.RtlSpacingHelper: int mEnd
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
androidx.fragment.app.Fragment: boolean mRestored
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter
androidx.appcompat.R$id: int parentPanel
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect previewFramingRect
androidx.appcompat.widget.TintContextWrapper: java.util.ArrayList sCache
androidx.appcompat.R$styleable: int[] AppCompatTheme
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: java.lang.Throwable e
com.google.zxing.oned.rss.RSS14Reader: int[] INSIDE_ODD_WIDEST
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutNumericModifiers
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
com.journeyapps.barcodescanner.camera.CameraSettings: boolean autoTorchEnabled
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult
androidx.fragment.R$styleable: int FragmentContainerView_android_name
androidx.appcompat.widget.ListPopupWindow: boolean mModal
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.R$drawable: int abc_seekbar_thumb_material
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.appcompat.view.SupportMenuInflater: java.lang.Object mRealOwner
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: java.util.ArrayList mActionModes
androidx.fragment.app.Fragment: java.util.ArrayList mOnPreAttachedListeners
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
androidx.appcompat.widget.SearchView: int mCollapsedImeOptions
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo
androidx.appcompat.widget.AppCompatProgressBarHelper: int[] TINT_ATTRS
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableStartTint
net.touchcapture.qr.flutterqr.QRViewFactory: io.flutter.plugin.common.BinaryMessenger messenger
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.fragment.app.SpecialEffectsController$Operation mOperation
com.google.zxing.aztec.decoder.Decoder$1: int[] $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table
androidx.appcompat.view.menu.ListMenuPresenter: android.content.Context mContext
io.flutter.embedding.android.FlutterSplashView$3: io.flutter.embedding.android.FlutterSplashView this$0
androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
com.google.zxing.LuminanceSource: int height
com.journeyapps.barcodescanner.DecoderThread: android.os.Handler resultHandler
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener
androidx.appcompat.resources.R$styleable: int[] ColorStateListItem
androidx.core.provider.FontRequestWorker: java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE
kotlin.ranges.IntProgressionIterator: boolean hasNext
androidx.fragment.app.Fragment$AnimationInfo: androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener
androidx.fragment.app.FragmentHostCallback: int mWindowAnimations
com.google.zxing.datamatrix.decoder.Version: int symbolSizeRows
kotlinx.coroutines.CompletedContinuation: java.lang.Object idempotentResume
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mEnded
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnActionExpandListener mOnActionExpandListener
androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.appcompat.app.AlertController$ButtonHandler: java.lang.ref.WeakReference mDialog
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRtl
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
kotlinx.coroutines.InvokeOnCancel: kotlin.jvm.functions.Function1 handler
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mEpicenterBounds
com.google.zxing.client.android.R$string: int zxing_msg_camera_framework_bug
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs
kotlinx.coroutines.scheduling.NonBlockingContext: kotlinx.coroutines.scheduling.NonBlockingContext INSTANCE
androidx.core.app.ActivityRecreator$1: java.lang.Object val$token
androidx.core.view.ContentInfoCompat: int mFlags
androidx.appcompat.view.menu.MenuItemImpl: int mCategoryOrder
com.journeyapps.barcodescanner.BarcodeResult: com.journeyapps.barcodescanner.SourceData sourceData
com.journeyapps.barcodescanner.camera.CameraInstance$2: com.journeyapps.barcodescanner.camera.CameraInstance this$0
androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sStableInsets
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.qrcode.decoder.Version parsedVersion
kotlinx.coroutines.internal.ArrayQueue: int head
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
androidx.appcompat.R$styleable: int Toolbar_title
androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
androidx.appcompat.widget.SearchView: boolean mClearingFocus
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mTabView
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch
kotlinx.coroutines.CommonPool: kotlinx.coroutines.CommonPool INSTANCE
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.Fragment val$inFragment
androidx.collection.MapCollections$ArrayIterator: int mSize
androidx.appcompat.R$dimen: int abc_star_big
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext context
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.appcompat.view.menu.MenuItemImpl: boolean mIsActionViewExpanded
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
androidx.fragment.app.DefaultSpecialEffectsController$3: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mFrameworkMinimumSdk
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.appcompat.R$string: int abc_menu_space_shortcut_label
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mCachedTintMode
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: java.lang.reflect.Method sRebaseMethod
io.flutter.plugin.editing.TextEditingDelta: int deltaEnd
com.google.zxing.qrcode.detector.FinderPatternFinder: java.util.List possibleCenters
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1: int[] $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mSlopBounds
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
kotlinx.coroutines.flow.AbstractFlow$collect$1: int label
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Method sActionBarOnMenuKeyMethod
androidx.arch.core.executor.DefaultTaskExecutor: java.util.concurrent.ExecutorService mDiskIO
com.google.zxing.qrcode.decoder.Version: int[] alignmentPatternCenters
androidx.appcompat.R$styleable: int[] GradientColor
kotlinx.coroutines.channels.ArrayChannel: int size
com.google.zxing.oned.UPCEANExtension5Support: int[] decodeMiddleCounters
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMajor
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
androidx.appcompat.widget.AppCompatProgressBarHelper: android.widget.ProgressBar mView
androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mRootViewVisibleInsets
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object mTransition
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
androidx.appcompat.widget.ViewStubCompat: java.lang.ref.WeakReference mInflatedViewRef
androidx.appcompat.view.menu.MenuBuilder: boolean mQwertyMode
androidx.fragment.app.FragmentStateManager$1: android.view.View val$fragmentView
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean mDelegateTargeted
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.animation.AnimatorSet mAnimatorSet
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.drawable.Drawable mTickMark
androidx.appcompat.widget.Toolbar: int mTitleMarginEnd
androidx.appcompat.R$styleable: int SearchView_android_inputType
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnDismissListener mOnDismissListener
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: java.lang.StringBuilder buffer
androidx.appcompat.widget.SearchView: android.widget.ImageView mCloseButton
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Object mAction
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.view.menu.MenuBuilder: android.view.View mHeaderView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.ListMenuPresenter this$0
androidx.fragment.app.FragmentManager: int mCurState
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat RSS_EXPANDED
androidx.appcompat.view.menu.MenuItemImpl: int mId
androidx.appcompat.view.menu.MenuBuilder: android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo
com.google.zxing.oned.rss.expanded.ExpandedRow: int rowNumber
androidx.fragment.R$animator: int fragment_open_enter
androidx.appcompat.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod
androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager sInstance
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext
com.journeyapps.barcodescanner.camera.CameraThread: android.os.HandlerThread thread
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Key key
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.view.menu.ActionMenuItem mNavItem
androidx.appcompat.R$styleable: int SearchView_commitIcon
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2
androidx.appcompat.widget.TooltipCompatHandler$2: androidx.appcompat.widget.TooltipCompatHandler this$0
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar
androidx.appcompat.app.AlertController$AlertParams: int mViewLayoutResId
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$AlertParams this$0
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
androidx.appcompat.R$styleable: int TextAppearance_android_textFontWeight
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
kotlin.jvm.internal.FunctionReference: int arity
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: java.lang.String[] SETS
kotlinx.coroutines.DebugKt: boolean ASSERTIONS_ENABLED
androidx.appcompat.widget.SearchView: java.lang.Runnable mUpdateDrawableStateRunnable
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentStore mFragmentStore
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultCallback val$callback
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
com.journeyapps.barcodescanner.CaptureActivity: com.journeyapps.barcodescanner.CaptureManager capture
com.google.zxing.oned.ITFReader: int[][] END_PATTERN_REVERSED
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.ActionMode$Callback mCallback
com.google.zxing.datamatrix.decoder.Decoder: com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder
com.journeyapps.barcodescanner.camera.DisplayConfiguration: boolean center
androidx.appcompat.R$styleable: int MenuItem_iconTint
androidx.core.R$styleable: int GradientColor_android_endColor
androidx.appcompat.app.ResourcesFlusher: boolean sResourcesImplFieldFetched
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] a
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo mMenuInfo
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.R$attr: int primaryActivityName
androidx.fragment.app.FragmentTransition$3: androidx.core.os.CancellationSignal val$signal
com.google.zxing.oned.UPCEANExtension5Support: java.lang.StringBuilder decodeRowStringBuffer
androidx.appcompat.widget.Toolbar: int mGravity
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mChangingConfigurations
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mRetreatKey
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
androidx.appcompat.R$id: int textSpacerNoTitle
androidx.core.R$id: int accessibility_custom_action_29
androidx.fragment.app.Fragment$AnimationInfo: android.animation.Animator mAnimator
kotlinx.coroutines.scheduling.NanoTimeSource: kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE
androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: int mNumPostponed
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode MACRO
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
com.google.zxing.client.android.AmbientLightManager: com.journeyapps.barcodescanner.camera.CameraManager cameraManager
androidx.appcompat.R$id: int search_voice_btn
androidx.appcompat.widget.DropDownListView: int mSelectionLeftPadding
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: java.math.BigInteger[] EXP900
androidx.appcompat.R$styleable: int[] AppCompatTextHelper
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
androidx.appcompat.R$id: int title_template
androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter val$this$0
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_viewfinder_laser
com.journeyapps.barcodescanner.CameraPreview: boolean useTextureView
androidx.fragment.app.FragmentManager: java.util.ArrayList mPostponedTransactions
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
androidx.fragment.app.FragmentManager$7: android.view.ViewGroup val$container
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mEffectiveRampDown
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord
androidx.appcompat.R$layout: int abc_tooltip
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded
androidx.appcompat.view.ActionMode: boolean mTitleOptionalHint
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView
androidx.appcompat.R$styleable: int TextAppearance_textAllCaps
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI GB18030
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mSubtitle
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
androidx.core.text.PrecomputedTextCompat$Params: android.text.PrecomputedText$Params mWrapped
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: boolean sReflectionSucceeded
androidx.core.R$styleable: int GradientColor_android_endY
com.google.zxing.common.reedsolomon.GenericGF: int[] logTable
com.journeyapps.barcodescanner.DefaultDecoderFactory: java.lang.String characterSet
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE
com.google.zxing.datamatrix.decoder.Version: int totalCodewords
androidx.appcompat.R$styleable: int PopupWindow_android_popupBackground
androidx.appcompat.R$attr: int actionBarStyle
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect viewBounds
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.widget.AppCompatSpinner this$0
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextDirectionHeuristic mTextDir
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration
androidx.core.R$styleable: int ColorStateListItem_android_color
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType ISSUE_NUMBER
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableTransition
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
androidx.appcompat.R$styleable: int ActionMode_titleTextStyle
com.journeyapps.barcodescanner.CaptureManager: int cameraPermissionReqCode
androidx.appcompat.R$styleable: int ActionBar_title
androidx.appcompat.app.AlertController: int mSingleChoiceItemLayout
com.google.zxing.oned.rss.expanded.decoders.DecodedChar: char value
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Field sDialogKeyListenerField
androidx.core.content.ContextCompat: java.lang.Object sLock
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl handler
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
androidx.fragment.app.DefaultSpecialEffectsController$7: android.graphics.Rect val$lastInEpicenterRect
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: android.view.animation.Interpolator mInterpolator
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMinor
com.google.zxing.qrcode.decoder.Version$ECB: int dataCodewords
androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_result_view
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
androidx.window.R$attr: int activityName
androidx.appcompat.widget.AppCompatTextHelper$2: android.graphics.Typeface val$typeface
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mEndAction
androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup
androidx.appcompat.R$string: int abc_menu_ctrl_shortcut_label
androidx.core.text.PrecomputedTextCompat$Params: int mHyphenationFrequency
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
androidx.appcompat.R$color: int abc_tint_seek_thumb
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1 this$1
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha
androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners
androidx.appcompat.widget.SearchView: java.lang.CharSequence mOldQueryText
androidx.appcompat.widget.SuggestionsAdapter: int mText2UrlCol
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
androidx.appcompat.R$styleable: int View_android_theme
com.google.zxing.qrcode.detector.AlignmentPattern: float estimatedModuleSize
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: boolean mIsBack
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list
com.google.zxing.client.android.BeepManager: boolean vibrateEnabled
androidx.core.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrtTextViewBoundsExpanded
kotlin.random.Random: kotlin.random.Random$Default Default
androidx.core.view.LayoutInflaterCompat: java.lang.reflect.Field sLayoutInflaterFactory2Field
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.jvm.functions.Function1 $this_bindCancellationFun
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.appcompat.R$attr: int listMenuViewStyle
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCheckable
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$State mFinalState
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.internal.LockFreeLinkedListNode $node
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
androidx.fragment.app.Fragment: boolean mDetached
kotlin.jvm.internal.ClassReference: java.lang.Class jClass
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mEnsureImeVisible
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern bottomLeft
com.journeyapps.barcodescanner.RotationListener: int lastRotation
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: android.view.MenuItem$OnActionExpandListener mObject
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PRESS_AND_HOLD
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference
androidx.core.R$styleable: int GradientColor_android_startY
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Window$Callback mWindowCallback
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 onCancellation
androidx.appcompat.app.AlertController: int mMultiChoiceItemLayout
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.maxicode.decoder.Decoder decoder
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampUpDuration
androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover
androidx.core.R$id: int accessibility_custom_action_22
androidx.fragment.app.FragmentManager$8: androidx.fragment.app.Fragment val$parent
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$sharedElementsIn
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: int[] TINT_ATTRS
androidx.window.embedding.SplitRule: int minWidth
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector PRE_API_29_HIDDEN_METHOD_INVOKER
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
androidx.core.graphics.drawable.IconCompat: int mInt1
androidx.appcompat.widget.Toolbar: int mMaxButtonHeight
androidx.appcompat.R$attr: int colorAccent
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.journeyapps.barcodescanner.CaptureManager: int orientationLock
com.google.zxing.common.PerspectiveTransform: float a23
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN
androidx.appcompat.R$id: int search_go_btn
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object LIST_EMPTY
androidx.appcompat.R$dimen: int abc_star_small
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key
androidx.savedstate.SavedStateRegistry: androidx.arch.core.internal.SafeIterableMap mComponents
androidx.core.app.ActivityRecreator$3: java.lang.Object val$activityThread
io.flutter.plugin.platform.PlatformPlugin$2: io.flutter.plugin.platform.PlatformPlugin this$0
androidx.appcompat.widget.ActionBarContextView: int mCloseItemLayout
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: boolean sRebaseMethodFetched
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int mOriginalHorizontalOffset
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
kotlinx.coroutines.scheduling.TasksKt: int CORE_POOL_SIZE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.zxing.oned.rss.FinderPattern: int[] startEnd
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertController$AlertParams P
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay
androidx.window.core.Version: int minor
com.google.zxing.oned.EANManufacturerOrgSupport: java.util.List countryIdentifiers
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
com.google.zxing.oned.Code93Reader: int[] CHARACTER_ENCODINGS
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mFocusedView
androidx.appcompat.widget.SearchView$2: androidx.appcompat.widget.SearchView this$0
androidx.window.embedding.SplitRule: float splitRatio
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar
com.google.zxing.common.BitMatrix: int width
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Field sOverlapAnchorField
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.google.zxing.client.android.R$string: int zxing_button_ok
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE
androidx.appcompat.view.menu.MenuBuilder: boolean mOverrideVisibleItems
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: int encodedValue
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred
androidx.core.content.res.ResourcesCompat: java.util.WeakHashMap sColorStateCaches
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getDescriptorMethod
com.google.zxing.pdf417.decoder.Codeword: int value
kotlinx.coroutines.CancellableContinuationImpl: int _decision
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sViewAttachInfoField
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher IO
com.google.zxing.client.android.DecodeFormatManager: java.util.Set QR_CODE_FORMATS
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType[] $VALUES
androidx.appcompat.view.menu.StandardMenuPopup: boolean mWasDismissed
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean mayHaveLocalTasks
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mSystemWindowInsets
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext left
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default
io.flutter.plugin.editing.TextEditingDelta: int newSelectionEnd
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: long messageData
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
androidx.appcompat.view.menu.ActionMenuItem: int mFlags
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView flutterView
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleRes
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory
com.google.zxing.pdf417.decoder.BarcodeMetadata: int columnCount
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher dispatcher
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 onCancellation
androidx.fragment.app.Fragment: int mBackStackNesting
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
androidx.core.R$id: int accessibility_custom_action_12
androidx.appcompat.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged
androidx.appcompat.view.menu.ActionMenuItem: android.content.Context mContext
androidx.appcompat.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemEnabled
androidx.fragment.app.Fragment: boolean mPerformedCreateView
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.appcompat.widget.SearchView$SavedState: boolean isIconified
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean lastInIsPop
androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
androidx.window.R$styleable: int SplitPairRule_splitRatio
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage
androidx.fragment.app.FragmentStore: java.util.HashMap mActive
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1 INSTANCE
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets mPlatformInsets
com.journeyapps.barcodescanner.RawImageData: byte[] data
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleAttr
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
com.google.zxing.oned.CodaBarReader: int counterLength
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
com.google.zxing.client.android.R$raw: int zxing_beep
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.journeyapps.barcodescanner.ViewfinderView: android.graphics.Paint paint
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE
com.journeyapps.barcodescanner.camera.CameraInstance: boolean open
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.Throwable cause
androidx.fragment.app.FragmentManager$6: androidx.lifecycle.Lifecycle val$lifecycle
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler
androidx.appcompat.R$string: int abc_action_bar_up_description
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesTouch
androidx.core.view.ActionProvider: android.content.Context mContext
androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
kotlin.Pair: java.lang.Object second
kotlinx.coroutines.internal.MainDispatcherLoader: boolean FAST_SERVICE_LOADER_ENABLED
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Class[] PARAM_TYPES
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext$plus$1 INSTANCE
androidx.appcompat.app.AlertController: android.view.View mView
androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId
com.google.zxing.common.GlobalHistogramBinarizer: int[] buckets
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: boolean mAnimEndCalled
androidx.core.R$id: int accessibility_custom_action_3
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU
androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
androidx.core.R$id: int accessibility_custom_action_10
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver mTreeObserver
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
androidx.appcompat.widget.SuggestionsAdapter: androidx.appcompat.widget.SearchView mSearchView
androidx.core.R$id: int accessibility_custom_action_4
androidx.fragment.app.Fragment: android.os.Bundle mSavedViewRegistryState
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.fragment.app.FragmentAnim$3: androidx.fragment.app.FragmentTransition$Callback val$callback
com.google.zxing.oned.ITFReader: int[] DEFAULT_ALLOWED_LENGTHS
androidx.appcompat.view.menu.BaseMenuPresenter: int mId
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64
androidx.appcompat.widget.ScrollingTabContainerView: boolean mAllowCollapse
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker
androidx.arch.core.internal.SafeIterableMap: int mSize
androidx.appcompat.R$string: int abc_menu_sym_shortcut_label
com.google.zxing.pdf417.detector.Detector: int[] STOP_PATTERN
androidx.appcompat.app.AlertController$AlertParams: boolean mIsMultiChoice
androidx.fragment.app.Fragment: boolean mInLayout
androidx.appcompat.widget.AppCompatSpinner: android.widget.SpinnerAdapter mTempAdapter
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
androidx.appcompat.widget.ForwardingListener: int[] mTmpLocation
androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener
androidx.fragment.app.DefaultSpecialEffectsController$5: android.view.View val$viewToAnimate
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.android.KeyboardManager keyboardManager
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTopTint
kotlin.text.DelimitedRangesSequence$iterator$1: int nextState
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore mViewModelStore
kotlin.ranges.IntProgressionIterator: int finalElement
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: java.util.ArrayList mObservers
androidx.fragment.app.FragmentAnim$3: android.view.View val$viewToAnimate
androidx.appcompat.R$attr: int ratingBarStyle
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue
androidx.appcompat.widget.SearchView: android.app.SearchableInfo mSearchable
androidx.core.provider.CallbackWithHandler$2: androidx.core.provider.CallbackWithHandler this$0
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
androidx.core.R$id: int accessibility_action_clickable_span
androidx.appcompat.R$string: int abc_prepend_shortcut_label
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTint
androidx.appcompat.R$styleable: int[] ViewStubCompat
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int mask
androidx.appcompat.R$styleable: int[] AppCompatSeekBar
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$DisplayListener listener
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.appcompat.R$styleable: int[] DrawerArrowToggle
androidx.fragment.app.SpecialEffectsController$3: int[] $SwitchMap$androidx$fragment$app$SpecialEffectsController$Operation$State
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
com.journeyapps.barcodescanner.DecoderThread: android.os.HandlerThread thread
androidx.fragment.app.FragmentAnim$2: androidx.fragment.app.FragmentTransition$Callback val$callback
kotlinx.coroutines.ExecutorCoroutineDispatcher: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_39
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener flutterEngineAttachmentListener
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
androidx.core.app.ActivityRecreator$2: android.app.Application val$application
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long terminationDeadline
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze
androidx.appcompat.view.menu.MenuItemImpl: int mIconResId
androidx.activity.result.ActivityResult: int mResultCode
androidx.appcompat.widget.ListPopupWindow: int mDropDownHorizontalOffset
androidx.core.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemShowAsAction
androidx.appcompat.widget.SearchView: int mSuggestionRowLayout
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[] SYMBOL_WIDEST
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
androidx.appcompat.R$drawable: int abc_textfield_search_material
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
com.google.zxing.pdf417.PDF417ResultMetadata: int checksum
androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: androidx.cursoradapter.widget.CursorAdapter this$0
androidx.appcompat.widget.ListPopupWindow: int mDropDownGravity
androidx.core.provider.FontRequestWorker$3: int val$style
io.flutter.plugin.platform.VirtualDisplayController$1: java.lang.Runnable val$onNewSizeFrameAvailable
androidx.appcompat.R$id: int action_context_bar
androidx.core.provider.FontRequestWorker$1: java.lang.String val$id
androidx.appcompat.R$layout: int abc_list_menu_item_layout
com.journeyapps.barcodescanner.DecoderThread: boolean running
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PRIVATE
androidx.appcompat.R$styleable: int Toolbar_titleMarginTop
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent
kotlinx.coroutines.internal.ArrayQueue: int tail
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
com.google.zxing.Result: int numBits
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon2
androidx.fragment.app.DefaultSpecialEffectsController$7: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
androidx.appcompat.widget.AppCompatSpinner$SavedState: boolean mShowDropdown
androidx.core.view.ViewCompat: boolean sMinHeightFieldFetched
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List pairs
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.journeyapps.barcodescanner.camera.CameraManager: android.hardware.Camera$CameraInfo cameraInfo
androidx.appcompat.R$color: int abc_tint_edittext
com.google.zxing.client.android.R$string: int zxing_app_name
androidx.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width
androidx.fragment.app.Fragment: int mContentLayoutId
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.ListAdapter mListAdapter
androidx.core.graphics.TypefaceCompat: androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: androidx.appcompat.widget.ActionMenuPresenter this$0
com.google.zxing.oned.EANManufacturerOrgSupport: java.util.List ranges
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView
androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material
androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceWebSearchIntent
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTint
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int AVAILABLE_PROCESSORS
io.flutter.view.VsyncWaiter$1$1: io.flutter.view.VsyncWaiter$1 this$1
com.google.zxing.ReaderException: java.lang.StackTraceElement[] NO_TRACE
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
com.google.zxing.common.DecoderResult: java.util.List byteSegments
androidx.appcompat.R$color: int abc_tint_switch_track
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int mAutoSizeTextType
androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults
androidx.appcompat.view.menu.ListMenuPresenter: int mItemIndexOffset
androidx.core.content.res.ResourcesCompat$FontCallback$2: int val$reason
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode CONTINUOUS
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding
androidx.core.provider.FontsContractCompat$FontInfo: int mTtcIndex
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListener mListener
androidx.appcompat.R$styleable: int TextAppearance_android_textColorHint
androidx.fragment.app.DefaultSpecialEffectsController$6: androidx.fragment.app.SpecialEffectsController$Operation val$lastIn
androidx.activity.OnBackPressedCallback: boolean mEnabled
com.google.zxing.common.HybridBinarizer: com.google.zxing.common.BitMatrix matrix
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
kotlin.coroutines.ContinuationInterceptor$Key: kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.Animator$AnimatorListener mAnimatorListener
androidx.appcompat.app.AlertController$AlertParams$2: int mIsCheckedIndex
com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS
androidx.savedstate.SavedStateRegistry: boolean mAllowingSavingState
com.journeyapps.barcodescanner.CaptureManager: boolean returnBarcodeImagePath
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType[] $VALUES
androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET
kotlinx.coroutines.channels.AbstractSendChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_000
androidx.fragment.app.FragmentTransitionImpl$2: androidx.fragment.app.FragmentTransitionImpl this$0
androidx.appcompat.widget.ActionMenuPresenter: android.util.SparseBooleanArray mActionButtonGroups
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed
androidx.window.core.Version: java.lang.String description
kotlinx.coroutines.UndispatchedCoroutine: kotlin.coroutines.CoroutineContext savedContext
androidx.appcompat.view.menu.MenuPopupHelper$1: androidx.appcompat.view.menu.MenuPopupHelper this$0
androidx.core.R$styleable: int GradientColor_android_startX
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.appcompat.app.AlertController$3: android.view.View val$bottom
com.google.zxing.oned.rss.FinderPattern: int value
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] TEXT_SHIFT3_SET_CHARS
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange nextItem
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mIcon
androidx.fragment.app.SpecialEffectsController$2: androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation val$operation
com.google.zxing.Result: long timestamp
io.flutter.view.AccessibilityBridge$Flag: int value
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
androidx.appcompat.widget.SearchView$6: androidx.appcompat.widget.SearchView this$0
androidx.window.R$styleable: int ActivityFilter_activityName
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.Codeword[] codewords
androidx.appcompat.R$id: int search_src_text
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNegativeButtonIcon
androidx.appcompat.widget.SearchView: int[] mTemp2
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 emitFun
androidx.appcompat.widget.ActionMenuPresenter: int mWidthLimit
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManager mManager
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowEnterTransitionOverlap
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunrise
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
androidx.appcompat.R$styleable: int TextAppearance_fontVariationSettings
com.journeyapps.barcodescanner.CaptureManager: boolean showDialogIfMissingCameraPermission
androidx.appcompat.R$attr: int actionOverflowMenuStyle
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
com.google.zxing.client.android.AmbientLightManager: android.content.Context context
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mOps
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets mStableInsets
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupEnabled
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
com.google.zxing.aztec.detector.Detector: com.google.zxing.common.BitMatrix image
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
androidx.appcompat.view.menu.MenuBuilder: boolean mOptionalIconsVisible
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mImageTint
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern topRight
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean startFromEven
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] mFonts
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
androidx.collection.LongSparseArray: int mSize
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
androidx.appcompat.widget.TooltipPopup: int[] mTmpAnchorPos
androidx.core.R$id: int accessibility_custom_action_0
androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST
com.journeyapps.barcodescanner.BarcodeResult: com.google.zxing.Result mResult
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
androidx.appcompat.widget.LinearLayoutCompat: int mDividerPadding
androidx.appcompat.widget.SearchView$3: androidx.appcompat.widget.SearchView this$0
io.flutter.view.AccessibilityBridge$StringAttribute: int start
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.fragment.app.Fragment mFragment
androidx.appcompat.view.menu.MenuPopupHelper: android.content.Context mContext
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState
androidx.fragment.app.FragmentActivity$2: androidx.fragment.app.FragmentActivity this$0
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection
androidx.appcompat.widget.ScrollingTabContainerView: int mSelectedTabIndex
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner mOwner
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
androidx.tracing.Trace: long sTraceTagApp
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean mItalic
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
androidx.lifecycle.ViewModel: java.util.Map mBagOfTags
androidx.core.R$id: int accessibility_custom_action_28
androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat$Impl mImpl
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCachedAutoMirrored
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.view.menu.ListMenuItemView: boolean mHasListDivider
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
androidx.core.view.ContentInfoCompat$Builder: android.content.ClipData mClip
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_GROUP
androidx.fragment.app.SpecialEffectsController$3: int[] $SwitchMap$androidx$fragment$app$SpecialEffectsController$Operation$LifecycleImpact
androidx.appcompat.view.menu.MenuAdapter: android.view.LayoutInflater mInflater
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol ENQUEUE_FAILED
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
androidx.core.app.TaskStackBuilder: java.util.ArrayList mIntents
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1: int[] $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
androidx.core.R$styleable: int[] GradientColor
androidx.appcompat.view.menu.MenuItemImpl: android.view.View mActionView
androidx.appcompat.R$string: int abc_menu_enter_shortcut_label
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mBatchTextEditingDeltas
androidx.appcompat.app.AlertController: int mIconId
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
androidx.core.R$styleable: int GradientColor_android_endX
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_TEXT
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitle
com.google.zxing.common.DetectorResult: com.google.zxing.common.BitMatrix bits
androidx.appcompat.R$styleable: int Toolbar_popupTheme
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mDoAfterTextChanged
androidx.core.text.PrecomputedTextCompat: java.lang.Object sLock
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
androidx.core.view.ViewCompat$Api21Impl$1: androidx.core.view.OnApplyWindowInsetsListener val$listener
androidx.appcompat.app.AlertController: android.view.Window mWindow
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1
com.google.zxing.aztec.detector.Detector: int shift
kotlin.sequences.TransformingSequence$iterator$1: kotlin.sequences.TransformingSequence this$0
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
androidx.appcompat.view.menu.StandardMenuPopup: int ITEM_LAYOUT
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
androidx.appcompat.R$styleable: int MenuItem_iconTintMode
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources mResources
androidx.core.view.inputmethod.InputConnectionCompat$1: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key
androidx.fragment.app.FragmentState: java.lang.String mClassName
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitle
com.google.zxing.client.android.R$color: int zxing_result_view
androidx.core.content.ContextCompat: android.util.TypedValue sTempValue
androidx.appcompat.view.menu.ExpandedMenuView: int[] TINT_ATTRS
androidx.appcompat.R$styleable: int SearchView_goIcon
com.google.zxing.oned.rss.expanded.decoders.DecodedObject: int newPosition
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mDestroyed
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeStepGranularity
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.widget.Toolbar this$0
androidx.window.R$id: int androidx_window_activity_scope
androidx.appcompat.widget.SuggestionsAdapter: android.app.SearchableInfo mSearchable
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object[] elements
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon
com.google.zxing.oned.rss.expanded.ExpandedRow: java.util.List pairs
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_FAILED
androidx.appcompat.R$attr: int colorControlActivated
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsHideReplaced
androidx.core.widget.AutoScrollHelper: boolean mExclusive
androidx.core.provider.FontRequestWorker$1: androidx.core.provider.FontRequest val$request
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mLocalMatrix
com.journeyapps.barcodescanner.CaptureManager$2: com.journeyapps.barcodescanner.CaptureManager this$0
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
androidx.appcompat.app.AlertController: android.os.Message mButtonNeutralMessage
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.Fragment mFragment
androidx.appcompat.R$color: int abc_tint_btn_checkable
androidx.appcompat.view.SupportMenuInflater$MenuState: android.graphics.PorterDuff$Mode itemIconTintMode
androidx.appcompat.R$styleable: int TextAppearance_android_textSize
androidx.appcompat.R$dimen: int abc_dropdownitem_icon_width
androidx.fragment.app.FragmentTransitionCompat21$2: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha
com.google.zxing.client.android.R$id: int zxing_camera_error
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
androidx.fragment.app.FragmentStateManager$2: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
kotlin.jvm.internal.ClassReference: java.util.HashMap classFqNames
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: android.content.res.Resources mResources
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
androidx.appcompat.R$styleable: int MenuView_subMenuArrow
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Field sVisibleInsetsField
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
androidx.fragment.app.BackStackState: int mIndex
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode$Callback mWrappedCallback
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.google.zxing.oned.rss.expanded.ExpandedRow: boolean wasReversed
androidx.collection.SparseArrayCompat: int mSize
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object[][] TWO_DIGIT_DATA_LENGTH
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
androidx.appcompat.widget.SuggestionsAdapter: int mText1Col
androidx.collection.ArraySet$1: androidx.collection.ArraySet this$0
androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.Runnable configure
androidx.core.R$attr: int alpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor
androidx.appcompat.widget.SearchView: android.view.View mDropDownAnchor
androidx.fragment.app.FragmentTransitionImpl$2: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemNumericShortcut
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List increasedValueAttributes
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
io.flutter.embedding.android.KeyboardManager: java.util.HashSet redispatchedEvents
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map componentNameToResults
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode BYTE
androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
androidx.core.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor
androidx.fragment.app.Fragment$AnimationInfo: float mPostOnViewCreatedAlpha
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[][] WEIGHTS
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: android.graphics.drawable.Animatable mA
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
androidx.appcompat.R$styleable: int CompoundButton_buttonTintMode
androidx.fragment.app.DefaultSpecialEffectsController$2: android.view.ViewGroup val$container
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler handler
androidx.window.R$attr: int placeholderActivityName
androidx.appcompat.R$dimen: int tooltip_precise_anchor_extra_offset
androidx.appcompat.widget.ActionBarContextView: android.view.View mCloseButton
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
com.journeyapps.barcodescanner.Size: int height
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController val$dialog
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mSystemContext
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.ViewModelStore mViewModelStore
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
androidx.window.core.Bounds: int left
com.google.zxing.client.android.BeepManager: java.lang.String TAG
kotlinx.coroutines.CancelledContinuation: int _resumed
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: java.lang.Object currentlyRecreatingToken
androidx.appcompat.R$styleable: int MenuItem_android_visible
androidx.core.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int mChangingConfigurations
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableStart
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] MIXED_TABLE
com.google.zxing.oned.UPCEANExtension2Support: int[] decodeMiddleCounters
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mIsCheckedColumn
androidx.appcompat.R$styleable: int[] MenuGroup
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mHyphenationFrequency
androidx.appcompat.R$styleable: int Toolbar_navigationIcon
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_viewfinder_mask
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGF field
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
androidx.appcompat.app.AlertController: int mButtonIconDimen
androidx.collection.ArraySet: int mSize
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_010
com.google.zxing.common.BitSource: int bitOffset
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations
com.google.zxing.client.android.R$id: int zxing_decode_succeeded
androidx.appcompat.R$id: int titleDividerNoCustom
androidx.collection.SimpleArrayMap: int mBaseCacheSize
androidx.appcompat.widget.SearchView: java.lang.CharSequence mQueryHint
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int physicalTouchSlop
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
androidx.core.R$id: int accessibility_custom_action_31
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: boolean mIsPop
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mContentDescription
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
androidx.appcompat.widget.SearchView: boolean mQueryRefinement
androidx.appcompat.R$id: int contentPanel
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.app.AlertDialog mDialog
androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext
androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_13
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
androidx.appcompat.widget.AppCompatTextHelper: int mFontWeight
io.flutter.embedding.android.FlutterSplashView$1: io.flutter.embedding.android.FlutterSplashView this$0
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
androidx.appcompat.R$styleable: int ActionBar_elevation
com.journeyapps.barcodescanner.camera.CameraSettings: boolean exposureEnabled
androidx.core.R$id: int tag_accessibility_actions
androidx.core.widget.CompoundButtonCompat: java.lang.reflect.Field sButtonDrawableField
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
androidx.core.widget.NestedScrollView: boolean mFillViewport
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.View mView
androidx.activity.ComponentActivity: int mContentLayoutId
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String $indent
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SLIDER
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
com.google.zxing.Result: com.google.zxing.ResultPoint[] resultPoints
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT
kotlin.ranges.IntProgression: int last
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings: int[] $EnumSwitchMapping$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
androidx.appcompat.R$styleable: int SearchView_layout
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong COROUTINE_ID
kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause
androidx.appcompat.widget.TintTypedArray: android.util.TypedValue mTypedValue
androidx.fragment.app.FragmentTransitionImpl$1: androidx.fragment.app.FragmentTransitionImpl this$0
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement
androidx.appcompat.widget.SearchView$4: androidx.appcompat.widget.SearchView this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
androidx.core.content.res.ComplexColorCompat: int mColor
com.google.zxing.client.android.DecodeHintManager: java.util.regex.Pattern COMMA
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
androidx.appcompat.R$style: int Theme_AppCompat_CompactMenu
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
androidx.lifecycle.LiveData: int mVersion
androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme mTheme
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat mHost
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$outNames
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mTitleView
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent mIntent
androidx.activity.contextaware.ContextAwareHelper: java.util.Set mListeners
androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage
androidx.core.app.ActivityRecreator: java.lang.reflect.Field tokenField
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.appcompat.app.ActionBar$LayoutParams: int gravity
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_left
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table UPPER
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter
io.flutter.Log: int ERROR
com.google.zxing.BinaryBitmap: com.google.zxing.Binarizer binarizer
androidx.appcompat.R$styleable: int MenuItem_alphabeticModifiers
androidx.appcompat.app.ResourcesFlusher: boolean sDrawableCacheFieldFetched
androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
androidx.appcompat.R$attr: int actionBarTabTextStyle
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly zero
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNeutralButtonText
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean firstOutIsPop
androidx.appcompat.R$layout: int abc_search_view
com.google.zxing.client.android.DecodeFormatManager: java.util.Map FORMATS_FOR_MODE
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText1
com.journeyapps.barcodescanner.CameraPreview: android.os.Handler$Callback stateCallback
kotlinx.coroutines.scheduling.Task: long submissionTime
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mLabelColumn
androidx.appcompat.R$drawable: int abc_cab_background_internal_bg
androidx.appcompat.view.menu.CascadingMenuPopup: android.os.Handler mSubMenuHoverHandler
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList
androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mOnDismissListener
androidx.fragment.app.FragmentManager$7: androidx.fragment.app.FragmentManager this$0
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_111
androidx.appcompat.widget.ScrollingTabContainerView$1: android.view.View val$tabView
androidx.appcompat.widget.AppCompatPopupWindow: boolean mOverlapAnchor
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReenterTransition
androidx.appcompat.app.AlertController$4: android.view.View val$top
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders
androidx.fragment.R$styleable: int[] GradientColor
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
androidx.appcompat.R$styleable: int MenuView_preserveIconSpacing
androidx.core.view.OneShotPreDrawListener: android.view.ViewTreeObserver mViewTreeObserver
com.journeyapps.barcodescanner.camera.CameraSettings: int requestedCameraId
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.Continuation completion
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel
androidx.appcompat.R$styleable: int ActionBar_height
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
androidx.core.graphics.drawable.IconCompat: int mType
androidx.core.widget.NestedScrollView: int[] mScrollOffset
kotlinx.coroutines.CompletedExceptionally: int _handled
androidx.appcompat.R$styleable: int ActionBar_displayOptions
io.flutter.view.AccessibilityBridge: boolean isReleased
androidx.appcompat.R$styleable: int Toolbar_logo
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMinTextSizeInPx
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.core.view.KeyEventDispatcher: boolean sDialogFieldsFetched
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupMaxWidth
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mItems
androidx.appcompat.R$styleable: int TextAppearance_android_textColor
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
androidx.fragment.app.Fragment: boolean mDeferStart
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: android.content.res.Resources$Theme mTheme
com.journeyapps.barcodescanner.camera.CameraInstance: android.os.Handler mainHandler
androidx.appcompat.R$styleable: int MenuGroup_android_visible
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.RotationListener rotationListener
androidx.core.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: java.lang.String locale
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTooltipText
kotlin.ranges.IntProgressionIterator: int step
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX
kotlinx.coroutines.scheduling.LimitingDispatcher: int parallelism
androidx.appcompat.widget.AppCompatTextHelper$1: androidx.appcompat.widget.AppCompatTextHelper this$0
androidx.appcompat.R$drawable: int abc_btn_radio_material_anim
com.google.zxing.Result: com.google.zxing.BarcodeFormat format
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
androidx.appcompat.R$id: int scrollView
androidx.appcompat.widget.ScrollingTabContainerView$TabView: int[] BG_ATTRS
com.google.zxing.qrcode.decoder.Version$ECBlocks: int ecCodewordsPerBlock
androidx.fragment.app.Fragment: android.os.Bundle mArguments
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.google.zxing.common.DecoderResult: byte[] rawBytes
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element element
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.lifecycle.runtime.R$id: int view_tree_lifecycle_owner
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutAlphabeticModifiers
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: java.lang.Object sRebaseMethodLock
androidx.appcompat.view.menu.CascadingMenuPopup: int mYOffset
com.journeyapps.barcodescanner.CameraPreview: boolean torchOn
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType POSSIBLE_FORMATS
kotlin.Result$Failure: java.lang.Throwable exception
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.ChildHandleNode child
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mStartAction
androidx.core.R$styleable: int[] Capability
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mTempShortcutItemList
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.zxing.common.PerspectiveTransform: float a21
androidx.appcompat.widget.AppCompatTextView: java.util.concurrent.Future mPrecomputedTextFuture
androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0
androidx.fragment.app.BackStackState: boolean mReorderingAllowed
androidx.appcompat.R$attr: int actionBarTabStyle
androidx.appcompat.widget.ThemeUtils: int[] TEMP_ARRAY
androidx.fragment.app.BackStackRecord: boolean mCommitted
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] $VALUES
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClassName
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: androidx.appcompat.widget.ListPopupWindow this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchor
androidx.appcompat.app.AlertController: int mViewSpacingLeft
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0
androidx.core.widget.NestedScrollView: int mActivePointerId
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback cameraPreviewCallback
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed failed
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mExpandedItem
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
androidx.core.R$id: int accessibility_custom_action_14
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.widget.ForwardingListener mForwardingListener
androidx.appcompat.R$style: int Theme_AppCompat_Light
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth
androidx.fragment.app.FragmentAnim$2: androidx.core.os.CancellationSignal val$signal
androidx.lifecycle.LiveData$1: androidx.lifecycle.LiveData this$0
com.google.zxing.PlanarYUVLuminanceSource: int left
androidx.appcompat.widget.SearchView: java.lang.Runnable mReleaseCursorRunnable
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.view.inputmethod.InputContentInfo mObject
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY
com.benjaminabel.vibration.VibrationPlugin: io.flutter.plugin.common.MethodChannel methodChannel
androidx.appcompat.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
androidx.fragment.app.FragmentManager$3: androidx.fragment.app.FragmentManager this$0
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray mCapturedKeys
androidx.fragment.app.SpecialEffectsController$2: androidx.fragment.app.SpecialEffectsController this$0
androidx.collection.LongSparseArray: boolean mGarbage
androidx.appcompat.R$attr: int toolbarStyle
androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToPlatformView
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
androidx.core.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIconRefine
androidx.appcompat.app.TwilightManager: android.content.Context mContext
androidx.appcompat.widget.DropDownListView: boolean mListSelectionHidden
kotlinx.coroutines.CancelledContinuation: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup
androidx.appcompat.widget.LinearLayoutCompat: int mDividerWidth
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference mInternalScopeRef
com.google.zxing.oned.UPCEANReader: java.lang.StringBuilder decodeRowStringBuffer
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint bottomRight
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.Class sViewRootImplClass
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
kotlinx.coroutines.DispatchedCoroutine: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
com.google.zxing.pdf417.decoder.BarcodeMetadata: int rowCountLowerPart
androidx.appcompat.view.menu.MenuItemImpl: int mOrdering
androidx.appcompat.R$styleable: int[] ActivityChooserView
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$enterTransition
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingBottom
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence sequence
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager
androidx.appcompat.R$id: int action_bar_container
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: androidx.fragment.app.FragmentAnim$AnimationOrAnimator mAnimation
kotlin.Pair: java.lang.Object first
androidx.appcompat.widget.SearchView$10: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.view.menu.MenuAdapter: boolean mOverflowOnly
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges
androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
androidx.fragment.app.FragmentTransaction$Op: int mExitAnim
androidx.fragment.app.FragmentTransitionImpl$3: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater
androidx.appcompat.R$layout: int abc_action_mode_close_item_material
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
androidx.appcompat.app.AlertController$5: androidx.appcompat.app.AlertController this$0
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnClickListener
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Executor sExecutor
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODABAR
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mOnClickListener
kotlinx.coroutines.internal.Symbol: java.lang.String symbol
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler handler
com.journeyapps.barcodescanner.camera.CameraSurface: android.view.SurfaceHolder surfaceHolder
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
androidx.appcompat.R$styleable: int ActionBar_titleTextStyle
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures
androidx.appcompat.R$styleable: int MenuItem_showAsAction
androidx.appcompat.widget.ActionBarContainer: boolean mIsTransitioning
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
androidx.appcompat.R$styleable: int[] AppCompatImageView
androidx.savedstate.SavedStateRegistry$1: androidx.savedstate.SavedStateRegistry this$0
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int ActionMode_closeItemLayout
androidx.appcompat.view.menu.BaseMenuPresenter: int mItemLayoutRes
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransition$Callback mFragmentTransitionCallback
androidx.appcompat.R$styleable: int MenuItem_android_menuCategory
androidx.appcompat.widget.SearchView: android.widget.ImageView mGoButton
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.appcompat.R$id: int shortcut
androidx.appcompat.app.AlertController: android.os.Message mButtonPositiveMessage
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor mCursor
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_100
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath
androidx.fragment.app.Fragment$5: androidx.fragment.app.Fragment this$0
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode INFINITY
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$outFragment
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView mDropDownList
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: java.lang.String TAG
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] TEXT_SHIFT2_SET_CHARS
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE
androidx.core.provider.RequestExecutor$ReplyRunnable$1: java.lang.Object val$result
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_8
androidx.fragment.app.FragmentManager: boolean mHavePendingDeferredStart
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint topLeft
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State VISIBLE
androidx.core.provider.FontRequestWorker$3: androidx.core.provider.FontRequest val$request
androidx.appcompat.widget.SearchView$8: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.R$id: int buttonPanel
androidx.core.app.RemoteActionCompat: boolean mEnabled
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern topLeft
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
androidx.appcompat.widget.ActionMenuView: int mMinCellSize
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.util.regex.Pattern SEMICOLON
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
androidx.appcompat.R$styleable: int AppCompatTheme_panelBackground
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
com.google.zxing.pdf417.decoder.DetectionResult: int barcodeColumnCount
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 transformer
com.google.zxing.aztec.detector.Detector: int nbCenterLayers
androidx.appcompat.widget.LinearLayoutCompat: int mShowDividers
androidx.window.embedding.ActivityRule: boolean alwaysExpand
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable mDropDownListHighlight
androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: android.content.res.Configuration mConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.appcompat.app.AppCompatDelegateImpl this$0
kotlinx.coroutines.CompletedContinuation: java.lang.Object result
com.benjaminabel.vibration.VibrationMethodChannelHandler: com.benjaminabel.vibration.Vibration vibration
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Field sConsumedField
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
androidx.core.provider.FontRequestWorker$3: android.content.Context val$context
androidx.fragment.app.FragmentTransaction: boolean mAddToBackStack
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean mOverlapAllowed
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint from
androidx.core.graphics.PathParser$PathDataNode: char mType
androidx.fragment.R$animator: int fragment_fade_exit
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType RETURN_CODABAR_START_END
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
com.journeyapps.barcodescanner.Size: int width
androidx.cursoradapter.widget.CursorAdapter: boolean mDataValid
androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: boolean isCalled
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper
androidx.appcompat.widget.ContentFrameLayout: androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener
androidx.appcompat.widget.ToolbarWidgetWrapper$2: boolean mCanceled
androidx.appcompat.view.menu.MenuPopupHelper: android.view.View mAnchorView
androidx.core.provider.RequestExecutor$DefaultThreadFactory: int mPriority
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionViewConstructorArguments
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
com.google.zxing.client.android.R$styleable: int zxing_camera_preview_zxing_framing_rect_width
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mShortcutView
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode
io.flutter.embedding.engine.FlutterOverlaySurface: int id
androidx.core.widget.AutoScrollHelper: int mEdgeType
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float[] VALUES
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode
androidx.fragment.R$animator: int fragment_close_enter
androidx.fragment.app.SpecialEffectsController$Operation: boolean mIsComplete
androidx.appcompat.R$styleable: int AppCompatTextView_drawableBottomCompat
androidx.appcompat.widget.DropDownListView: androidx.core.widget.ListViewAutoScrollHelper mScrollHelper
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveWrapperFqNames
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateY
androidx.fragment.app.Fragment: boolean mUserVisibleHint
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.appcompat.view.menu.CascadingMenuPopup: int mLastPosition
androidx.fragment.app.FragmentStore: java.util.ArrayList mAdded
androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews
kotlinx.coroutines.channels.ArrayChannel: java.util.concurrent.locks.ReentrantLock lock
androidx.fragment.app.DefaultSpecialEffectsController$8: androidx.fragment.app.DefaultSpecialEffectsController this$0
kotlinx.coroutines.scheduling.TasksKt: long IDLE_WORKER_KEEP_ALIVE_NS
androidx.fragment.app.FragmentManager$4: androidx.fragment.app.FragmentManager this$0
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampDownDuration
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingTop
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNeutralButtonIcon
androidx.appcompat.R$styleable: int[] Fragment
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.internal.LockFreeLinkedListNode $node
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mSystemInflater
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
kotlinx.coroutines.channels.ArrayChannel$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.provider.CallbackWithHandler$1: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
androidx.appcompat.widget.ActionBarContainer: boolean mIsSplit
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] $VALUES
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.LinearLayoutCompat mTabLayout
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding
androidx.appcompat.R$attr: int radioButtonStyle
com.google.zxing.client.android.BeepManager: boolean beepEnabled
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
com.google.zxing.client.android.R$styleable: int[] zxing_finder
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
androidx.fragment.app.DefaultSpecialEffectsController$6: androidx.collection.ArrayMap val$lastInViews
androidx.appcompat.view.menu.StandardMenuPopup: android.content.Context mContext
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET
com.journeyapps.barcodescanner.ViewfinderView: android.graphics.Rect framingRect
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC
com.journeyapps.barcodescanner.RotationListener: android.view.OrientationEventListener orientationEventListener
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.appcompat.widget.SearchView: android.view.View mSearchEditFrame
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int[][] mStateSets
androidx.fragment.app.DefaultSpecialEffectsController$4$1: androidx.fragment.app.DefaultSpecialEffectsController$4 this$1
kotlinx.coroutines.CoroutineName: java.lang.String name
androidx.fragment.app.FragmentTransitionImpl$2: java.util.Map val$nameOverrides
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray
com.google.zxing.qrcode.decoder.Decoder: com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat MAXICODE
androidx.appcompat.R$styleable: int MenuItem_contentDescription
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.channels.AbstractChannel$Itr iterator
androidx.appcompat.widget.ListPopupWindow$2: androidx.appcompat.widget.ListPopupWindow this$0
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter mGeneratedAdapter
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION
androidx.fragment.app.DefaultSpecialEffectsController$2: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter mTintFilter
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
com.journeyapps.barcodescanner.CameraPreview: double marginFraction
androidx.core.view.ViewCompat: int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mSubMenuArrowView
androidx.appcompat.content.res.AppCompatResources: java.util.WeakHashMap sColorStateCaches
com.google.zxing.oned.ITFReader: int[][] PATTERNS
androidx.core.view.DisplayCutoutCompat: java.lang.Object mDisplayCutout
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.coroutines.Continuation $completion
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStopTime
androidx.collection.SparseArrayCompat: java.lang.Object[] mValues
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.os.PowerManager mPowerManager
androidx.appcompat.widget.SearchView: boolean mIconified
androidx.fragment.app.FragmentManager: boolean mDestroyed
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: androidx.core.view.AccessibilityDelegateCompat mCompat
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache
kotlinx.coroutines.ChildContinuation: kotlinx.coroutines.CancellableContinuationImpl child
kotlin.jvm.internal.CallableReference: java.lang.String signature
androidx.appcompat.R$id: int search_edit_frame
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String schedulerName
com.journeyapps.barcodescanner.ViewfinderView: int laserColor
androidx.core.view.ContentInfoCompat: android.net.Uri mLinkUri
androidx.collection.LongSparseArray: java.lang.Object DELETED
com.google.zxing.pdf417.decoder.BarcodeMetadata: int errorCorrectionLevel
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.appcompat.widget.ListPopupWindow: android.widget.ListAdapter mAdapter
androidx.core.provider.FontRequest: java.lang.String mProviderPackage
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_3
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.Receive receive
androidx.fragment.app.FragmentTransitionImpl$3: java.util.Map val$nameOverrides
kotlinx.coroutines.scheduling.TasksKt: int MAX_POOL_SIZE
androidx.core.R$styleable: int FontFamily_fontProviderSystemFontFamily
androidx.appcompat.view.menu.MenuBuilder: boolean mShortcutsVisible
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mWeight
androidx.appcompat.R$styleable: int SearchView_closeIcon
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list
androidx.appcompat.R$styleable: int PopupWindow_overlapAnchor
androidx.appcompat.R$styleable: int[] AppCompatTextView
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version[] VERSIONS
androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableEnd
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: android.view.View mChild
androidx.appcompat.widget.Toolbar: boolean mCollapsible
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mInternalBackgroundTint
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.widget.ListAdapter mAdapter
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemActionViewLayout
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize
com.google.zxing.common.detector.WhiteRectangleDetector: int upInit
androidx.appcompat.R$styleable: int TextAppearance_android_textColorLink
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mSystemGestureInsets
kotlinx.coroutines.android.HandlerContext: java.lang.String name
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
com.google.zxing.maxicode.decoder.BitMatrixParser: int[][] BITNR
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTintMode
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mEnterTransition
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect mEpicenterBounds
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES
androidx.fragment.app.BackStackState: int mBreadCrumbShortTitleRes
androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
androidx.core.widget.TextViewCompat$OreoCallback: android.widget.TextView mTextView
com.google.zxing.oned.CodaBarReader: int[] CHARACTER_ENCODINGS
androidx.fragment.app.LogWriter: java.lang.StringBuilder mBuilder
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
androidx.appcompat.widget.AppCompatSpinner: android.graphics.Rect mTempRect
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
io.flutter.plugin.platform.PlatformViewsController: boolean synchronizeToNativeViewHierarchy
androidx.core.provider.FontProvider: java.util.Comparator sByteArrayComparator
com.google.zxing.pdf417.PDF417ResultMetadata: long fileSize
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri mUri
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Class mType
androidx.appcompat.app.AlertController$AlertParams: boolean mIsSingleChoice
androidx.appcompat.widget.TooltipPopup: int[] mTmpAppPos
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.reflect.Constructor $constructor$inlined
androidx.appcompat.R$attr: int actionBarPopupTheme
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderThread decoderThread
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: android.animation.Animator animator
androidx.appcompat.view.menu.StandardMenuPopup: boolean mShowTitle
io.flutter.embedding.android.FlutterSplashView: java.lang.Runnable onTransitionComplete
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION
io.flutter.embedding.android.FlutterSplashView: android.os.Bundle splashScreenState
androidx.appcompat.R$attr: int toolbarNavigationButtonStyle
androidx.fragment.R$styleable: int Fragment_android_tag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_possible_result_points
androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint
androidx.appcompat.widget.ActionMenuPresenter: boolean mStrictWidthLimit
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: androidx.appcompat.widget.ListPopupWindow this$0
net.touchcapture.qr.flutterqr.QRView: boolean isTorchOn
androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures
androidx.appcompat.widget.ListPopupWindow: android.view.View mPromptView
androidx.fragment.app.FragmentTransaction$Op: int mCmd
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.SpinnerAdapter mAdapter
com.journeyapps.barcodescanner.CameraPreview: boolean previewActive
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState
androidx.appcompat.R$styleable: int ActionBar_logo
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor
androidx.appcompat.R$styleable: int[] CompoundButton
androidx.appcompat.widget.LinearLayoutCompat: boolean mUseLargestChild
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.Size requestedPreviewSize
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Field sAttachInfoField
androidx.appcompat.R$color: int abc_tint_spinner
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.common.BitMatrix image
androidx.appcompat.R$styleable: int AlertDialog_showTitle
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.appcompat.view.menu.StandardMenuPopup: boolean mOverflowOnly
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
com.journeyapps.barcodescanner.camera.AutoFocusManager: boolean stopped
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mLaunchedFragments
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object $element
com.google.zxing.oned.UPCEReader: int[] decodeMiddleCounters
androidx.appcompat.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: androidx.appcompat.graphics.drawable.DrawableContainer mOwner
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable cancelCause
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.Window mWindow
androidx.appcompat.R$styleable: int ActionBar_icon
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicReferenceArray workers
androidx.appcompat.R$attr: int alertDialogTheme
androidx.appcompat.R$layout: int abc_cascading_menu_item_layout
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mTtcIndex
androidx.appcompat.R$styleable: int MenuItem_android_orderInCategory
androidx.core.provider.FontRequest: java.lang.String mIdentifier
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
androidx.fragment.app.FragmentTransition$1: androidx.fragment.app.FragmentTransition$Callback val$callback
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText2
androidx.collection.LongSparseArray: java.lang.Object[] mValues
androidx.appcompat.R$string: int abc_menu_delete_shortcut_label
androidx.appcompat.view.menu.MenuItemImpl: int mShowAsAction
kotlin.jvm.internal.CallableReference: java.lang.String name
androidx.appcompat.widget.AppCompatSpinner$2: androidx.appcompat.widget.AppCompatSpinner this$0
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.content.Context mActionModeContext
androidx.appcompat.R$styleable: int AppCompatImageView_srcCompat
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.Toolbar mToolbar
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemNavigationBarContrastEnforced
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode[] $VALUES
androidx.appcompat.widget.AppCompatTextView: boolean mIsSetTypefaceProcessing
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransitionImpl val$impl
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size previewSize
com.google.zxing.oned.rss.AbstractRSSReader: int[] evenCounts
com.google.zxing.aztec.detector.Detector: int nbDataBlocks
com.google.zxing.oned.rss.FinderPattern: com.google.zxing.ResultPoint[] resultPoints
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback
com.journeyapps.barcodescanner.camera.CameraManager: com.google.zxing.client.android.AmbientLightManager ambientLightManager
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
androidx.cursoradapter.widget.CursorAdapter: int mRowIDColumn
androidx.core.widget.NestedScrollView: int mNestedYOffset
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
androidx.appcompat.R$styleable: int[] ListPopupWindow
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY
androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
androidx.fragment.R$styleable: int Fragment_android_name
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableLeftTint
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: java.util.ArrayList mAnimators
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.ResultPoint[] NO_POINTS
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
androidx.appcompat.widget.AppCompatRatingBar: androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper
net.touchcapture.qr.flutterqr.QRView$1: net.touchcapture.qr.flutterqr.QRView this$0
androidx.core.provider.FontsContractCompat$FontInfo: int mResultCode
androidx.fragment.app.FragmentManager$8: androidx.fragment.app.FragmentManager this$0
androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI SJIS
androidx.appcompat.app.AlertController: android.os.Message mButtonNegativeMessage
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob
androidx.fragment.app.FragmentManager: boolean mStateSaved
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDelegate
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownAlwaysVisible
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
com.google.zxing.qrcode.decoder.Version: int versionNumber
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE
androidx.appcompat.widget.AppCompatSpinner: boolean mPopupSet
androidx.core.widget.CompoundButtonCompat: boolean sButtonDrawableFieldFetched
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
androidx.lifecycle.ClassesInfoCache$MethodReference: java.lang.reflect.Method mMethod
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.FragmentTransition$Callback val$callback
io.flutter.FlutterInjector$Builder$NamedThreadFactory: io.flutter.FlutterInjector$Builder this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState
androidx.fragment.app.FragmentActivity: boolean mResumed
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Class sFontFamily
androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
androidx.appcompat.R$styleable: int SearchView_searchHintIcon
androidx.fragment.app.BackStackState: int[] mOldMaxLifecycleStates
com.google.zxing.pdf417.decoder.BoundingBox: int maxX
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
com.google.zxing.client.android.R$styleable: int zxing_camera_preview_zxing_preview_scaling_strategy
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemClickListener mItemClickListener
androidx.appcompat.app.AlertController$1: androidx.appcompat.app.AlertController this$0
io.flutter.embedding.android.FlutterSplashView: android.view.View splashScreenView
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap
com.google.zxing.common.reedsolomon.GenericGF: int[] expTable
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
androidx.appcompat.R$styleable: int AlertDialog_buttonIconDimen
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence mHeaderTitle
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTooltipText
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonPositiveText
io.flutter.FlutterInjector$Builder: java.util.concurrent.ExecutorService executorService
androidx.core.widget.NestedScrollView: int mMinimumVelocity
androidx.appcompat.R$styleable: int TextAppearance_android_typeface
androidx.appcompat.app.AlertController$AlertParams: android.view.View mView
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
androidx.fragment.app.DefaultSpecialEffectsController$7: androidx.fragment.app.FragmentTransitionImpl val$impl
androidx.core.view.OneShotPreDrawListener: java.lang.Runnable mRunnable
androidx.fragment.app.DefaultSpecialEffectsController$4: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.appcompat.widget.SearchView: android.widget.ImageView mSearchButton
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl
androidx.appcompat.app.AlertController: android.widget.ListView mListView
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object L$0
com.google.zxing.qrcode.detector.FinderPatternFinder: com.google.zxing.ResultPointCallback resultPointCallback
com.journeyapps.barcodescanner.ViewfinderView: boolean laserVisibility
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter
androidx.fragment.app.FragmentState: boolean mRemoving
com.google.zxing.common.DecoderResult: java.lang.Integer erasures
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementSourceNames
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
kotlinx.coroutines.Active: kotlinx.coroutines.Active INSTANCE
androidx.fragment.app.FragmentTransaction: boolean mReorderingAllowed
com.google.zxing.oned.UPCEReader: int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: boolean remaining
androidx.fragment.app.FragmentState: int mContainerId
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.Runnable closer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.fragment.app.SpecialEffectsController: java.util.ArrayList mPendingOperations
androidx.fragment.app.Fragment$4: androidx.fragment.app.Fragment this$0
androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.Runnable previewStarter
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode newNode
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause
androidx.collection.MapCollections$MapIterator: int mEnd
com.google.zxing.pdf417.PDF417ResultMetadata: int[] optionalData
androidx.core.provider.CallbackWithHandler$2: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE
androidx.appcompat.widget.TintInfo: boolean mHasTintList
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey
androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$exitTransition
androidx.appcompat.R$styleable: int MenuItem_android_titleCondensed
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: boolean isLeft
androidx.appcompat.R$styleable: int ActionMode_subtitleTextStyle
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State REMOVED
kotlin.SynchronizedLazyImpl: kotlin.jvm.functions.Function0 initializer
androidx.appcompat.widget.AppCompatTextHelper$1: int val$fontWeight
androidx.appcompat.R$layout: int abc_dialog_title_material
com.google.zxing.qrcode.decoder.Version$ECBlocks: com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
com.google.zxing.Result: java.lang.String text
com.google.zxing.client.android.R$styleable: int zxing_camera_preview_zxing_framing_rect_height
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode[] $VALUES
androidx.appcompat.R$attr: int alertDialogCenterButtons
com.journeyapps.barcodescanner.MixedDecoder: boolean isInverted
androidx.appcompat.R$layout: int abc_action_menu_item_layout
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mTitleSet
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemClickListener mOnItemClickListener
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
com.journeyapps.barcodescanner.Decoder: java.util.List possibleResultPoints
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mStackedBackground
androidx.core.R$id: int tag_accessibility_clickable_spans
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
androidx.appcompat.R$attr: int actionModeStyle
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: float average
androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack
com.google.zxing.aztec.detector.Detector: int[] EXPECTED_CORNER_BITS
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets
androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: int remainingValue
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs
androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode
com.google.zxing.oned.rss.RSS14Reader: int[][] FINDER_PATTERNS
com.google.zxing.oned.UPCEANReader: com.google.zxing.oned.UPCEANExtensionSupport extensionReader
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType ALLOWED_EAN_EXTENSIONS
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION
androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract val$contract
androidx.appcompat.widget.DropDownListView: int mSelectionTopPadding
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable mHeaderIcon
androidx.window.R$attr: int alwaysExpand
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION
com.google.zxing.pdf417.PDF417ResultMetadata: java.lang.String fileId
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: java.util.ArrayList mAnimators
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
androidx.fragment.app.Fragment$AnimationInfo: boolean mEnterTransitionPostponed
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating
androidx.fragment.app.FragmentAnim$3: androidx.fragment.app.Fragment val$fragment
com.journeyapps.barcodescanner.CaptureManager: com.journeyapps.barcodescanner.DecoratedBarcodeView barcodeView
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer
com.journeyapps.barcodescanner.DefaultDecoderFactory: java.util.Map hints
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
androidx.core.R$id: int accessibility_custom_action_5
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.os.Handler$Callback focusHandlerCallback
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
com.google.zxing.pdf417.PDF417ResultMetadata: boolean lastSegment
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.appcompat.view.menu.MenuBuilder: boolean mStructureChangedWhileDispatchPrevented
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact mLifecycleImpact
androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.BitMatrix image
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.journeyapps.barcodescanner.ViewfinderView: android.graphics.Bitmap resultBitmap
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.journeyapps.barcodescanner.DefaultDecoderFactory: int scanType
androidx.fragment.app.DefaultSpecialEffectsController$5: android.view.ViewGroup val$container
androidx.appcompat.widget.DropDownListView: boolean mDrawsInPressedState
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_ANIMATOR
androidx.appcompat.R$dimen: int abc_search_view_preferred_width
androidx.fragment.app.BackStackState: int mTransition
kotlinx.coroutines.flow.internal.SafeCollector: kotlinx.coroutines.flow.FlowCollector collector
com.google.zxing.oned.Code93Reader: java.lang.StringBuilder decodeRowResult
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbShortTitleText
androidx.appcompat.R$styleable: int[] MenuItem
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
androidx.fragment.app.FragmentTransitionCompat21$3: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.window.embedding.SplitRule: int minSmallestWidth
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mItem
com.google.zxing.client.android.R$styleable: int[] FontFamilyFont
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_SUCCESS
kotlinx.coroutines.scheduling.TaskImpl: java.lang.Runnable block
androidx.appcompat.app.AlertController$AlertParams: android.widget.ListAdapter mAdapter
androidx.core.R$id: int accessibility_custom_action_9
androidx.appcompat.widget.ScrollingTabContainerView: android.view.animation.Interpolator sAlphaInterpolator
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
com.google.zxing.client.android.AmbientLightManager: com.journeyapps.barcodescanner.camera.CameraSettings cameraSettings
com.journeyapps.barcodescanner.CameraPreview: android.view.WindowManager windowManager
androidx.window.core.Bounds: int top
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleY
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode AUTO
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] C40_SHIFT2_SET_CHARS
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.core.provider.FontRequest: int mCertificatesArray
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
androidx.core.widget.AutoScrollHelper: boolean mEnabled
com.google.zxing.oned.EAN13Reader: int[] decodeMiddleCounters
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTint
androidx.core.content.res.ResourcesCompat: java.lang.Object sColorStateCacheLock
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: androidx.core.content.res.ResourcesCompat$FontCallback mFontCallback
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflow
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable mPendingOverflowIcon
androidx.appcompat.view.menu.MenuBuilder: int mDefaultShowAsAction
androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.fragment.app.FragmentLayoutInflaterFactory: androidx.fragment.app.FragmentManager mFragmentManager
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
com.journeyapps.barcodescanner.BarcodeView: android.os.Handler resultHandler
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.FinderPattern finderPattern
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementTargetNames
com.journeyapps.barcodescanner.CameraPreview: android.view.SurfaceView surfaceView
androidx.core.widget.AutoScrollHelper: boolean mNeedsCancel
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp1252
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: int position
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
androidx.lifecycle.LiveData: int mActiveCount
androidx.core.widget.NestedScrollView$SavedState: int scrollPosition
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
androidx.lifecycle.SavedStateHandleController$1: androidx.lifecycle.Lifecycle val$lifecycle
androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.appcompat.R$styleable: int[] PopupWindowBackgroundState
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mChangingConfigurations
androidx.window.R$attr: int finishSecondaryWithPrimary
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_10
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Big5
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: int bottomOffset
androidx.appcompat.R$drawable: int abc_star_half_black_48dp
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mLogo
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: androidx.core.view.ViewPropertyAnimatorCompat mVpa
com.google.zxing.oned.rss.Pair: com.google.zxing.oned.rss.FinderPattern finderPattern
androidx.fragment.app.DefaultSpecialEffectsController$1: androidx.fragment.app.SpecialEffectsController$Operation val$operation
androidx.appcompat.R$styleable: int Spinner_android_prompt
androidx.appcompat.R$styleable: int AlertDialog_singleChoiceItemLayout
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
androidx.collection.LruCache: java.util.LinkedHashMap map
androidx.appcompat.R$styleable: int Toolbar_buttonGravity
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
androidx.core.R$id: int accessibility_custom_action_21
androidx.core.os.CancellationSignal: java.lang.Object mCancellationSignalObj
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceAppSearchIntent
androidx.fragment.app.FragmentContainerView: java.util.ArrayList mTransitioningFragmentViews
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
androidx.appcompat.R$id: int spacer
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController val$dialog
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType BYTE_SEGMENTS
androidx.window.R$id: int rtl
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
androidx.appcompat.widget.SuggestionsAdapter: int mIconName1Col
androidx.appcompat.R$styleable: int[] Toolbar
androidx.core.view.ContentInfoCompat$Builder: int mFlags
androidx.fragment.app.FragmentManager: java.util.Map mResults
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mShownAnchorView
androidx.appcompat.widget.ActivityChooserView$InnerLayout: int[] TINT_ATTRS
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
androidx.collection.LruCache: int maxSize
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
com.journeyapps.barcodescanner.camera.AutoFocusManager: java.util.Collection FOCUS_MODES_CALLING_AF
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
androidx.appcompat.R$styleable: int AppCompatTextView_drawableLeftCompat
androidx.lifecycle.SavedStateHandleController: java.lang.String mKey
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode
androidx.appcompat.R$styleable: int[] FontFamilyFont
androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableIMEPersonalizedLearning
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ASCII
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader
androidx.fragment.app.SpecialEffectsController$1: androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation val$operation
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: android.view.MenuItem mHoveredMenuItem
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
androidx.fragment.app.DefaultSpecialEffectsController$9: androidx.fragment.app.DefaultSpecialEffectsController this$0
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTopCompat
com.journeyapps.barcodescanner.camera.CameraSettings: boolean meteringEnabled
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastInnerInsets
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.core.graphics.Insets: int right
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mHasPresetAutoSizeValues
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
androidx.fragment.app.Fragment$AnimationInfo: int mEnterAnim
com.journeyapps.barcodescanner.camera.CameraThread: android.os.Handler handler
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementSourceNames
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.provider.RequestExecutor$ReplyRunnable: java.util.concurrent.Callable mCallable
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol POLL_FAILED
androidx.appcompat.widget.Toolbar: int mTitleMarginStart
kotlinx.coroutines.internal.DispatchedContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU
kotlinx.coroutines.CoroutineExceptionHandler$Key: kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE
androidx.fragment.app.FragmentStateManager: boolean mMovingToState
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.ResourceManagerInternal mResourceManager
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView
androidx.appcompat.R$layout: int abc_action_menu_layout
androidx.fragment.app.Fragment$3: androidx.fragment.app.SpecialEffectsController val$controller
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableRightTint
androidx.appcompat.widget.SearchView: android.widget.ImageView mVoiceButton
androidx.appcompat.R$layout: int abc_screen_toolbar
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
com.journeyapps.barcodescanner.camera.AutoFocusManager: boolean focusing
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView
androidx.appcompat.view.menu.MenuItemImpl$1: androidx.appcompat.view.menu.MenuItemImpl this$0
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener
androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
androidx.appcompat.app.AlertController: android.widget.ImageView mIconView
com.google.zxing.aztec.AztecDetectorResult: int nbLayers
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.view.menu.MenuBuilder menu
androidx.collection.ArraySet: java.lang.Object[] mArray
androidx.fragment.app.SpecialEffectsController: android.view.ViewGroup mContainer
androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence deltaText
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.view.WindowInsetsCompat CONSUMED
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
androidx.appcompat.view.menu.BaseMenuWrapper: androidx.collection.SimpleArrayMap mMenuItems
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$enteringViews
com.benjaminabel.vibration.VibrationMethodChannelHandler: boolean $assertionsDisabled
com.journeyapps.barcodescanner.camera.CameraThread: java.lang.String TAG
com.google.zxing.common.detector.WhiteRectangleDetector: int leftInit
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.fragment.app.FragmentTransitionImpl$3: androidx.fragment.app.FragmentTransitionImpl this$0
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.google.zxing.client.android.R$layout: int zxing_barcode_scanner
com.journeyapps.barcodescanner.camera.AutoFocusManager: java.lang.String TAG
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI EUC_KR
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE
androidx.appcompat.R$styleable: int Toolbar_titleTextColor
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraSettings cameraSettings
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxAscent
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizePresetSizes
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map bufferedMessages
androidx.fragment.app.SpecialEffectsController: boolean mIsContainerPostponed
androidx.appcompat.graphics.drawable.DrawableContainer$1: androidx.appcompat.graphics.drawable.DrawableContainer this$0
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNeutralButtonListener
androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConsumedFieldFetched
com.google.zxing.client.android.InactivityTimer: boolean onBattery
androidx.appcompat.R$dimen: int abc_search_view_preferred_height
androidx.appcompat.R$drawable: int abc_btn_colored_material
androidx.fragment.app.BackStackState: int[] mCurrentMaxLifecycleStates
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE
androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed
androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentManager this$0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean mHasReversibleFlag
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH
com.journeyapps.barcodescanner.DecoderThread: java.lang.String TAG
com.google.zxing.common.BitMatrix: int height
kotlinx.coroutines.channels.ConflatedChannel: java.util.concurrent.locks.ReentrantLock lock
androidx.appcompat.R$styleable: int MenuItem_tooltipText
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_visible
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset
androidx.appcompat.R$styleable: int ActionBar_backgroundStacked
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mActionItems
androidx.collection.ArraySet: int[] mHashes
androidx.appcompat.R$styleable: int Spinner_android_popupBackground
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.ViewfinderView viewFinder
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuView mMenuView
androidx.activity.result.ActivityResultRegistry$3: int val$requestCode
com.google.zxing.client.android.R$styleable: int[] FontFamily
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest mRequest
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
androidx.appcompat.widget.AppCompatImageHelper: android.widget.ImageView mView
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: com.journeyapps.barcodescanner.camera.CameraManager this$0
androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance
io.flutter.view.AccessibilityBridge$StringAttribute: io.flutter.view.AccessibilityBridge$StringAttributeType type
androidx.fragment.app.FragmentManager$1: androidx.fragment.app.FragmentManager this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.app.WindowDecorActionBar this$0
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.R$styleable: int RecycleListView_paddingBottomNoButtons
androidx.core.widget.NestedScrollView: boolean mIsBeingDragged
androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
io.flutter.embedding.engine.dart.DartMessenger: java.lang.Object handlersLock
androidx.fragment.app.FragmentState: int mMaxLifecycleState
androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha
androidx.fragment.app.SpecialEffectsController: java.util.ArrayList mRunningOperations
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
androidx.appcompat.app.AlertController$2: androidx.appcompat.app.AlertController this$0
androidx.appcompat.widget.SearchView$7: androidx.appcompat.widget.SearchView this$0
androidx.window.R$attr: int splitRatio
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder$Callback mCallback
androidx.fragment.app.FragmentStateManager$1: androidx.fragment.app.FragmentStateManager this$0
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
androidx.appcompat.R$id: int topPanel
androidx.appcompat.R$drawable: int abc_ratingbar_small_material
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType STRUCTURED_APPEND_SEQUENCE
androidx.core.widget.PopupWindowCompat: boolean sOverlapAnchorFieldAttempted
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent mIntent
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraManager cameraManager
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetEpicenterBoundsMethod
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.google.zxing.aztec.AztecDetectorResult: int nbDatablocks
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue
androidx.fragment.app.DefaultSpecialEffectsController$4: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutAlphabeticModifiers
com.google.zxing.pdf417.decoder.BoundingBox: int maxY
androidx.appcompat.widget.ListPopupWindow: int mPromptPosition
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
androidx.appcompat.view.ContextThemeWrapper: int mThemeResource
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
com.journeyapps.barcodescanner.DecoderThread: com.journeyapps.barcodescanner.camera.CameraInstance cameraInstance
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner
androidx.fragment.app.FragmentContainerView: boolean mDrawDisappearingViewsFirst
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
androidx.appcompat.widget.TintInfo: boolean mHasTintMode
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup mPopup
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
androidx.appcompat.view.SupportActionModeWrapper: androidx.appcompat.view.ActionMode mWrappedObject
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.ActionProvider mInner
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mCachedRootAlpha
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.collection.ArrayMap mTargetNameMap
com.google.zxing.pdf417.detector.PDF417DetectorResult: java.util.List points
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Constructor sFontFamilyCtor
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_14
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
androidx.appcompat.widget.SearchView: java.lang.CharSequence mDefaultQueryHint
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle parentHandle
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
androidx.appcompat.R$styleable: int[] FontFamily
androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache
androidx.collection.ArraySet: int sTwiceBaseCacheSize
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater mInflater
androidx.appcompat.R$styleable: int Toolbar_contentInsetStart
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList mButtonTintList
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int mChangingConfigurations
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry mRegistry
androidx.appcompat.app.WindowDecorActionBar: boolean mHideOnContentScroll
androidx.appcompat.R$styleable: int AppCompatImageView_tint
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren
androidx.appcompat.app.AppCompatDelegateImpl$5: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.R$attr: int dialogTheme
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: androidx.appcompat.widget.ListPopupWindow this$0
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod
com.benjaminabel.vibration.Vibration: android.os.Vibrator vibrator
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar
androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
androidx.appcompat.R$styleable: int AlertDialog_multiChoiceItemLayout
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutNumericChar
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext
kotlinx.coroutines.channels.AbstractSendChannel: kotlin.jvm.functions.Function1 onUndeliveredElement
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
androidx.fragment.app.Fragment: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: int label
androidx.window.R$attr: int splitMinSmallestWidth
androidx.appcompat.app.TwilightManager$TwilightState: long tomorrowSunrise
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
com.google.zxing.oned.rss.AbstractRSSReader: float[] oddRoundingErrors
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View$OnFocusChangeListener val$userFocusListener
com.google.zxing.maxicode.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix bitMatrix
com.google.zxing.common.reedsolomon.GenericGF: int size
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: com.journeyapps.barcodescanner.BarcodeCallback delegate
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat PDF_417
com.google.zxing.pdf417.decoder.BarcodeMetadata: int rowCountUpperPart
androidx.core.R$styleable: int[] FontFamily
com.google.zxing.oned.rss.AbstractRSSReader: int[] decodeFinderCounters
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionViewClassName
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources mResources
androidx.appcompat.widget.ListPopupWindow: android.widget.PopupWindow mPopup
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
androidx.cursoradapter.widget.CursorAdapter: android.content.Context mContext
androidx.appcompat.R$styleable: int LinearLayoutCompat_showDividers
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon
androidx.fragment.app.FragmentManager: boolean DEBUG
androidx.appcompat.R$id: int group_divider
androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp
kotlinx.coroutines.UndispatchedCoroutine: java.lang.Object savedOldValue
androidx.appcompat.R$attr: int checkboxStyle
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
com.google.zxing.datamatrix.decoder.Version$ECB: int count
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
io.flutter.plugin.editing.TextEditingDelta: int newSelectionStart
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaY
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStarted
androidx.appcompat.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod
com.google.zxing.pdf417.decoder.BarcodeMetadata: int rowCount
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: kotlinx.coroutines.flow.internal.SafeCollector $this_checkContext
com.google.zxing.oned.UPCEANReader: int[] END_PATTERN
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList mIconTintList
com.google.zxing.oned.EAN8Reader: int[] decodeMiddleCounters
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
androidx.lifecycle.LiveData: java.lang.Object mDataLock
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mAllowCaching
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutAlphabeticChar
androidx.appcompat.R$styleable: int MenuItem_android_title
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.zxing.oned.CodaBarReader: int[] counters
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.appcompat.R$styleable: int AlertDialog_android_layout
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat mRootWindowInsets
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
androidx.collection.MapCollections$ArrayIterator: int mOffset
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownVerticalOffsetSet
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] DIGIT_TABLE
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration
androidx.core.R$styleable: int GradientColor_android_type
androidx.appcompat.app.TwilightCalculator: int state
androidx.appcompat.R$styleable: int ActionBar_customNavigationLayout
androidx.appcompat.widget.ButtonBarLayout: int mLastWidthSize
io.flutter.embedding.android.KeyboardManager: android.view.View view
androidx.appcompat.R$styleable: int Toolbar_subtitle
androidx.appcompat.widget.ForwardingListener: boolean mForwarding
androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence mPrompt
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.zxing.pdf417.detector.Detector: int[] INDEXES_STOP_PATTERN
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorCompat this$0
net.touchcapture.qr.flutterqr.Shared: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding binding
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode NUMERIC
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.ArrayList sViewsWithListeners
androidx.core.provider.RequestExecutor$ReplyRunnable$1: androidx.core.util.Consumer val$consumer
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
androidx.appcompat.view.menu.MenuBuilder: android.content.Context mContext
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
io.flutter.plugin.platform.SingleViewPresentation: int viewId
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
androidx.appcompat.widget.TooltipPopup: android.graphics.Rect mTmpDisplayFrame
androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int height
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.reflect.Constructor $constructor$inlined
androidx.core.R$id: int accessibility_custom_action_6
androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.appcompat.R$attr: int colorControlHighlight
androidx.fragment.R$id: int special_effects_controller_view_tag
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
androidx.appcompat.widget.AppCompatSpinner: int[] ATTRS_ANDROID_SPINNERMODE
androidx.appcompat.R$styleable: int ButtonBarLayout_allowStacking
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat
com.google.zxing.pdf417.decoder.Codeword: int bucket
androidx.core.provider.RequestExecutor$ReplyRunnable: androidx.core.util.Consumer mConsumer
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mMenuPrepared
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateX
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 this$1
androidx.core.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ExpandedMenuView mMenuView
androidx.fragment.app.LogWriter: java.lang.String mTag
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
androidx.window.R$styleable: int[] SplitPairRule
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
androidx.appcompat.app.AppCompatActivity$2: androidx.appcompat.app.AppCompatActivity this$0
androidx.appcompat.R$styleable: int SearchView_voiceIcon
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mShowingMenus
androidx.appcompat.widget.TooltipCompatHandler$1: androidx.appcompat.widget.TooltipCompatHandler this$0
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE
com.journeyapps.barcodescanner.ViewfinderView: com.journeyapps.barcodescanner.Size previewSize
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
io.flutter.embedding.android.DrawableSplashScreen: android.widget.ImageView$ScaleType scaleType
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int mExpandedIndex
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded
com.google.zxing.aztec.detector.Detector$Point: int y
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.contract.ActivityResultContract val$contract
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_4
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.ActionMode$Callback mCallback
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mBackgroundTint
androidx.appcompat.view.StandaloneActionMode: boolean mFinished
com.google.zxing.aztec.decoder.Decoder: com.google.zxing.aztec.AztecDetectorResult ddata
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU
androidx.core.provider.CallbackWithHandler$1: android.graphics.Typeface val$typeface
androidx.window.R$styleable: int ActivityFilter_activityAction
kotlinx.coroutines.channels.ArrayChannel: int capacity
com.journeyapps.barcodescanner.camera.CameraManager: int rotationDegrees
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
kotlinx.coroutines.DispatchedCoroutine: int _decision
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.appcompat.R$attr: int actionBarSize
androidx.fragment.app.DefaultSpecialEffectsController$6: boolean val$isPop
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
com.journeyapps.barcodescanner.camera.AutoFocusManager: int MESSAGE_FOCUS
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$exitTransition
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxDescent
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.BarcodeMetadata barcodeMetadata
androidx.core.widget.NestedScrollView: boolean mIsLaidOut
androidx.core.view.WindowInsetsControllerCompat: androidx.core.view.WindowInsetsControllerCompat$Impl mImpl
androidx.core.widget.AutoScrollHelper: int mActivationDelay
com.google.zxing.pdf417.decoder.BarcodeValue: java.util.Map values
com.google.zxing.maxicode.decoder.Decoder: com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] TEXT_BASIC_SET_CHARS
androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: androidx.appcompat.widget.ActionMenuView this$0
com.journeyapps.barcodescanner.camera.CameraManager: android.content.Context context
androidx.appcompat.R$attr: int imageButtonStyle
androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral
androidx.appcompat.R$styleable: int Toolbar_android_gravity
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusGF field
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
com.journeyapps.barcodescanner.CameraPreview: android.os.Handler stateHandler
com.google.zxing.qrcode.decoder.DataBlock: byte[] codewords
io.flutter.Log: int ASSERT
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCategoryOrder
androidx.core.R$styleable: int GradientColor_android_centerY
com.journeyapps.barcodescanner.ViewfinderView: java.util.List possibleResultPoints
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTint
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTint
com.journeyapps.barcodescanner.camera.CameraInstance$3: com.journeyapps.barcodescanner.camera.CameraInstance this$0
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.lifecycle.ClassesInfoCache: java.util.Map mCallbackMap
androidx.appcompat.widget.AppCompatTextHelper: android.widget.TextView mView
com.google.zxing.common.DecoderResult: java.lang.String ecLevel
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: int encodedValue
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl mImpl
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] $VALUES
androidx.appcompat.widget.ActionBarOverlayLayout$2: androidx.appcompat.widget.ActionBarOverlayLayout this$0
androidx.core.graphics.PathParser$PathDataNode: float[] mParams
androidx.appcompat.R$id: int customPanel
androidx.appcompat.R$id: int action_mode_close_button
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNeutralText
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size containerSize
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object $receiver$inlined
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex
androidx.appcompat.R$id: int submit_area
androidx.appcompat.widget.AppCompatTextHelper$2: android.widget.TextView val$textView
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mRequestPermissions
androidx.core.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.fragment.app.FragmentActivity: boolean mCreated
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState
androidx.appcompat.app.AlertController$4: androidx.appcompat.app.AlertController this$0
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed
androidx.appcompat.app.AlertController: android.os.Handler mHandler
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryOwner mOwner
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly one
androidx.appcompat.R$id: int edit_query
com.google.zxing.qrcode.decoder.Version: int[] VERSION_DECODE_INFO
androidx.core.app.ActivityRecreator: android.os.Handler mainHandler
androidx.fragment.app.FragmentState: boolean mDetached
androidx.appcompat.R$styleable: int MenuGroup_android_orderInCategory
io.flutter.view.AccessibilityBridge: int FOCUSABLE_FLAGS
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
androidx.core.app.ActivityRecreator$2: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
androidx.fragment.app.FragmentState: int mFragmentId
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTint
androidx.appcompat.R$styleable: int SearchView_submitBackground
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED
com.google.zxing.oned.UPCEANExtensionSupport: com.google.zxing.oned.UPCEANExtension2Support twoSupport
androidx.appcompat.widget.SearchView: boolean mVoiceButtonEnabled
androidx.appcompat.R$attr: int searchViewStyle
androidx.core.R$id: int accessibility_custom_action_23
androidx.appcompat.R$styleable: int TextAppearance_textLocale
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
androidx.appcompat.view.menu.ListMenuPresenter: int mItemLayoutRes
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode CONTINUOUS
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size framingRectSize
com.journeyapps.barcodescanner.camera.CameraSettings: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode focusMode
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_2
net.touchcapture.qr.flutterqr.Shared: android.app.Activity activity
androidx.core.text.PrecomputedTextCompat: android.text.Spannable mText
androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
androidx.appcompat.R$attr: int actionBarTheme
androidx.appcompat.widget.ListPopupWindow: java.lang.Runnable mShowDropDownRunnable
androidx.appcompat.R$styleable: int SearchView_android_focusable
androidx.appcompat.view.menu.MenuItemImpl: int mGroup
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode HANZI
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mAnimatingAway
androidx.appcompat.view.menu.CascadingMenuPopup: int mRawDropDownGravity
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: boolean isEventHandled
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner val$this$0
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup
io.flutter.embedding.android.FlutterActivity: int FLUTTER_VIEW_ID
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.appcompat.widget.DropDownListView: android.graphics.Rect mSelectorRect
androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: java.nio.ByteBuffer message
androidx.appcompat.view.menu.ActionMenuItem: int mOrdering
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.datamatrix.decoder.Decoder decoder
kotlinx.coroutines.scheduling.NonBlockingContext: int taskMode
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem
com.google.zxing.client.android.camera.open.OpenCameraInterface: java.lang.String TAG
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaX
androidx.savedstate.SavedStateRegistry: androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object[] buffer
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNegativeButtonListener
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$RecycleListView val$listView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
io.flutter.Log: int VERBOSE
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.TextView mTextView
com.google.zxing.datamatrix.decoder.Version: int symbolSizeColumns
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.appcompat.view.menu.StandardMenuPopup$1: androidx.appcompat.view.menu.StandardMenuPopup this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint
androidx.fragment.app.FragmentTransition$6: boolean val$inIsPop
androidx.appcompat.app.AlertController$AlertParams: int mIconId
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
androidx.fragment.app.Fragment: boolean mFromLayout
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Class mViewCommandArgumentClass
com.google.zxing.datamatrix.decoder.Version: int versionNumber
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: java.lang.String mSystemFontFamilyName
androidx.appcompat.widget.Toolbar: int[] mTempMargins
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.appcompat.app.WindowDecorActionBar$2: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
com.google.zxing.pdf417.detector.Detector: int[] INDEXES_START_PATTERN
androidx.appcompat.R$drawable: int abc_ic_ab_back_material
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: androidx.appcompat.widget.ActionMenuPresenter this$0
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Constructor sConstructor
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: androidx.appcompat.widget.AppCompatSpinner this$0
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
androidx.appcompat.R$styleable: int Spinner_popupTheme
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: int firstDigit
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
androidx.fragment.app.FragmentTransition$6: java.lang.Object val$finalSharedElementTransition
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy previewScalingStrategy
androidx.appcompat.R$styleable: int Spinner_android_dropDownWidth
androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.app.AlertController$AlertParams: boolean[] mCheckedItems
com.journeyapps.barcodescanner.CameraPreview$1: com.journeyapps.barcodescanner.CameraPreview this$0
androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType STRUCTURED_APPEND_PARITY
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mRotate
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset
androidx.appcompat.widget.SearchView: boolean mIconifiedByDefault
androidx.appcompat.R$attr: int panelMenuListTheme
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitRight
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint
androidx.fragment.app.Fragment: boolean mHidden
androidx.appcompat.widget.ActionMenuPresenter: int mMinCellSize
androidx.core.R$id: int accessibility_custom_action_20
androidx.fragment.app.Fragment: int mContainerId
com.google.zxing.client.android.R$id: int zxing_barcode_scanner
androidx.collection.LruCache: int missCount
kotlinx.coroutines.scheduling.CoroutineScheduler: int maxPoolSize
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
androidx.appcompat.R$layout: int abc_popup_menu_item_layout
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup
kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime
com.google.zxing.pdf417.PDF417ResultMetadata: java.lang.String addressee
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE
androidx.core.widget.NestedScrollView: int mLastScrollerY
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem
androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.window.R$attr: int clearTop
kotlin.sequences.ConstrainedOnceSequence: java.util.concurrent.atomic.AtomicReference sequenceRef
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: androidx.fragment.app.FragmentStateManager mFragmentStateManager
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
androidx.appcompat.R$attr: int colorControlNormal
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds
com.google.zxing.common.StringUtils: java.lang.String PLATFORM_DEFAULT_ENCODING
com.google.zxing.qrcode.decoder.FormatInformation: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder mParentMenu
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[][] FINDER_PATTERN_SEQUENCES
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.R$drawable: int abc_edit_text_material
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mSkipNextApply
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController val$dialog
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
androidx.fragment.R$styleable: int[] FontFamily
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$exitingViews
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mAdvanceKey
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.core.view.ActionProvider$VisibilityListener mListener
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI[] $VALUES
androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView
androidx.interpolator.view.animation.LookupTableInterpolator: float[] mValues
androidx.appcompat.widget.SearchView: int mSuggestionCommitIconResId
com.journeyapps.barcodescanner.CameraPreview: java.util.List stateListeners
androidx.appcompat.widget.AppCompatSeekBarHelper: android.widget.SeekBar mView
androidx.appcompat.view.menu.CascadingMenuPopup: int ITEM_LAYOUT
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCache_mUnthemedEntriesFieldFetched
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.common.BitMatrix image
androidx.appcompat.app.WindowDecorActionBar$1: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.window.embedding.SplitPairRule: java.util.Set filters
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers
androidx.appcompat.app.AlertDialog$Builder: int mTheme
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableBottomTint
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES
androidx.appcompat.widget.MenuPopupWindow: java.lang.reflect.Method sSetTouchModalMethod
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mVariationSettings
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager
androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemChecked
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
com.google.zxing.common.BitMatrix: int rowSize
io.flutter.plugin.platform.VirtualDisplayController: android.view.Surface surface
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
kotlinx.coroutines.flow.SafeFlow: kotlin.jvm.functions.Function2 block
com.google.zxing.pdf417.decoder.ec.ModulusGF: int[] logTable
androidx.fragment.app.DefaultSpecialEffectsController$6: androidx.fragment.app.SpecialEffectsController$Operation val$firstOut
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable
androidx.lifecycle.SavedStateHandleController$1: androidx.savedstate.SavedStateRegistry val$registry
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri mContentUri
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mAnimating
androidx.appcompat.widget.ForwardingListener: float mScaledTouchSlop
androidx.core.view.ContentInfoCompat: int mSource
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1 INSTANCE
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: android.content.res.ColorStateList mValue
androidx.appcompat.R$attr: int actionDropDownStyle
androidx.appcompat.widget.SearchView: java.util.WeakHashMap mOutsideDrawablesCache
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.google.zxing.qrcode.decoder.DataBlock: int numDataCodewords
com.google.zxing.PlanarYUVLuminanceSource: int dataHeight
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView flutterView
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
androidx.appcompat.R$styleable: int AppCompatTextView_lineHeight
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mAnchorView
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityY
androidx.fragment.app.DefaultSpecialEffectsController$4: android.view.View val$viewToAnimate
com.google.zxing.NotFoundException: com.google.zxing.NotFoundException INSTANCE
androidx.appcompat.R$styleable: int AppCompatSeekBar_android_thumb
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: int mPriority
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8
androidx.appcompat.widget.Toolbar$3: androidx.appcompat.widget.Toolbar this$0
androidx.appcompat.view.menu.StandardMenuPopup: int mDropDownGravity
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled
com.google.zxing.pdf417.PDF417Common: int[] EMPTY_INT_ARRAY
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.google.zxing.PlanarYUVLuminanceSource: int top
androidx.appcompat.widget.SearchView: android.view.View mSearchPlate
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: android.app.Activity mActivity
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility
androidx.appcompat.widget.Toolbar: boolean mEatingHover
com.google.zxing.PlanarYUVLuminanceSource: int dataWidth
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy this$0
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineChildTop
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
androidx.appcompat.widget.FitWindowsLinearLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
androidx.core.R$id: int accessibility_custom_action_30
net.touchcapture.qr.flutterqr.QRView: int id
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK
net.touchcapture.qr.flutterqr.QRView: io.flutter.plugin.common.MethodChannel channel
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
androidx.fragment.app.FragmentManager$10: androidx.fragment.app.FragmentManager this$0
kotlin.random.Random: kotlin.random.Random defaultRandom
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.collection.SimpleArrayMap: int[] mHashes
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: com.google.zxing.pdf417.decoder.ec.ModulusGF field
androidx.appcompat.view.menu.MenuItemImpl: boolean mNeedToApplyIconTint
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
com.google.zxing.qrcode.decoder.FormatInformation: int[][] FORMAT_INFO_DECODE_LOOKUP
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.google.zxing.pdf417.detector.Detector: int[] START_PATTERN
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object result
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.concurrent.ExecutorService executor
com.google.zxing.common.DecoderResult: java.lang.Object other
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
androidx.fragment.app.FragmentManagerViewModel: boolean mIsStateSaved
androidx.appcompat.widget.FitWindowsFrameLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
androidx.appcompat.widget.SearchView: android.view.View$OnKeyListener mTextKeyListener
androidx.activity.ComponentActivity$4: androidx.activity.ComponentActivity this$0
androidx.appcompat.widget.SuggestionsAdapter: int mCommitIconResId
com.google.zxing.common.BitSource: int byteOffset
com.google.zxing.aztec.AztecDetectorResult: boolean compact
androidx.fragment.R$styleable: int[] GradientColorItem
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager$TwilightState mTwilightState
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner mTabSpinner
androidx.appcompat.R$styleable: int[] SwitchCompat
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$inFragment
androidx.core.view.ContentInfoCompat: android.os.Bundle mExtras
androidx.appcompat.widget.ForwardingListener: int mActivePointerId
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object result
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable
androidx.appcompat.app.AlertController$AlertParams: android.view.View mCustomTitleView
com.google.zxing.datamatrix.decoder.Version: int dataRegionSizeRows
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY
androidx.core.R$id: int tag_state_description
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Rect mTmpBounds
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer
androidx.fragment.app.FragmentManager: java.util.Map mResultListeners
androidx.fragment.app.Fragment$AnimationInfo: java.util.ArrayList mSharedElementSourceNames
androidx.appcompat.R$drawable: int abc_btn_radio_material
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.Typeface mFontTypeface
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
androidx.appcompat.R$id: int action_menu_presenter
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper
androidx.fragment.app.Fragment: boolean mMenuVisible
androidx.appcompat.view.menu.MenuItemImpl: int mFlags
androidx.core.view.ContentInfoCompat: android.content.ClipData mClip
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
com.google.zxing.InvertedLuminanceSource: com.google.zxing.LuminanceSource delegate
androidx.fragment.app.FragmentTransition$5: android.graphics.Rect val$epicenter
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mDispatcher
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix bitMatrix
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsetsRect
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
androidx.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mTagKey
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav
androidx.window.embedding.ActivityStack: boolean isEmpty
androidx.appcompat.widget.ActionBarContainer: int mHeight
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.TextPaint mTempTextPaint
com.google.zxing.pdf417.decoder.BoundingBox: int minY
androidx.appcompat.widget.ActionBarContextView: int mSubtitleStyleRes
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext lastEmissionContext
androidx.core.provider.FontRequest: java.lang.String mQuery
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController$AlertParams this$0
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED
androidx.appcompat.view.menu.CascadingMenuPopup: int mMenuMaxWidth
androidx.appcompat.R$layout: int abc_popup_menu_header_item_layout
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources mResources
androidx.appcompat.widget.ListPopupWindow: android.content.Context mContext
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.appcompat.app.AlertController$AlertParams: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
androidx.fragment.app.FragmentState: boolean mFromLayout
androidx.appcompat.R$attr: int spinnerStyle
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version[] VERSIONS
androidx.fragment.app.Fragment$AnimationInfo: java.util.ArrayList mSharedElementTargetNames
androidx.fragment.app.DefaultSpecialEffectsController$3: android.animation.Animator val$animator
androidx.appcompat.R$styleable: int Toolbar_contentInsetRight
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
androidx.appcompat.widget.TooltipPopup: android.widget.TextView mMessageView
androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: androidx.appcompat.widget.ActionMenuPresenter this$0
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
androidx.appcompat.R$styleable: int TextAppearance_android_fontFamily
androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified
com.google.zxing.qrcode.detector.FinderPattern: int count
com.google.zxing.common.BitMatrix: int[] bits
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List valueAttributes
androidx.core.provider.FontRequestWorker: java.lang.Object LOCK
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.common.BitArray information
kotlin.coroutines.CombinedContext$toString$1: kotlin.coroutines.CombinedContext$toString$1 INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sDrawableCacheField
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.ref.WeakReference mCustomView
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY
androidx.appcompat.app.AlertController: int mListItemLayout
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.SubMenuBuilder mSubMenu
com.google.zxing.client.android.R$styleable: int[] GradientColorItem
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mAnchorView
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne
androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ActionMenuItemView this$0
androidx.appcompat.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon
androidx.appcompat.R$styleable: int MenuGroup_android_checkableBehavior
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: int bits
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode KANJI
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mIconView
androidx.fragment.app.FragmentTransition: int[] INVERSE_OPS
androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
androidx.appcompat.widget.SearchView$9: androidx.appcompat.widget.SearchView this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mTitle
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
com.google.zxing.pdf417.PDF417ResultMetadata: int segmentIndex
androidx.appcompat.R$attr: int editTextStyle
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemAlphabeticModifiers
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty
androidx.fragment.app.FragmentManager$7: androidx.fragment.app.Fragment val$fragment
androidx.appcompat.R$id: int search_button
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Matrix mTmpMatrix
androidx.core.widget.AutoScrollHelper: boolean mNeedsReset
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue
androidx.lifecycle.ViewModel: boolean mCleared
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE
io.flutter.FlutterInjector: boolean accessed
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.widget.AppCompatSpinner: int mDropDownWidth
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
androidx.core.R$styleable: int FontFamilyFont_font
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutAlphabeticChar
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE
com.google.zxing.Binarizer: com.google.zxing.LuminanceSource source
androidx.appcompat.R$styleable: int[] MenuView
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_6
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.DataCharacter rightChar
com.google.zxing.client.android.R$styleable: int[] ColorStateListItem
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: androidx.appcompat.widget.ListPopupWindow this$0
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
androidx.appcompat.widget.AppCompatTextHelper$1: int val$style
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int startY
com.google.zxing.pdf417.PDF417ResultMetadata: long timestamp
io.flutter.plugin.editing.TextEditingDelta: int deltaStart
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
androidx.appcompat.R$styleable: int MenuGroup_android_id
androidx.core.app.TaskStackBuilder: android.content.Context mSourceContext
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect val$epicenter
androidx.appcompat.R$styleable: int ActionBar_contentInsetStart
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA
androidx.appcompat.R$attr: int seekBarStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix
io.flutter.embedding.android.FlutterSplashView$2: io.flutter.embedding.android.FlutterSplashView this$0
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.zxing.client.android.R$color: int zxing_viewfinder_mask
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextPaint mPaint
androidx.appcompat.widget.ViewStubCompat: androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener
kotlinx.coroutines.flow.AbstractFlow$collect$1: kotlinx.coroutines.flow.AbstractFlow this$0
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
androidx.fragment.R$id: int visible_removing_fragment_view_tag
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.widget.MenuPopupWindow window
androidx.appcompat.resources.R$styleable: int[] FontFamily
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView
androidx.appcompat.widget.ListPopupWindow: android.os.Handler mHandler
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_id
androidx.appcompat.app.AlertController: int mButtonPanelLayoutHint
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] UPPER_TABLE
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransition
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.DataCharacter leftChar
com.google.zxing.qrcode.decoder.DecodedBitStreamParser$1: int[] $SwitchMap$com$google$zxing$qrcode$decoder$Mode
com.google.zxing.oned.Code39Reader: boolean extendedMode
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasYOffset
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.widget.ListAdapter mListAdapter
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable
com.journeyapps.barcodescanner.CaptureManager: com.journeyapps.barcodescanner.CameraPreview$StateListener stateListener
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
androidx.core.R$styleable: int[] FontFamilyFont
com.google.zxing.oned.UPCAReader: com.google.zxing.oned.UPCEANReader ean13Reader
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
kotlinx.coroutines.scheduling.TasksKt: long WORK_STEALING_TIME_RESOLUTION_NS
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor executor
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
kotlin.Result: kotlin.Result$Companion Companion
androidx.appcompat.R$styleable: int SearchView_queryHint
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback
androidx.appcompat.widget.ThemeUtils: java.lang.ThreadLocal TL_TYPED_VALUE
com.journeyapps.barcodescanner.camera.CameraSurface: android.graphics.SurfaceTexture surfaceTexture
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_001
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol EMPTY
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager this$0
io.flutter.FlutterInjector$Builder$NamedThreadFactory: int threadId
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mBreakStrategy
androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance
androidx.appcompat.R$styleable: int MenuItem_actionLayout
androidx.fragment.R$id: int fragment_container_view_tag
androidx.core.graphics.PathParser$ExtractFloatResult: int mEndPosition
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: androidx.appcompat.widget.SearchView$SearchAutoComplete this$0
io.flutter.embedding.android.FlutterSplashView: java.lang.String previousCompletedSplashIsolate
androidx.appcompat.R$id: int custom
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: com.journeyapps.barcodescanner.Size val$desired
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementEnterTransition
com.journeyapps.barcodescanner.CaptureManager$1: com.journeyapps.barcodescanner.CaptureManager this$0
androidx.appcompat.R$styleable: int Toolbar_menu
com.google.zxing.FormatException: com.google.zxing.FormatException INSTANCE
androidx.appcompat.R$color: int abc_decor_view_status_guard
androidx.core.R$id: int tag_unhandled_key_event_manager
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode
com.google.zxing.qrcode.decoder.Mode: int bits
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mOriginalClickableSpanId
kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE
androidx.appcompat.R$id: int split_action_bar
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat mInsets
androidx.appcompat.view.menu.MenuItemImpl: java.lang.Runnable mItemCallback
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: android.view.MenuItem val$item
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflowSet
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
com.google.zxing.client.android.R$id: int zxing_viewfinder_view
androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment
com.google.zxing.oned.CodaBarReader: java.lang.StringBuilder decodeRowResult
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemContentDescription
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread thread
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize
androidx.core.view.ViewPropertyAnimatorCompat: int mOldLayerType
androidx.core.R$id: int accessibility_custom_action_11
com.google.zxing.client.android.InactivityTimer: java.lang.String TAG
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
androidx.appcompat.app.AlertController$AlertParams$2: int mLabelIndex
androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView$Companion Companion
com.journeyapps.barcodescanner.SourceData: int rotation
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator $this_asSequence$inlined
androidx.appcompat.R$id: int title
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.core.view.WindowInsetsControllerCompat mCompatController
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment mFragment
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
androidx.appcompat.R$styleable: int ActionMenuItemView_android_minWidth
androidx.appcompat.widget.SuggestionsAdapter: int mFlagsCol
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.atomic.AtomicIntegerFieldUpdater inFlightTasks$FU
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
androidx.fragment.app.FragmentTransition$5: boolean val$inIsPop
androidx.appcompat.view.menu.ListMenuItemView: boolean mPreserveIconSpacing
androidx.core.R$id: int accessibility_custom_action_18
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$Responder[] responders
kotlin.jvm.internal.ClassReference: kotlin.jvm.internal.ClassReference$Companion Companion
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback
androidx.collection.ArraySet: java.lang.Object[] sBaseCache
androidx.appcompat.widget.ActionBarOverlayLayout: android.animation.AnimatorListenerAdapter mTopAnimatorListener
androidx.appcompat.R$string: int abc_menu_alt_shortcut_label
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed
androidx.appcompat.R$drawable: int abc_text_cursor_material
androidx.appcompat.R$dimen: int tooltip_precise_anchor_threshold
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityX
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitleCondensed
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: java.util.List handlers
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.journeyapps.barcodescanner.camera.CameraInstance$1: com.journeyapps.barcodescanner.camera.CameraInstance this$0
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mResourceId
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List displayFeatures
io.flutter.plugin.platform.VirtualDisplayController$1: android.view.View val$embeddedView
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbTitleText
androidx.appcompat.view.menu.ListMenuItemView: android.widget.RadioButton mRadioButton
androidx.core.provider.CallbackWithHandler: android.os.Handler mCallbackHandler
com.journeyapps.barcodescanner.BarcodeResult: int mScaleFactor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getModuleMethod
com.journeyapps.barcodescanner.ViewfinderView: java.util.List lastPossibleResultPoints
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
androidx.appcompat.view.menu.ActionMenuItem: int mGroup
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState
androidx.appcompat.widget.AbsActionBarView: int mContentHeight
io.flutter.plugin.editing.TextEditingDelta: int newComposingStart
com.google.zxing.client.android.InactivityTimer: android.os.Handler handler
androidx.core.view.ViewCompat$Api21Impl$1: android.view.View val$v
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchorSet
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme
androidx.appcompat.widget.SuggestionsAdapter: android.content.res.ColorStateList mUrlColor
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitleCondensed
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[][] FINDER_PATTERNS
com.google.zxing.oned.rss.Pair: int count
com.journeyapps.barcodescanner.ViewfinderView: com.journeyapps.barcodescanner.CameraPreview cameraPreview
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource timeSource
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix image
com.journeyapps.barcodescanner.CaptureManager: boolean finishWhenClosed
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint to
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemAlphabeticShortcut
com.google.zxing.datamatrix.decoder.Version: int dataRegionSizeColumns
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector
androidx.appcompat.R$styleable: int Spinner_android_entries
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.graphics.Insets[] mInsetsTypeMask
androidx.core.app.ActivityCompat$1: java.lang.String[] val$permissions
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType ASSUME_GS1
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
androidx.appcompat.R$styleable: int ActionMode_height
kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
kotlinx.coroutines.DefaultExecutor: long KEEP_ALIVE_NANOS
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
androidx.core.R$styleable: int FontFamilyFont_android_fontWeight
androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
io.flutter.view.AccessibilityBridge: int previousRouteId
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp437
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mTitleView
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
androidx.appcompat.R$attr: int colorButtonNormal
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
androidx.appcompat.widget.AppCompatTextHelper$2: androidx.appcompat.widget.AppCompatTextHelper this$0
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
androidx.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
androidx.fragment.app.Fragment$3: androidx.fragment.app.Fragment this$0
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
androidx.appcompat.R$styleable: int ActionBar_popupTheme
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.graphics.Insets mStableInsets
kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
androidx.appcompat.app.AlertController$3: android.view.View val$top
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor
androidx.appcompat.R$styleable: int MenuItem_android_numericShortcut
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.camera.CameraSettings settings
androidx.appcompat.R$styleable: int[] AlertDialog
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle mHandle
androidx.fragment.app.FragmentTransition$6: android.graphics.Rect val$inEpicenter
androidx.core.widget.NestedScrollView: long mLastScroll
androidx.core.provider.CallbackWithHandler$1: androidx.core.provider.CallbackWithHandler this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mExitTransition
io.flutter.view.AccessibilityBridge$StringAttribute: int end
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: java.lang.String dateCode
androidx.appcompat.widget.SearchView$1: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTooltipText
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String name
io.flutter.embedding.android.FlutterSplashView: java.lang.String TAG
androidx.collection.LruCache: int size
androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long minDelayUntilStealableTaskNs
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.core.R$id: int accessibility_custom_action_25
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView
androidx.fragment.R$styleable: int[] Fragment
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp1250
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String hintText
androidx.fragment.app.Fragment: boolean mCalled
kotlin.SynchronizedLazyImpl: java.lang.Object lock
androidx.fragment.app.BackStackRecord: int mIndex
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: androidx.appcompat.widget.DropDownListView this$0
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.coroutines.CoroutineContext $context
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView mMenuView
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: java.util.concurrent.ExecutorService executorService
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon1
androidx.core.view.WindowInsetsControllerCompat$Impl30: android.view.WindowInsetsController mInsetsController
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance
androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
androidx.appcompat.R$dimen: int tooltip_y_offset_touch
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleRes
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
com.google.zxing.common.PerspectiveTransform: float a12
io.flutter.view.VsyncWaiter$DisplayListener: io.flutter.view.VsyncWaiter this$0
androidx.core.widget.ListViewAutoScrollHelper: android.widget.ListView mTarget
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mStopValue
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: int replyId
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.appcompat.R$styleable: int[] GradientColorItem
androidx.appcompat.app.AlertController: int mViewLayoutResId
androidx.appcompat.widget.ScrollingTabContainerView: int mContentHeight
net.touchcapture.qr.flutterqr.QRView: android.content.Context context
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
androidx.appcompat.R$dimen: int abc_config_prefDialogWidth
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: java.lang.String firstAIdigits
androidx.core.widget.NestedScrollView: float mVerticalScrollFactor
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_VALUES_HOLDER
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemId
androidx.core.R$id: int accessibility_custom_action_24
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity2ParamsMethod
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler mMainHandler
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Resources mResources
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionProviderClassName
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.zxing.client.android.R$id: int zxing_camera_closed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion
androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.String mThreadName
androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
androidx.appcompat.R$styleable: int ViewBackgroundHelper_android_background
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_gravity
com.journeyapps.barcodescanner.CaptureManager: com.journeyapps.barcodescanner.BarcodeCallback callback
androidx.appcompat.widget.ActionMenuPresenter: boolean mWidthLimitSet
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sGetMaxAvailableHeightMethod
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] mAutoSizeTextSizesInPx
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.BarcodeView$DecodeMode decodeMode
androidx.window.embedding.SplitInfo: float splitRatio
androidx.window.R$id: int locale
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: float[][] RATIOS_TABLE
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorListener val$listener
androidx.appcompat.app.AlertController$3: androidx.appcompat.app.AlertController this$0
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE
androidx.collection.ArraySet: int sBaseCacheSize
com.google.zxing.pdf417.decoder.BoundingBox: int minX
androidx.appcompat.app.AlertController: int mCheckedItem
androidx.appcompat.view.StandaloneActionMode: boolean mFocusable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
io.flutter.embedding.android.DrawableSplashScreen: io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView splashView
androidx.fragment.app.Fragment: java.lang.String mTag
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: int index
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.core.graphics.Insets: int left
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
androidx.appcompat.R$id: int search_plate
androidx.appcompat.view.StandaloneActionMode: android.content.Context mContext
androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.BoundingBox boundingBox
com.journeyapps.barcodescanner.RotationListener: android.view.WindowManager windowManager
androidx.appcompat.R$styleable: int[] LinearLayoutCompat
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
androidx.appcompat.app.AlertController: android.view.View mCustomTitleView
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
net.touchcapture.qr.flutterqr.QRView: boolean permissionGranted
androidx.appcompat.R$styleable: int SearchView_iconifiedByDefault
com.google.zxing.common.BitArray: int[] bits
com.google.zxing.pdf417.PDF417Common: int[] CODEWORD_TABLE
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: android.animation.ObjectAnimator mAnim
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableDeltaModel
com.google.zxing.aztec.detector.Detector: boolean compact
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VD_PLATFORM_VIEW
androidx.appcompat.R$styleable: int AppCompatImageView_tintMode
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
androidx.appcompat.view.StandaloneActionMode: java.lang.ref.WeakReference mCustomView
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect framingRect
androidx.core.R$attr: int nestedScrollViewStyle
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
com.google.zxing.ChecksumException: com.google.zxing.ChecksumException INSTANCE
com.journeyapps.barcodescanner.ViewfinderView: int maskColor
androidx.fragment.app.FragmentAnim$3: android.view.ViewGroup val$container
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
com.google.zxing.client.android.R$styleable: int[] zxing_view
androidx.appcompat.resources.R$styleable: int[] StateListDrawableItem
androidx.appcompat.R$id: int alertTitle
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: int mSlop
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback
androidx.fragment.app.Fragment: boolean mHasMenu
com.google.zxing.client.android.DecodeHintManager: java.lang.String TAG
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
androidx.core.os.CancellationSignal: boolean mIsCanceled
androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView
androidx.fragment.app.FragmentTransaction: java.lang.String mName
androidx.fragment.app.DefaultSpecialEffectsController$6: androidx.fragment.app.DefaultSpecialEffectsController this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
com.google.zxing.DecodeHintType: java.lang.Class valueType
androidx.core.R$id: int tag_on_receive_content_listener
androidx.appcompat.widget.AppCompatSeekBarHelper: android.content.res.ColorStateList mTickMarkTintList
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.zxing.oned.rss.DataCharacter: int value
androidx.core.widget.PopupWindowCompat: boolean sSetWindowLayoutTypeMethodAttempted
androidx.fragment.R$animator: int fragment_close_exit
androidx.core.R$id: int tag_window_insets_animation_callback
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTint
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE
androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY
androidx.appcompat.widget.ToolbarWidgetWrapper$2: int val$visibility
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: androidx.core.widget.AutoScrollHelper this$0
androidx.core.view.ContentInfoCompat$Builder: android.net.Uri mLinkUri
net.touchcapture.qr.flutterqr.QRView: java.util.HashMap params
com.google.zxing.client.android.R$styleable: int[] GradientColor
androidx.appcompat.view.menu.SubMenuWrapperICS: androidx.core.internal.view.SupportSubMenu mSubMenu
androidx.appcompat.R$string: int abc_menu_function_shortcut_label
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: char[] ALPHANUMERIC_CHARS
androidx.core.view.OneShotPreDrawListener: android.view.View mView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
androidx.appcompat.R$styleable: int[] ActionMenuView
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: android.view.ViewGroup mParent
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.ref.WeakReference mView
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GenericGF field
androidx.appcompat.R$id: int scrollIndicatorDown
kotlinx.coroutines.EventLoop: long useCount
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PUBLIC
androidx.appcompat.R$styleable: int MenuItem_actionProviderClass
com.journeyapps.barcodescanner.camera.AutoFocusManager$2: com.journeyapps.barcodescanner.camera.AutoFocusManager this$0
com.google.zxing.common.PerspectiveTransform: float a31
com.journeyapps.barcodescanner.CameraPreview$4: com.journeyapps.barcodescanner.CameraPreview this$0
androidx.appcompat.R$styleable: int MenuGroup_android_enabled
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
com.google.zxing.oned.ITFReader: int[] START_PATTERN
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView this$0
com.journeyapps.barcodescanner.camera.DisplayConfiguration: java.lang.String TAG
androidx.appcompat.widget.AppCompatSpinner: android.content.Context mPopupContext
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[] EVEN_TOTAL_SUBSET
com.google.zxing.common.GlobalHistogramBinarizer: byte[] luminances
androidx.appcompat.view.menu.ListMenuItemView: android.widget.LinearLayout mContent
com.google.zxing.oned.UPCEANExtensionSupport: int[] EXTENSION_START_PATTERN
androidx.core.graphics.TypefaceCompatBaseImpl: java.util.concurrent.ConcurrentHashMap mFontFamilies
kotlin.collections.EmptyMap: kotlin.collections.EmptyMap INSTANCE
io.flutter.embedding.engine.dart.PlatformTaskQueue: android.os.Handler handler
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
androidx.appcompat.widget.RtlSpacingHelper: int mLeft
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.google.zxing.client.android.DecodeFormatManager: java.util.Set PDF417_FORMATS
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.core.R$styleable: int FontFamily_fontProviderQuery
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Method sSetWindowLayoutTypeMethod
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator sInstance
androidx.appcompat.view.menu.ExpandedMenuView: int mAnimations
androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed
androidx.appcompat.R$styleable: int Toolbar_logoDescription
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStartTime
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType PURE_BARCODE
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix mappingBitMatrix
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$inNames
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
androidx.appcompat.R$styleable: int AppCompatTextView_drawableEndCompat
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore
androidx.fragment.app.FragmentTransaction: int mEnterAnim
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
kotlin.Unit: kotlin.Unit INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor
com.journeyapps.barcodescanner.camera.AutoFocusManager: boolean useAutoFocus
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
androidx.core.view.ViewPropertyAnimatorCompat$1: android.view.View val$view
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.hardware.Camera$AutoFocusCallback autoFocusCallback
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel$Factory $$INSTANCE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object mProvider
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean mEnabled
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mResultKeys
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context
androidx.appcompat.widget.ToolbarWidgetWrapper$2: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrcTextViewBounds
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsPop
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMajor
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
androidx.lifecycle.LifecycleRegistry: boolean mEnforceMainThread
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PROTECTED
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler
com.google.zxing.qrcode.decoder.Mode: int[] characterCountBitsForVersions
androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.widget.SearchView: java.lang.CharSequence mUserQuery
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.zxing.oned.rss.RSS14Reader: int[] INSIDE_ODD_TOTAL_SUBSET
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.plugin.common.MethodChannel$Result val$result
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask[] $VALUES
androidx.fragment.app.Fragment$AnimationInfo: int mPopExitAnim
androidx.fragment.app.Fragment$AnimationInfo: int mExitAnim
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: char[] MIXED_CHARS
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.core.graphics.TypefaceCompatApi21Impl: boolean sHasInitBeenCalled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart
androidx.appcompat.widget.ListPopupWindow: boolean mForceIgnoreOutsideTouch
net.touchcapture.qr.flutterqr.QRView$startScan$2: net.touchcapture.qr.flutterqr.QRView this$0
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: int label
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.widget.ActionBarContextView mContextView
androidx.appcompat.R$id: int action_bar_subtitle
kotlin.jvm.internal.ClassReference: java.util.Map FUNCTION_CLASSES
com.google.zxing.oned.MultiFormatOneDReader: com.google.zxing.oned.OneDReader[] readers
androidx.fragment.app.FragmentManager$7: android.view.View val$animatingView
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List decreasedValueAttributes
androidx.core.view.ContentInfoCompat$Builder: android.os.Bundle mExtras
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mSubMenuArrow
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly zero
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator iterator
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
com.google.zxing.oned.MultiFormatUPCEANReader: com.google.zxing.oned.UPCEANReader[] readers
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent
androidx.appcompat.view.SupportMenuInflater$MenuState: android.content.res.ColorStateList itemIconTintList
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
androidx.fragment.app.FragmentTransitionCompat21$4: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.CancellableContinuation cont
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.LongSparseArray mTransitions
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat EAN_13
com.google.zxing.client.android.R$styleable: int zxing_camera_preview_zxing_use_texture_view
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup
net.touchcapture.qr.flutterqr.QRView: boolean isPaused
androidx.fragment.app.FragmentManager$9: androidx.fragment.app.FragmentManager this$0
com.google.zxing.oned.rss.RSS14Reader: int[] OUTSIDE_EVEN_TOTAL_SUBSET
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider mActionProvider
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.content.Context mContext
androidx.fragment.app.SpecialEffectsController: boolean mOperationDirectionIsPop
com.google.zxing.qrcode.detector.AlignmentPatternFinder: com.google.zxing.ResultPointCallback resultPointCallback
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
io.flutter.embedding.engine.dart.DartMessenger: java.util.WeakHashMap createdTaskQueues
androidx.appcompat.widget.SearchView: android.widget.ImageView mCollapsedIcon
androidx.collection.SimpleArrayMap: int mSize
androidx.appcompat.widget.DropDownListView: int mSelectionBottomPadding
com.google.zxing.client.android.InactivityTimer: java.lang.Runnable callback
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel mNonConfig
androidx.appcompat.view.menu.MenuBuilder: boolean mGroupDividerEnabled
androidx.lifecycle.LiveData: java.lang.Object mData
androidx.lifecycle.ViewModelStore: java.util.HashMap mMap
kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING
androidx.fragment.app.Fragment: java.lang.String mWho
androidx.appcompat.widget.SearchView: android.text.TextWatcher mTextWatcher
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleAttr
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE
androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.google.zxing.aztec.detector.Detector: int nbLayers
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
androidx.appcompat.R$styleable: int ActionBar_subtitleTextStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mMutated
androidx.fragment.app.DefaultSpecialEffectsController$1: androidx.fragment.app.DefaultSpecialEffectsController this$0
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupId
androidx.appcompat.widget.ActionMenuView: boolean mFormatItems
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.RotationCallback rotationCallback
androidx.fragment.app.DefaultSpecialEffectsController$2: android.view.View val$viewToAnimate
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode TERMINATOR
com.journeyapps.barcodescanner.RotationListener$1: com.journeyapps.barcodescanner.RotationListener this$0
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: int position
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.zxing.client.android.R$id: int zxing_barcode_surface
androidx.core.provider.FontRequestWorker$TypefaceResult: int mResult
androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.google.zxing.common.reedsolomon.GenericGFPoly: int[] coefficients
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp1256
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL
com.google.zxing.ResultPoint: float y
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
androidx.core.R$id: int accessibility_custom_action_2
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
androidx.lifecycle.ClassesInfoCache$MethodReference: int mCallType
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: java.util.ArrayList mAnimationCallbacks
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsOut
androidx.appcompat.widget.Toolbar: int mPopupTheme
androidx.appcompat.widget.SuggestionsAdapter: java.util.WeakHashMap mOutsideDrawablesCache
androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha
io.flutter.embedding.engine.dart.DartMessenger: java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.view.View mDelegateView
androidx.cursoradapter.widget.CursorFilter: androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient
androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler
androidx.appcompat.R$layout: int abc_screen_simple
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mSplitBackground
androidx.appcompat.view.menu.ExpandedMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys
androidx.appcompat.R$attr: int autoCompleteTextViewStyle
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
io.flutter.embedding.android.FlutterView: androidx.core.util.Consumer windowInfoListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_IME_ENTER
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
kotlinx.coroutines.EventLoop: boolean shared
com.journeyapps.barcodescanner.DecoderThread: android.graphics.Rect cropRect
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowRootView
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunset
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: android.content.SharedPreferences$Editor val$editor
androidx.fragment.app.FragmentManager: boolean mExecutingActions
androidx.appcompat.R$color: int abc_tint_default
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
androidx.savedstate.R$id: int view_tree_saved_state_registry_owner
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableItem
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object $receiver$inlined
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable mIconDrawable
androidx.appcompat.widget.ListPopupWindow: int mDropDownHeight
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
androidx.appcompat.R$drawable: int abc_btn_borderless_material
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
androidx.arch.core.executor.DefaultTaskExecutor: java.lang.Object mLock
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.google.zxing.oned.EAN13Reader: int[] FIRST_DIGIT_ENCODINGS
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[] startEnd
com.google.zxing.oned.UPCEReader: int[] MIDDLE_END_PATTERN
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
com.google.zxing.pdf417.decoder.Codeword: int endX
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key Key
com.google.zxing.oned.rss.AbstractRSSReader: int[] dataCharacterCounters
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceArray array
kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation delegate
com.journeyapps.barcodescanner.DecoderThread$1: com.journeyapps.barcodescanner.DecoderThread this$0
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] $VALUES
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutNumericModifiers
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE
androidx.appcompat.R$layout: int support_simple_spinner_dropdown_item
androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
androidx.fragment.app.DefaultSpecialEffectsController$5: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo
com.journeyapps.barcodescanner.CaptureManager: com.google.zxing.client.android.BeepManager beepManager
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
androidx.fragment.app.DefaultSpecialEffectsController$7: android.view.View val$lastInEpicenterView
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY
kotlinx.coroutines.EventLoop: kotlinx.coroutines.internal.ArrayQueue unconfinedQueue
androidx.appcompat.app.AlertController: boolean mShowTitle
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter
androidx.appcompat.widget.AppCompatTextHelper: boolean mAsyncFontPending
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem$OnMenuItemClickListener mClickListener
com.journeyapps.barcodescanner.CaptureManager: boolean destroyed
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
androidx.appcompat.R$id: int scrollIndicatorUp
androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod
androidx.appcompat.widget.TintTypedArray: android.content.Context mContext
kotlinx.coroutines.InvokeOnCompletion: kotlin.jvm.functions.Function1 handler
androidx.customview.view.AbsSavedState: android.os.Parcelable mSuperState
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int capacity
androidx.appcompat.R$attr: int actionModePopupWindowStyle
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER
androidx.appcompat.R$styleable: int Toolbar_collapseIcon
androidx.appcompat.R$styleable: int ActionBar_homeAsUpIndicator
androidx.core.graphics.TypefaceCompatBaseImpl$1: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mActualBounds
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotX
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mFileName
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
com.google.zxing.oned.UPCEANReader: com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.contract.ActivityResultContract mContract
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.appcompat.widget.ContentFrameLayout: android.graphics.Rect mDecorPadding
androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey
com.journeyapps.barcodescanner.camera.CameraSettings: boolean barcodeSceneModeEnabled
androidx.appcompat.R$styleable: int SearchView_android_imeOptions
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold
io.flutter.view.AccessibilityBridge$Action: int value
com.google.zxing.oned.rss.AbstractRSSReader: int[] oddCounts
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
androidx.appcompat.R$styleable: int ActionBar_contentInsetEnd
com.google.zxing.client.android.R$styleable: int zxing_view_zxing_scanner_layout
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.channels.AbstractChannel this$0
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
androidx.core.text.PrecomputedTextCompat$Params: int mBreakStrategy
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_viewfinder_laser_visibility
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$Callback mCallback
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
androidx.appcompat.widget.AppCompatBackgroundHelper: int mBackgroundResId
com.google.zxing.client.android.InactivityTimer: android.content.BroadcastReceiver powerStatusReceiver
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: androidx.appcompat.widget.ForwardingListener this$0
androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleRes
androidx.core.view.ContentInfoCompat$Builder: int mSource
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.ArgbEvaluator mArgbEvaluator
androidx.appcompat.widget.ActionMenuPresenter: int mOpenSubMenuId
androidx.appcompat.widget.SearchView: int mMaxWidth
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager delegate
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode SINGLE
androidx.appcompat.widget.SearchView: android.view.View mSubmitArea
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
com.journeyapps.barcodescanner.DecoderThread: com.journeyapps.barcodescanner.camera.PreviewCallback previewCallback
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest
com.google.zxing.oned.rss.expanded.ExpandedPair: boolean mayBeLast
androidx.fragment.app.FragmentTransaction: int mPopEnterAnim
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List labelAttributes
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuAdapter mAdapter
androidx.appcompat.app.AlertController: java.lang.CharSequence mTitle
androidx.core.R$styleable: int GradientColor_android_startColor
androidx.fragment.app.DefaultSpecialEffectsController$2: androidx.fragment.app.SpecialEffectsController$Operation val$operation
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemVisible
androidx.appcompat.app.AlertController$5: android.view.View val$top
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y
androidx.cursoradapter.widget.ResourceCursorAdapter: int mLayout
com.google.zxing.client.android.InactivityTimer: android.content.Context context
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode NONE
androidx.appcompat.widget.TooltipPopup: android.content.Context mContext
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.widget.MenuPopupWindow mPopup
com.google.zxing.pdf417.decoder.ec.ModulusGF: int modulus
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMinor
androidx.collection.SparseArrayCompat: boolean mGarbage
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mTmpInfo
io.flutter.Log: int logLevel
androidx.appcompat.R$styleable: int[] ActionBarLayout
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder mAdapterMenu
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mPositiveButtonListener
com.google.zxing.oned.UPCEANReader: int[] MIDDLE_PATTERN
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mEnterTransitionCallback
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType OTHER
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
androidx.core.view.ViewCompat$Api21Impl$1: androidx.core.view.WindowInsetsCompat mLastInsets
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText mWrapped
androidx.appcompat.app.AlertController: android.widget.TextView mMessageView
androidx.core.graphics.Insets: int bottom
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.widget.ActionBarContextView this$0
com.journeyapps.barcodescanner.CaptureManager: android.app.Activity activity
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence[] mItems
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon
androidx.appcompat.R$layout: int abc_list_menu_item_checkbox
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView
androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR
androidx.collection.MapCollections$MapIterator: int mIndex
androidx.appcompat.R$drawable: int abc_cab_background_top_material
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReturnTransition
androidx.core.view.WindowInsetsCompat$Impl20: android.view.WindowInsets mPlatformInsets
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
com.google.zxing.ReaderException: boolean isStackTrace
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: int mProxyEndCount
com.google.zxing.common.PerspectiveTransform: float a32
androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth
androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService
androidx.core.provider.FontRequest: java.lang.String mProviderAuthority
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mBackground
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
androidx.appcompat.R$styleable: int CompoundButton_android_button
androidx.core.R$styleable: int[] GradientColorItem
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
androidx.collection.ArraySet: java.lang.Object[] OBJECT
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
androidx.appcompat.view.menu.MenuAdapter: int mItemLayoutRes
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$enteringViews
androidx.appcompat.R$styleable: int Toolbar_titleMargin
com.google.zxing.oned.rss.RSS14Reader: int[] OUTSIDE_ODD_WIDEST
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.JobSupport this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $VALUES
androidx.appcompat.app.AlertController: int mButtonPanelSideLayout
com.google.zxing.datamatrix.decoder.Version$ECBlocks: int ecCodewords
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mBaseInnerInsets
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
androidx.appcompat.R$styleable: int Toolbar_titleMargins
com.journeyapps.barcodescanner.camera.CameraThread: int openCount
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter
androidx.collection.MapCollections$ArrayIterator: int mIndex
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$0
androidx.appcompat.view.menu.CascadingMenuPopup$2: androidx.appcompat.view.menu.CascadingMenuPopup this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
androidx.core.widget.AutoScrollHelper: boolean mAnimating
io.flutter.plugin.common.FlutterException: java.lang.Object details
com.google.zxing.pdf417.detector.PDF417DetectorResult: com.google.zxing.common.BitMatrix bits
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTintMode
androidx.appcompat.widget.ForwardingListener: android.view.View mSrc
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
androidx.appcompat.widget.ListPopupWindow$3: androidx.appcompat.widget.ListPopupWindow this$0
kotlin.jvm.internal.Lambda: int arity
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.widget.CompoundButton mView
com.google.zxing.common.CharacterSetECI: java.lang.String[] otherEncodingNames
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int startX
com.google.zxing.pdf417.PDF417ResultMetadata: java.lang.String sender
androidx.fragment.R$styleable: int FragmentContainerView_android_tag
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.widget.ScrollingTabContainerView this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.FastServiceLoader INSTANCE
androidx.fragment.app.FragmentAnim$2$1: androidx.fragment.app.FragmentAnim$2 this$0
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode
androidx.appcompat.R$id: int search_close_btn
androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
androidx.fragment.app.FragmentManager: java.util.Map mExitAnimationCancellationSignals
androidx.fragment.R$animator: int fragment_open_exit
com.google.zxing.pdf417.PDF417ResultMetadata: int segmentCount
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
androidx.appcompat.R$id: int action_mode_bar_stub
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.appcompat.widget.DropDownListView: boolean mHijackFocus
androidx.core.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShowTitle
androidx.appcompat.R$styleable: int AlertDialog_listItemLayout
com.google.zxing.common.PerspectiveTransform: float a13
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mCommitRunnables
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.google.zxing.oned.UPCEANReader: int[][] L_AND_G_PATTERNS
androidx.appcompat.R$attr: int buttonStyle
com.google.zxing.oned.Code39Reader: java.lang.StringBuilder decodeRowResult
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: io.flutter.embedding.engine.systemchannels.NavigationChannel this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.Job job
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint bottomLeft
androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
androidx.tracing.Trace: java.lang.reflect.Method sIsTagEnabledMethod
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView
androidx.fragment.app.BackStackState: java.util.ArrayList mFragmentWhos
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
io.flutter.view.AccessibilityBridge: int SCROLLABLE_ACTIONS
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks
com.google.zxing.ResultPoint: float x
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: com.journeyapps.barcodescanner.camera.PreviewCallback callback
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTintMode
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback
androidx.core.graphics.PathParser$ExtractFloatResult: boolean mEndWithNegOrDot
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress
androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
androidx.appcompat.R$styleable: int SearchView_queryBackground
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$AlertParams this$0
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraThread cameraThread
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.appcompat.app.TwilightManager$TwilightState: boolean isNight
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater
androidx.core.provider.FontsContractCompat$FontInfo: int mWeight
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int width
androidx.appcompat.R$color: int abc_decor_view_status_guard_light
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: androidx.cursoradapter.widget.CursorAdapter this$0
androidx.appcompat.R$layout: int abc_list_menu_item_icon
androidx.appcompat.app.AlertController$4: android.view.View val$bottom
androidx.core.R$styleable: int FontFamily_fontProviderAuthority
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables
com.google.zxing.qrcode.detector.AlignmentPatternFinder: float moduleSize
androidx.appcompat.widget.ThemeUtils: int[] ACTIVATED_STATE_SET
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.content.Context mContext
androidx.fragment.R$animator: int fragment_fade_enter
com.journeyapps.barcodescanner.CaptureManager: java.lang.String TAG
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$RecycleListView val$listView
androidx.appcompat.widget.LinearLayoutCompat: float mWeightSum
androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved
androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit
androidx.collection.SparseArrayCompat: int[] mKeys
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMinor
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.reflect.Constructor $constructor$inlined
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: float[] mTmpFloats
androidx.fragment.app.FragmentTransaction: int mTransition
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.cursoradapter.widget.CursorAdapter: android.database.DataSetObserver mDataSetObserver
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.reflect.Method mSetExclusiveCheckableMethod
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler: int corePoolSize
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition
androidx.fragment.R$styleable: int[] ColorStateListItem
androidx.appcompat.app.AlertController$AlertParams: int mIconAttrId
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX
androidx.appcompat.R$styleable: int MenuItem_android_alphabeticShortcut
kotlin.ranges.IntRange: kotlin.ranges.IntRange EMPTY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
androidx.appcompat.widget.ScrollingTabContainerView$1: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.journeyapps.barcodescanner.CameraPreview: android.view.TextureView textureView
androidx.appcompat.R$id: int action_bar_activity_content
androidx.appcompat.view.ActionMode: java.lang.Object mTag
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMajor
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job$Key $$INSTANCE
androidx.appcompat.widget.DropDownListView: androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint
androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim
androidx.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
io.flutter.Log: int INFO
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] LOWER_TABLE
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
androidx.core.provider.RequestExecutor$ReplyRunnable$1: androidx.core.provider.RequestExecutor$ReplyRunnable this$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU
androidx.appcompat.view.SupportMenuInflater: android.content.Context mContext
androidx.appcompat.widget.ActionMenuView: int mFormatItemsWidth
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap mSampleTile
com.google.zxing.client.android.DecodeFormatManager: java.util.Set ONE_D_FORMATS
androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll
androidx.lifecycle.LiveData: java.lang.Object mPendingData
androidx.appcompat.R$styleable: int View_theme
androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int corePoolSize
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShouldCloseImmediately
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnSearchClickListener
net.touchcapture.qr.flutterqr.QRView$startScan$2: java.util.List $allowedBarcodeTypes
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: androidx.collection.SimpleArrayMap mMenus
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCacheClazzFetched
androidx.appcompat.widget.ActionBarContainer: android.view.View mTabContainer
androidx.fragment.app.Fragment: int mFragmentId
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
androidx.appcompat.view.menu.BaseMenuWrapper: androidx.collection.SimpleArrayMap mSubMenus
com.google.zxing.client.android.R$color: int zxing_possible_result_points
kotlinx.coroutines.scheduling.LimitingDispatcher: int taskMode
com.journeyapps.barcodescanner.SourceData: int imageFormat
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
kotlin.jvm.internal.PackageReference: java.lang.Class jClass
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] EMPTY_STRING_ARRAY
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.jvm.functions.Function1 safeCast
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: java.lang.String newString
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
com.google.zxing.common.detector.WhiteRectangleDetector: int downInit
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint mPaint
androidx.appcompat.widget.TooltipCompatHandler: int mHoverSlop
androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentFactory mFragmentFactory
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMark
androidx.appcompat.app.AlertController$AlertParams: boolean mCancelable
androidx.window.embedding.SplitRule: int layoutDirection
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[] GSUM
androidx.appcompat.view.menu.MenuBuilder: boolean mIsVisibleItemsStale
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.coroutines.CoroutineContext $context
kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context
androidx.appcompat.view.menu.MenuWrapperICS: androidx.core.internal.view.SupportMenu mWrappedObject
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetClipToWindowEnabledMethod
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowReturnTransitionOverlap
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat RSS_14
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord lastInTransaction
kotlinx.coroutines.internal.AtomicKt: java.lang.Object RETRY_ATOMIC
androidx.appcompat.view.menu.StandardMenuPopup: int mContentWidth
androidx.core.R$id: int accessibility_custom_action_13
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
com.journeyapps.barcodescanner.ViewfinderView: java.lang.String TAG
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mBackground
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily
com.journeyapps.barcodescanner.camera.CameraManager: java.lang.String TAG
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
androidx.window.R$attr: int finishPrimaryWithSecondary
com.google.zxing.oned.CodaBarReader: char[] STARTEND_ENCODING
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: android.graphics.Rect bounds
io.flutter.embedding.android.DrawableSplashScreen: android.graphics.drawable.Drawable drawable
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: android.os.Bundle mBundle
androidx.appcompat.R$styleable: int SearchView_defaultQueryHint
com.google.zxing.common.DecoderResult: java.lang.String text
com.journeyapps.barcodescanner.camera.CameraManager: java.lang.String defaultParameters
com.google.zxing.datamatrix.decoder.Version$ECBlocks: com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks
com.google.zxing.pdf417.decoder.Codeword: int startX
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.CameraPreview$StateListener fireState
androidx.appcompat.widget.ActionBarContextView: android.view.View mClose
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.ColorStateList value
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat ITF
com.google.zxing.client.android.AmbientLightManager: android.hardware.Sensor lightSensor
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float[] VALUES
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode[] $VALUES
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost
androidx.window.R$attr: int secondaryActivityAction
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
com.journeyapps.barcodescanner.camera.CameraThread: java.lang.Object LOCK
androidx.fragment.app.FragmentActivity: boolean mStopped
kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
androidx.appcompat.R$styleable: int[] RecycleListView
androidx.lifecycle.Lifecycling$1: androidx.lifecycle.LifecycleEventObserver val$observer
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.core.os.CancellationSignal: boolean mCancelInProgress
com.google.zxing.oned.Code93Reader: int ASTERISK_ENCODING
androidx.appcompat.widget.SuggestionsAdapter: int mIconName2Col
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mTotalDuration
androidx.core.R$id: int accessibility_custom_action_17
androidx.core.widget.NestedScrollView: int mLastMotionY
io.flutter.view.VsyncWaiter$DisplayListener: android.hardware.display.DisplayManager displayManager
androidx.fragment.app.FragmentStateManager: int mFragmentManagerState
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.Configuration configuration
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0
com.google.zxing.qrcode.decoder.Version$ECB: int count
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mTransitionEnded
androidx.core.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_101
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate mDelegate
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object $expect$inlined
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler cancelHandler
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.Fragment val$inFragment
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mPendingMenus
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.content.Context mContext
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMinTextSize
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCheckable
androidx.appcompat.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFirstFrameRendered
androidx.fragment.app.FragmentTransaction: int mExitAnim
androidx.appcompat.view.menu.CascadingMenuPopup: int mDropDownGravity
androidx.fragment.app.FragmentTransitionCompat21$4: java.lang.Runnable val$transitionCompleteRunnable
androidx.activity.contextaware.ContextAwareHelper: android.content.Context mContext
androidx.core.app.ActivityRecreator$3: java.lang.Object val$token
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDisplayOpts
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
androidx.appcompat.app.AlertController: int mListLayout
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.os.Handler handler
com.google.zxing.oned.Code93Reader: char[] ALPHABET
androidx.fragment.app.FragmentAnim$3: androidx.core.os.CancellationSignal val$signal
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int transitions
androidx.fragment.app.SpecialEffectsController$Operation: java.util.List mCompletionListeners
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTint
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mMessage
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat AZTEC
kotlinx.coroutines.CoroutineId: long id
androidx.appcompat.widget.DropDownListView: int mSelectionRightPadding
com.google.zxing.qrcode.decoder.Version: int totalCodewords
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mGroupDivider
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input
androidx.fragment.app.FragmentManager: java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
androidx.appcompat.view.menu.MenuAdapter: int mExpandedIndex
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] C40_BASIC_SET_CHARS
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mHostFragmentFactory
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory
androidx.core.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE
androidx.fragment.app.FragmentState: java.lang.String mTag
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: long idleWorkerKeepAliveNs
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType TRY_HARDER
kotlinx.coroutines.YieldContext: kotlinx.coroutines.YieldContext$Key Key
androidx.lifecycle.LiveData: boolean mChangingActiveState
io.flutter.plugin.platform.VirtualDisplayController$1$1: io.flutter.plugin.platform.VirtualDisplayController$1 this$1
com.journeyapps.barcodescanner.ViewfinderView: int[] SCANNER_ALPHA
androidx.window.core.Bounds: int right
kotlin.jvm.internal.Reflection: kotlin.jvm.internal.ReflectionFactory factory
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle
androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
com.journeyapps.barcodescanner.camera.CameraManager: android.hardware.Camera camera
androidx.appcompat.R$attr: int dropDownListViewStyle
androidx.fragment.app.FragmentManager: boolean USE_STATE_MANAGER
androidx.core.content.res.ResourcesCompat$FontCallback$1: androidx.core.content.res.ResourcesCompat$FontCallback this$0
androidx.window.embedding.ActivityStack: java.util.List activities
androidx.core.provider.FontRequestWorker$1: android.content.Context val$context
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat CONSUMED
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.collection.SimpleArrayMap mListeners
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size currentSurfaceSize
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
androidx.fragment.app.FragmentTransition$1: androidx.core.os.CancellationSignal val$signal
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Constructor sFontFamilyCtor
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.appcompat.app.AlertController: android.content.Context mContext
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText
androidx.appcompat.view.menu.ListMenuItemView: android.widget.CheckBox mCheckBox
kotlin.ranges.IntProgression: int first
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN
androidx.appcompat.R$styleable: int MenuItem_android_enabled
androidx.appcompat.widget.RtlSpacingHelper: int mRight
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleAttr
com.google.zxing.qrcode.detector.Detector: com.google.zxing.ResultPointCallback resultPointCallback
com.google.zxing.oned.rss.RSS14Reader: java.util.List possibleRightPairs
androidx.fragment.app.FragmentLayoutInflaterFactory$1: androidx.fragment.app.FragmentStateManager val$fragmentStateManager
androidx.fragment.app.DefaultSpecialEffectsController$10: int[] $SwitchMap$androidx$fragment$app$SpecialEffectsController$Operation$State
androidx.appcompat.R$styleable: int[] LinearLayoutCompat_Layout
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.core.view.ViewCompat: java.lang.reflect.Field sMinHeightField
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.view.View mHostView
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription
androidx.core.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.R$id: int textSpacerNoButtons
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED
io.flutter.embedding.android.KeyChannelResponder: int combiningCharacter
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.appcompat.view.SupportMenuInflater this$0
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat UPC_E
androidx.appcompat.R$styleable: int[] Spinner
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object mSharedElementTransition
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
androidx.appcompat.R$drawable: int abc_switch_thumb_material
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mPositiveButtonText
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader
androidx.fragment.app.FragmentTransaction: boolean mAllowAddToBackStack
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List hintAttributes
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object value
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp1251
androidx.appcompat.widget.Toolbar: boolean mEatingTouch
androidx.appcompat.widget.AppCompatTextHelper: int mStyle
androidx.appcompat.widget.SearchView: boolean mExpandedInActionView
androidx.window.core.Bounds: int bottom
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType PDF417_EXTRA_METADATA
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
com.google.zxing.client.android.R$id: int zxing_decode
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData: boolean mirrored
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen splashScreen
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
io.flutter.view.VsyncWaiter: long refreshPeriodNanos
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext coroutineContext
com.google.zxing.client.android.R$id: int zxing_prewiew_size_ready
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sContentInsets
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener
io.flutter.plugin.editing.InputConnectionAdaptor: int batchEditNestDepth
io.flutter.plugin.platform.VirtualDisplayController$1: io.flutter.plugin.platform.VirtualDisplayController this$0
com.journeyapps.barcodescanner.camera.FitXYStrategy: java.lang.String TAG
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
androidx.core.provider.FontsContractCompat$FontFamilyResult: int mStatusCode
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.appcompat.R$styleable: int ViewStubCompat_android_inflatedId
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
androidx.core.provider.FontsContractCompat$FontInfo: boolean mItalic
kotlinx.coroutines.DispatchedTask: int resumeMode
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] $VALUES
com.google.zxing.oned.rss.RSS14Reader: java.util.List possibleLeftPairs
androidx.appcompat.app.TwilightCalculator: long sunset
com.journeyapps.barcodescanner.DecoderThread$2: com.journeyapps.barcodescanner.DecoderThread this$0
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.coroutines.Continuation $completion
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: androidx.appcompat.widget.ScrollingTabContainerView this$0
androidx.appcompat.widget.SuggestionsAdapter: int mQueryRefinement
androidx.fragment.app.FragmentManager: boolean mStopped
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService executorService
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
androidx.core.R$id: int tag_unhandled_key_listeners
net.touchcapture.qr.flutterqr.Shared: net.touchcapture.qr.flutterqr.Shared INSTANCE
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
androidx.core.view.inputmethod.InputConnectionCompat$2: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: int mRecreatingHashCode
com.journeyapps.barcodescanner.CaptureManager: android.os.Handler handler
androidx.appcompat.R$drawable: int abc_tab_indicator_material
androidx.appcompat.widget.AppCompatBackgroundHelper: android.view.View mView
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.reflect.Constructor $constructor$inlined
androidx.core.provider.RequestExecutor$ReplyRunnable: android.os.Handler mHandler
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport$Finishing state
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mCachedTint
com.google.zxing.client.android.R$id: int zxing_preview_failed
com.google.zxing.oned.Code39Reader: boolean usingCheckDigit
androidx.appcompat.R$styleable: int[] PopupWindow
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat QR_CODE
io.flutter.embedding.android.DrawableSplashScreen$1: java.lang.Runnable val$onTransitionComplete
androidx.appcompat.widget.Toolbar: int mButtonGravity
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.ForwardingListener mForwardingListener
androidx.appcompat.widget.ActionBarContainer: android.view.View mContextView
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mDrawable
androidx.activity.result.ActivityResult: android.content.Intent mData
kotlinx.coroutines.internal.ConcurrentKt: java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL
androidx.appcompat.R$styleable: int[] ActionBar
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener
com.google.zxing.client.android.R$id: int zxing_possible_result_points
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingTopNoTitle
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupVisible
androidx.fragment.R$styleable: int[] FontFamilyFont
androidx.fragment.app.FragmentTransition$6: java.util.ArrayList val$sharedElementsIn
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.fragment.app.FragmentAnim$2: android.view.ViewGroup val$container
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
androidx.fragment.app.FragmentTransitionCompat21$1: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
androidx.appcompat.R$layout: int abc_expanded_menu_layout
androidx.collection.LruCache: int evictionCount
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
androidx.core.R$styleable: int ColorStateListItem_android_alpha
androidx.core.widget.TextViewCompat$OreoCallback: android.view.ActionMode$Callback mCallback
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor
androidx.appcompat.R$string: int abc_menu_meta_shortcut_label
androidx.appcompat.widget.ActionMenuView: int mPopupTheme
kotlinx.coroutines.channels.AbstractChannel$Itr: kotlinx.coroutines.channels.AbstractChannel channel
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_5
androidx.appcompat.app.AlertController$5: android.view.View val$bottom
androidx.appcompat.R$dimen: int tooltip_y_offset_non_touch
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly one
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
androidx.appcompat.app.AlertController: int mViewSpacingTop
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveFqNames
androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation
androidx.loader.app.LoaderManagerImpl: boolean DEBUG
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: com.journeyapps.barcodescanner.Size resolution
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.MenuBuilder val$menu
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: com.journeyapps.barcodescanner.DecoratedBarcodeView this$0
androidx.fragment.app.DefaultSpecialEffectsController$2: boolean val$isHideOperation
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: boolean val$response
androidx.appcompat.R$drawable: int abc_star_black_48dp
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
androidx.appcompat.app.AlertController: int mViewSpacingBottom
com.google.zxing.common.detector.WhiteRectangleDetector: int rightInit
com.journeyapps.barcodescanner.DecoderThread: java.lang.Object LOCK
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementReturnTransition
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode mIconTintMode
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
androidx.appcompat.app.AlertController$AlertParams: boolean mViewSpacingSpecified
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
androidx.savedstate.SavedStateRegistry: android.os.Bundle mRestoredState
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector
androidx.core.view.NestedScrollingChildHelper: android.view.View mView
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver mTreeObserver
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.TwilightManager mTwilightManager
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent
androidx.fragment.app.FragmentLayoutInflaterFactory$1: androidx.fragment.app.FragmentLayoutInflaterFactory this$0
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes
com.google.zxing.datamatrix.decoder.DataBlock: int numDataCodewords
io.flutter.plugin.common.MethodCall: java.lang.String method
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType SUGGESTED_PRICE
androidx.appcompat.graphics.drawable.StateListDrawable: boolean mMutated
androidx.fragment.app.FragmentTransition$6: java.lang.Object val$enterTransition
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.camera.DisplayConfiguration displayConfiguration
androidx.fragment.app.Fragment: java.lang.String mTargetWho
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
androidx.appcompat.widget.LinearLayoutCompat: boolean mBaselineAligned
androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews
androidx.core.provider.FontRequestWorker: androidx.collection.SimpleArrayMap PENDING_REPLIES
androidx.appcompat.view.menu.MenuPopupHelper: int mDropDownGravity
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table[] $VALUES
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.core.R$styleable: int FontFamilyFont_android_font
kotlin.text.DelimitedRangesSequence: int limit
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: long mDuration
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.view.TextureRegistry$SurfaceTextureEntry textureEntry
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterUiDisplayed
com.google.zxing.Result: java.util.Map resultMetadata
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter mColorFilter
androidx.core.os.CancellationSignal: androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener
com.journeyapps.barcodescanner.CaptureManager: boolean askedPermission
androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.google.zxing.common.DecoderResult: int structuredAppendParity
androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType
androidx.appcompat.widget.ThemeUtils: int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
com.journeyapps.barcodescanner.camera.CameraSettings: boolean scanInverted
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility INTERNAL
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mMutated
androidx.appcompat.R$styleable: int ViewStubCompat_android_id
io.flutter.plugin.common.FlutterException: java.lang.String code
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU
kotlinx.coroutines.internal.ThreadState: int i
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor
androidx.appcompat.R$styleable: int[] ActionMenuItemView
androidx.fragment.app.FragmentTransitionCompat21$5: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.appcompat.widget.SearchView: android.widget.TextView$OnEditorActionListener mOnEditorActionListener
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri mLinkUri
androidx.collection.ArraySet: int[] INT
androidx.appcompat.widget.TintContextWrapper: java.lang.Object CACHE_LOCK
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.appcompat.widget.ThemeUtils: int[] FOCUSED_STATE_SET
androidx.core.view.LayoutInflaterCompat: boolean sCheckedField
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mShownAnchorView
androidx.appcompat.R$styleable: int[] ButtonBarLayout
com.google.zxing.common.CharacterSetECI: int[] values
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object element
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.datamatrix.decoder.Version version
androidx.fragment.app.FragmentContainerView: android.view.View$OnApplyWindowInsetsListener mApplyWindowInsetsListener
com.google.zxing.common.PerspectiveTransform: float a22
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: long id
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugin.common.MethodChannel$Result val$result
androidx.appcompat.R$styleable: int ViewStubCompat_android_layout
androidx.fragment.app.FragmentState: boolean mHidden
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu
androidx.appcompat.R$styleable: int TextAppearance_android_textStyle
kotlinx.coroutines.CommonPool: int requestedParallelism
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mContentDescription
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mOverflowOnly
androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters
androidx.appcompat.R$id: int search_mag_icon
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemNumericModifiers
com.google.zxing.oned.Code39Reader: int[] CHARACTER_ENCODINGS
androidx.appcompat.R$styleable: int ActionBar_backgroundSplit
androidx.appcompat.widget.ActionMenuPresenter: boolean mExpandedActionViewsExclusive
androidx.appcompat.widget.ListPopupWindow: int mDropDownWidth
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mContentChangeType
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN
androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentResultListener val$listener
androidx.fragment.app.Fragment: boolean mHiddenChanged
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.zxing.oned.rss.AbstractRSSReader: float[] evenRoundingErrors
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotY
androidx.appcompat.R$id: int content
androidx.appcompat.R$styleable: int MenuItem_android_icon
androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted
androidx.lifecycle.MethodCallsLogger: java.util.Map mCalledMethods
kotlin.text.DelimitedRangesSequence$iterator$1: int nextSearchIndex
com.google.zxing.aztec.detector.Detector$Point: int x
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table DIGIT
kotlinx.coroutines.channels.Closed: java.lang.Throwable closeCause
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
com.google.zxing.client.android.InactivityTimer: boolean registered
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect surfaceRect
com.journeyapps.barcodescanner.CameraPreview: android.view.SurfaceHolder$Callback surfaceCallback
androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic mTextDir
androidx.appcompat.widget.ActionBarOverlayLayout$3: androidx.appcompat.widget.ActionBarOverlayLayout this$0
androidx.core.R$id: int accessibility_custom_action_16
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
com.google.zxing.common.reedsolomon.GenericGF: int primitive
androidx.window.embedding.SplitController: boolean sDebug
androidx.fragment.app.FragmentAnim$2: androidx.fragment.app.Fragment val$fragment
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
androidx.appcompat.app.LayoutIncludeDetector: java.util.Deque mXmlParserStack
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mDoBeforeTextChanged
androidx.appcompat.widget.TintResources: java.lang.ref.WeakReference mContextRef
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
com.journeyapps.barcodescanner.SourceData: int scalingFactor
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object VARIABLE_LENGTH
kotlin.jvm.internal.CallableReference: boolean isTopLevel
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared
io.flutter.plugin.editing.TextEditingDelta: int newComposingEnd
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.graphics.Rect mVisibleRect
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params mParams
com.journeyapps.barcodescanner.camera.FitCenterStrategy: java.lang.String TAG
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.DecoratedBarcodeView$TorchListener torchListener
com.google.zxing.pdf417.decoder.ec.ModulusGF: int[] expTable
kotlin.ranges.IntRange: kotlin.ranges.IntRange$Companion Companion
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.ListMenuPresenter mPresenter
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
androidx.fragment.app.SpecialEffectsController$Operation: java.util.HashSet mSpecialEffectsSignals
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: int unrepliedCount
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset
androidx.core.view.KeyEventDispatcher: boolean sActionBarFieldsFetched
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd
io.flutter.embedding.android.KeyboardManager: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.journeyapps.barcodescanner.ViewfinderView: int resultPointColor
androidx.core.provider.FontRequestWorker$2: androidx.core.provider.CallbackWithHandler val$callback
androidx.appcompat.R$styleable: int[] ViewBackgroundHelper
androidx.appcompat.R$drawable: int abc_btn_check_material
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mCustomView
androidx.fragment.app.Fragment: int mTargetRequestCode
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsetsRect
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.google.zxing.common.GlobalHistogramBinarizer: byte[] EMPTY
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
androidx.window.R$styleable: int[] ActivityFilter
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_1
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored
androidx.core.R$id: int accessibility_custom_action_15
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
net.touchcapture.qr.flutterqr.QRView: net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView barcodeView
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mIcon
com.journeyapps.barcodescanner.CameraPreview: java.lang.String TAG
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemAdded
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mTmpInfo
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE
kotlinx.coroutines.Empty: boolean isActive
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean singleConsumer
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: boolean mIsStarted
androidx.core.view.ViewPropertyAnimatorCompat$2: android.view.View val$view
androidx.core.graphics.TypefaceCompat: androidx.collection.LruCache sTypefaceCache
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion
androidx.appcompat.R$styleable: int[] ActionMode
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.journeyapps.barcodescanner.Decoder: com.google.zxing.Reader reader
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.hardware.Camera camera
androidx.appcompat.view.menu.MenuAdapter: boolean mForceShowIcon
androidx.appcompat.app.ResourcesFlusher: java.lang.Class sThemedResourceCacheClazz
androidx.appcompat.widget.ActionMenuPresenter: boolean mPendingOverflowIconSet
androidx.appcompat.app.AppCompatDialog$1: androidx.appcompat.app.AppCompatDialog this$0
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.widget.TextView mTextView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext context
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1
androidx.activity.ComponentActivity$5: androidx.activity.ComponentActivity this$0
androidx.appcompat.R$bool: int abc_action_bar_embed_tabs
androidx.appcompat.view.menu.ListMenuPresenter: int mThemeRes
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.content.SharedPreferences preferences
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
androidx.core.provider.CallbackWithHandler$2: int val$reason
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: android.view.MenuItem$OnMenuItemClickListener mObject
androidx.appcompat.content.res.AppCompatResources: java.lang.Object sColorStateCacheLock
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
androidx.core.R$id: int tag_on_receive_content_mime_types
androidx.window.core.Version: int patch
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_orientation
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
io.flutter.embedding.android.DrawableSplashScreen: long crossfadeDurationInMillis
androidx.appcompat.widget.Toolbar: void ensureMenu()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void finalize()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)
kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)
com.journeyapps.barcodescanner.SourceData: android.graphics.Bitmap getBitmap(android.graphics.Rect,int)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void access$100(com.journeyapps.barcodescanner.camera.AutoFocusManager)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
androidx.fragment.app.FragmentStateManager: void create()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect getPreviewFramingRect()
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.MenuItem getMenuItemWrapper(android.view.MenuItem)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferAlwaysEmpty()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: CameraManager$CameraPreviewCallback(com.journeyapps.barcodescanner.camera.CameraManager)
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferEmpty()
androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)
androidx.appcompat.widget.ForwardingListener: void clearCallbacks()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: boolean isClipPath()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void run()
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeTextType()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setEnabled(boolean)
com.google.zxing.LuminanceSource: com.google.zxing.LuminanceSource invert()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)
androidx.fragment.app.FragmentStateManager$1: FragmentStateManager$1(androidx.fragment.app.FragmentStateManager,android.view.View)
androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean areAllItemsEnabled()
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler access$600(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.zxing.pdf417.detector.Detector: com.google.zxing.pdf417.detector.PDF417DetectorResult detect(com.google.zxing.BinaryBitmap,java.util.Map,boolean)
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.DataCharacter getRightChar()
com.journeyapps.barcodescanner.DecoderThread$1: boolean handleMessage(android.os.Message)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void ensureImeVisible()
androidx.appcompat.view.menu.MenuBuilder: void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl)
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder: void addWeightCode(java.lang.StringBuilder,int)
kotlinx.coroutines.EventLoopImplBase: void enqueue(java.lang.Runnable)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
androidx.arch.core.executor.ArchTaskExecutor$2: ArchTaskExecutor$2()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)
kotlin.collections.EmptyList: int indexOf(java.lang.Object)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,int,java.nio.ByteBuffer)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(android.view.View)
androidx.lifecycle.LiveData$1: void run()
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)
io.flutter.plugin.editing.TextInputPlugin$1: void show()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn)
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.core.graphics.PathParser$ExtractFloatResult: PathParser$ExtractFloatResult()
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingDeltaJSON(java.util.ArrayList)
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(int,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: boolean isLeft()
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.ChildHandleNode: void invoke(java.lang.Throwable)
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
androidx.core.text.PrecomputedTextCompat: char charAt(int)
kotlin.collections.EmptyMap: java.util.Set keySet()
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setFocusArea(android.hardware.Camera$Parameters)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.fragment.app.SpecialEffectsController$Operation getOperation()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.fragment.app.FragmentManagerViewModel: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.ActionMenuItem: int getAlphabeticModifiers()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.appcompat.view.menu.MenuItemImpl: void actionFormatChanged()
androidx.appcompat.app.AppCompatDialog: void onStop()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.random.Random: int nextInt()
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: CascadingMenuPopup$3$1(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.view.menu.MenuDialogHelper: MenuDialogHelper(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setCustomView(android.view.View)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationEnd(android.view.View)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)
androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)
kotlinx.coroutines.AbstractCoroutine: void resumeWith(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean onStateChanged(int[])
androidx.collection.MapCollections$MapIterator: void remove()
androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.appcompat.view.menu.MenuItemImpl: void setIsActionButton(boolean)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
io.flutter.embedding.android.FlutterView$2: void onFlutterUiNoLongerDisplayed()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)
androidx.lifecycle.ReportFragment: void onStart()
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: ActionMenuPresenter$PopupPresenterCallback(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.widget.RtlSpacingHelper: RtlSpacingHelper()
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelSize(int)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
com.google.zxing.common.reedsolomon.GenericGF: java.lang.String toString()
kotlin.jvm.internal.ClassReference: java.lang.String toString()
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int)
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
com.google.zxing.common.GlobalHistogramBinarizer: int estimateBlackPoint(int[])
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetChanged()
com.journeyapps.barcodescanner.DecoderResultPointCallback: void setDecoder(com.journeyapps.barcodescanner.Decoder)
androidx.fragment.app.FragmentFactory: boolean isFragmentClass(java.lang.ClassLoader,java.lang.String)
kotlinx.coroutines.InvokeOnCancelling: void invoke(java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.fragment.app.SpecialEffectsController: void forcePostponedExecutePendingOperations()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
kotlin.ranges.RangesKt___RangesKt: int coerceAtMost(int,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)
androidx.appcompat.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentManagerViewModel: java.lang.String toString()
androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)
androidx.activity.ComponentActivity$2: ComponentActivity$2(androidx.activity.ComponentActivity)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.appcompat.widget.AppCompatTextHelper: void setTextSizeInternal(int,float)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean onLevelChange(int)
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean,boolean)
com.journeyapps.barcodescanner.camera.CameraInstance: void startPreview()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatTextClassifierHelper: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
androidx.fragment.app.DefaultSpecialEffectsController$8: DefaultSpecialEffectsController$8(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList)
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean hasAddedItem()
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog create()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: CurrentParsingState()
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.fragment.app.DefaultSpecialEffectsController$5: DefaultSpecialEffectsController$5(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo)
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
androidx.appcompat.view.menu.ActionMenuItem: boolean expandActionView()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.appcompat.view.menu.MenuPopupHelper: boolean isShowing()
androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)
kotlin.ranges.IntRange: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
androidx.core.content.res.ResourcesCompat$FontCallback$1: ResourcesCompat$FontCallback$1(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface)
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
io.flutter.plugin.platform.PlatformPlugin: void destroy()
com.google.zxing.oned.rss.AbstractRSSReader: int parseFinderValue(int[],int[][])
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
com.google.zxing.common.BitMatrix: com.google.zxing.common.BitMatrix clone()
androidx.fragment.app.FragmentManager$3: FragmentManager$3(androidx.fragment.app.FragmentManager)
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute(io.flutter.view.AccessibilityBridge$1)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.fragment.app.FragmentTransitionImpl$2: FragmentTransitionImpl$2(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int,int)
androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getReceiveException()
androidx.appcompat.view.ActionBarPolicy: int getMaxActionButtons()
androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)
androidx.appcompat.widget.AppCompatDrawableManager: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.fragment.app.FragmentStateManager: void start()
com.google.zxing.qrcode.detector.Detector: float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith(java.lang.String,java.lang.String,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShowAsActionFlags(int)
com.google.zxing.qrcode.decoder.Version: com.google.zxing.common.BitMatrix buildFunctionPattern()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
com.benjaminabel.vibration.Vibration: void vibrate(java.util.List,int)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: void removeIncorrectCodewords(com.google.zxing.pdf417.decoder.Codeword[],com.google.zxing.pdf417.decoder.BarcodeMetadata)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.String toString()
androidx.core.widget.NestedScrollView: boolean inChild(int,int)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void run()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.journeyapps.barcodescanner.camera.CameraThread: com.journeyapps.barcodescanner.camera.CameraThread getInstance()
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
kotlin.collections.EmptyIterator: boolean hasPrevious()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateTail(long,int)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: java.lang.String decodeAllCodes(java.lang.StringBuilder,int)
com.journeyapps.barcodescanner.CaptureActivity: void onPause()
com.journeyapps.barcodescanner.RotationListener: void stop()
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
com.google.zxing.oned.rss.Pair: void incrementCount()
com.journeyapps.barcodescanner.CameraPreview$5: void cameraClosed()
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: void setBounds(android.graphics.Rect,android.graphics.Rect)
androidx.core.provider.FontRequestWorker$1: androidx.core.provider.FontRequestWorker$TypefaceResult call()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.widget.SearchView: void onActionViewCollapsed()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)
androidx.activity.result.ActivityResultRegistry$3: void unregister()
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAlpha(int)
kotlin.text.StringsKt__StringsKt: void requireNonNegativeLimit(int)
androidx.appcompat.widget.TooltipCompatHandler: void hide()
androidx.core.widget.NestedScrollView: int clamp(int,int,int)
kotlin.ranges.IntProgression: int getStep()
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.TooltipCompatHandler$1: void run()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: AbsActionBarView$VisibilityAnimListener(androidx.appcompat.widget.AbsActionBarView)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Configuration getConfiguration()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(char,float[])
com.google.zxing.datamatrix.decoder.BitMatrixParser: byte[] readCodewords()
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayRemoved(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char,int,int)
com.google.zxing.pdf417.detector.Detector: java.util.List detect(boolean,com.google.zxing.common.BitMatrix)
androidx.appcompat.widget.AppCompatSpinner: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()
androidx.appcompat.view.menu.StandardMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.zxing.oned.MultiFormatOneDReader: void reset()
androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
io.flutter.view.AccessibilityBridge: void release()
kotlinx.coroutines.internal.ArrayQueue: boolean isEmpty()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: ErrorCorrection()
androidx.fragment.app.FragmentAnim$2$1: FragmentAnim$2$1(androidx.fragment.app.FragmentAnim$2)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setMetering(android.hardware.Camera$Parameters)
androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
io.flutter.embedding.engine.FlutterEngine: void destroy()
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.qrcode.decoder.Version readVersion()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(int)
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
com.journeyapps.barcodescanner.CameraPreview: void startCameraPreview(com.journeyapps.barcodescanner.camera.CameraSurface)
com.google.zxing.oned.Code39Reader: Code39Reader(boolean,boolean)
kotlinx.coroutines.CancellableContinuationImpl: boolean isReusable()
kotlin.ranges.RangesKt___RangesKt: long coerceAtLeast(long,long)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getSendException()
androidx.fragment.app.DefaultSpecialEffectsController: void findNamedViews(java.util.Map,android.view.View)
kotlinx.coroutines.EventLoopImplPlatform: EventLoopImplPlatform()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
androidx.appcompat.widget.AppCompatTextView: void onLayout(boolean,int,int,int,int)
com.journeyapps.barcodescanner.CameraPreview$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
androidx.appcompat.widget.ActionMenuPresenter: boolean dismissPopupMenus()
com.google.zxing.client.android.camera.open.OpenCameraInterface: OpenCameraInterface()
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
kotlinx.coroutines.InvokeOnCompletion: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources getResources()
com.google.zxing.common.PerspectiveTransform: PerspectiveTransform(float,float,float,float,float,float,float,float,float)
androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean isStateful()
androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: long getItemId(int)
androidx.window.core.Version: int getMajor()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)
androidx.fragment.app.FragmentTransition: void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection)
androidx.fragment.app.Fragment: int getPopExitAnim()
com.google.zxing.client.android.InactivityTimer: void start()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp(java.lang.String,long,long,long)
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
kotlin.Result$Failure: int hashCode()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
kotlin.collections.EmptySet: void clear()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)
androidx.appcompat.content.res.AppCompatResources: boolean isColorInt(android.content.Context,int)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task poll()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.core.view.inputmethod.EditorInfoCompat: boolean isCutOnSurrogate(java.lang.CharSequence,int,int)
com.journeyapps.barcodescanner.CameraPreview: void access$600(com.journeyapps.barcodescanner.CameraPreview)
com.google.zxing.oned.UPCEReader: java.lang.String convertUPCEtoUPCA(java.lang.String)
androidx.appcompat.app.AlertController$3: void run()
androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
com.journeyapps.barcodescanner.CameraPreview: void calculateFrames()
com.google.zxing.ReaderException: java.lang.Throwable fillInStackTrace()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.journeyapps.barcodescanner.Size: Size(int,int)
androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)
com.google.zxing.aztec.detector.Detector: com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.ResultPoint[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getOpacity()
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService access$200(io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
io.flutter.embedding.android.FlutterView$3: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.core.view.ActionProvider: boolean onPerformDefaultAction()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean)
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)
com.journeyapps.barcodescanner.camera.CameraInstance$3: void run()
androidx.appcompat.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
com.google.zxing.client.android.InactivityTimer: android.os.Handler access$100(com.google.zxing.client.android.InactivityTimer)
androidx.appcompat.view.menu.MenuAdapter: void notifyDataSetChanged()
com.journeyapps.barcodescanner.CaptureManager: void initializeFromIntent(android.content.Intent,android.os.Bundle)
kotlin.text.CharsKt__CharJVMKt: int checkRadix(int)
com.google.zxing.oned.CodaBarReader: CodaBarReader()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: DrawableContainer$DrawableContainerState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void parseTwoBytes(int,int,int[])
com.google.zxing.oned.UPCEANReader: int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[])
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: int getSecondDigit()
androidx.core.widget.NestedScrollView: int getScrollRange()
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.Object,java.lang.String)
com.google.zxing.aztec.decoder.Decoder: byte[] convertBoolArrayToByteArray(boolean[])
com.journeyapps.barcodescanner.CaptureActivity: void onCreate(android.os.Bundle)
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion()
androidx.appcompat.widget.DropDownListView: boolean hasFocus()
com.google.zxing.pdf417.PDF417ResultMetadata: void setFileName(java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void setNumeric()
androidx.fragment.app.FragmentManager: void dispatchStateChange(int)
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask[] values()
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: java.lang.String getMessage(byte[],int,int)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.google.zxing.ResultPoint: ResultPoint(float,float)
com.google.zxing.oned.OneDReader: void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[])
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object)
androidx.collection.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()
androidx.appcompat.app.AlertController$CheckedItemAdapter: boolean hasStableIds()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version[] buildVersions()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void setPosition(int)
androidx.appcompat.widget.SearchView$5: void onClick(android.view.View)
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.google.zxing.oned.MultiFormatOneDReader: MultiFormatOneDReader(java.util.Map)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: void onPrepareSubMenu(android.view.SubMenu)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.view.StandaloneActionMode: android.view.Menu getMenu()
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
androidx.collection.ArraySet: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)
com.google.zxing.common.GridSampler: com.google.zxing.common.GridSampler getInstance()
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: SearchView$PreQAutoCompleteTextViewReflector()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map mapOf(kotlin.Pair)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumWidth()
androidx.core.os.ExecutorCompat$HandlerExecutor: void execute(java.lang.Runnable)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isCheckable()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeText()
androidx.fragment.app.Fragment: void performViewCreated()
androidx.appcompat.app.AlertController: AlertController(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window)
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
androidx.collection.ContainerHelpers: int idealByteArraySize(int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$700(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: MenuPopupWindow$MenuDropDownListView(android.content.Context,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
io.flutter.plugin.platform.PlatformViewFactory: PlatformViewFactory(io.flutter.plugin.common.MessageCodec)
androidx.fragment.app.DefaultSpecialEffectsController$3: void onCancel()
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: ModuleNameRetriever$Cache(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
androidx.fragment.app.BackStackRecord: boolean isPostponed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
androidx.appcompat.view.menu.MenuWrapperICS: void close()
androidx.fragment.app.FragmentManager$7: FragmentManager$7(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
io.flutter.plugin.platform.PlatformViewsController: int access$500(io.flutter.plugin.platform.PlatformViewsController,double)
com.google.zxing.datamatrix.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$ECB)
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
androidx.core.view.inputmethod.InputConnectionCompat$2: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
androidx.fragment.app.Fragment$5: Fragment$5(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveGroup(int)
io.flutter.view.VsyncWaiter$DisplayListener: void register()
com.journeyapps.barcodescanner.CameraPreview: void initCamera()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $values()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
com.journeyapps.barcodescanner.camera.CameraInstance$4: CameraInstance$4(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler)
kotlin.collections.EmptyList: java.lang.Object get(int)
com.journeyapps.barcodescanner.MixedDecoder: MixedDecoder(com.google.zxing.Reader)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: MenuItemWrapperICS$ActionProviderWrapperJB(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
androidx.core.widget.NestedScrollView: void computeScroll()
androidx.appcompat.widget.TintContextWrapper: android.content.res.AssetManager getAssets()
com.google.zxing.oned.UPCEANExtension5Support: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[])
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int getNextSecondBar(com.google.zxing.common.BitArray,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
androidx.core.provider.FontRequest: java.lang.String toString()
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.Job getParent()
com.google.zxing.oned.ITFReader: void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder)
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isExposureEnabled()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: TypefaceCompat$ResourcesCallbackAdapter(androidx.core.content.res.ResourcesCompat$FontCallback)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Dialog)
androidx.fragment.app.FragmentStateManager: void saveViewState()
androidx.appcompat.graphics.drawable.DrawableContainer$1: DrawableContainer$1(androidx.appcompat.graphics.drawable.DrawableContainer)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean expandActionView()
androidx.appcompat.widget.AppCompatImageHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean hasSubMenu()
androidx.collection.MapCollections$ArrayIterator: void remove()
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
androidx.collection.LongSparseArray: java.lang.Object get(long)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable()
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
kotlin.Result: boolean isSuccess-impl(java.lang.Object)
androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuItemImpl: boolean requestsActionButton()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: ResourceManagerInternal$ColorFilterLruCache(int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
androidx.activity.result.ActivityResult: ActivityResult(android.os.Parcel)
androidx.fragment.app.DefaultSpecialEffectsController$3: DefaultSpecialEffectsController$3(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator)
androidx.fragment.app.FragmentAnim$2$1: void run()
androidx.window.embedding.SplitRule: int hashCode()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
androidx.appcompat.widget.ScrollingTabContainerView: void onNothingSelected(android.widget.AdapterView)
androidx.cursoradapter.widget.CursorAdapter: void changeCursor(android.database.Cursor)
androidx.fragment.app.Fragment: int getNextTransition()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewAttachedToWindow(android.view.View)
androidx.core.widget.TextViewCompat$OreoCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: boolean onDragEvent(android.view.DragEvent)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
kotlin.jvm.internal.PackageReference: int hashCode()
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toList(java.lang.Iterable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.google.zxing.oned.UPCEANReader: int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][])
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(int)
androidx.core.view.ViewPropertyAnimatorCompat: long getDuration()
androidx.fragment.app.Fragment$3: Fragment$3(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][])
androidx.fragment.app.FragmentAnim: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)
kotlinx.coroutines.InvokeOnCancel: InvokeOnCancel(kotlin.jvm.functions.Function1)
androidx.core.graphics.TypefaceCompatBaseImpl: void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.cursoradapter.widget.CursorAdapter: long getItemId(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)
kotlin.sequences.TransformingSequence$iterator$1: void remove()
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1)
androidx.core.widget.NestedScrollView: void recycleVelocityTracker()
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState[] newArray(int)
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.TooltipPopup: void show(android.view.View,int,int,boolean,java.lang.CharSequence)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void beforeTask(int)
com.journeyapps.barcodescanner.camera.CameraManager: void setParameters()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
kotlinx.coroutines.NodeList: kotlinx.coroutines.NodeList getList()
com.google.zxing.Result: void addResultPoints(com.google.zxing.ResultPoint[])
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
kotlinx.coroutines.EventLoopImplBase: boolean enqueueImpl(java.lang.Runnable)
androidx.appcompat.graphics.drawable.DrawableContainer: int getOpacity()
kotlinx.coroutines.InvokeOnCompletion: InvokeOnCompletion(kotlin.jvm.functions.Function1)
androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
io.flutter.view.VsyncWaiter: VsyncWaiter(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.SearchView: void onVoiceClicked()
com.google.zxing.qrcode.detector.AlignmentPatternFinder: AlignmentPatternFinder(com.google.zxing.common.BitMatrix,int,int,int,int,float,com.google.zxing.ResultPointCallback)
com.google.zxing.Binarizer: com.google.zxing.LuminanceSource getLuminanceSource()
androidx.appcompat.widget.Toolbar: void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: DefaultSpecialEffectsController$AnimationInfo(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void addView(java.lang.Object[])
com.google.zxing.aztec.detector.Detector: int getDimension()
kotlin.collections.SetsKt__SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)
com.google.zxing.pdf417.decoder.Codeword: boolean isValidRowNumber(int)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
androidx.core.provider.RequestExecutor$ReplyRunnable: RequestExecutor$ReplyRunnable(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)
com.google.zxing.LuminanceSource: LuminanceSource(int,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)
androidx.appcompat.view.menu.CascadingMenuPopup: void showMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.zxing.oned.rss.expanded.ExpandedRow: boolean equals(java.lang.Object)
androidx.core.view.inputmethod.InputConnectionCompat: boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView access$900(io.flutter.plugin.platform.PlatformViewsController)
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentManager$6: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.journeyapps.barcodescanner.camera.CameraInstance$3: CameraInstance$3(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.appcompat.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
com.google.zxing.oned.rss.expanded.BitArrayBuilder: com.google.zxing.common.BitArray buildBitArray(java.util.List)
androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.collections.EmptySet: boolean retainAll(java.util.Collection)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.String toString()
kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Matrix calculateTextureTransform(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(androidx.core.graphics.PathParser$PathDataNode)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.appcompat.widget.ResourcesWrapper: boolean getBoolean(int)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$500(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.fragment.app.FragmentContainerView: void addDisappearingFragmentView(android.view.View)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType[] values()
androidx.collection.ContainerHelpers: int idealIntArraySize(int)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)
com.journeyapps.barcodescanner.SourceData: com.google.zxing.ResultPoint translateResultPoint(com.google.zxing.ResultPoint)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void onClick(android.content.DialogInterface,int)
androidx.appcompat.app.TwilightManager: boolean isStateValid()
androidx.appcompat.widget.TooltipCompatHandler$2: void run()
androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int)
com.google.zxing.qrcode.decoder.FormatInformation: int numBitsDiffering(int,int)
androidx.lifecycle.MutableLiveData: MutableLiveData()
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: Detector$ResultPointsAndTransitions(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,com.google.zxing.datamatrix.detector.Detector$1)
com.google.zxing.qrcode.detector.AlignmentPattern: com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float)
androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence[] getTextArray(int)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: java.lang.String toString()
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateHead(long,int)
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int)
androidx.fragment.app.DefaultSpecialEffectsController$5: void onCancel()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
androidx.activity.result.ActivityResult: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean getPadding(android.graphics.Rect)
com.google.zxing.oned.rss.expanded.ExpandedRow: int getRowNumber()
androidx.appcompat.view.menu.BaseMenuPresenter: void updateMenuView(boolean)
androidx.savedstate.SavedStateRegistry: SavedStateRegistry()
kotlin.text.DelimitedRangesSequence$iterator$1: void remove()
kotlinx.coroutines.channels.AbstractChannel: void removeReceiveOnCancel(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long markFrozen()
androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)
com.google.zxing.qrcode.decoder.DataMask$3: DataMask$3(java.lang.String,int)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix)
kotlin.text.DelimitedRangesSequence$iterator$1: void calcNext()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean isEmpty()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.journeyapps.barcodescanner.CaptureManager: void decode()
io.flutter.embedding.android.FlutterSplashView: boolean wasPreviousSplashTransitionInterrupted()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,char[],int,boolean)
kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()
androidx.appcompat.view.menu.BaseMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
kotlinx.coroutines.CoroutineName: java.lang.String toString()
androidx.appcompat.view.ContextThemeWrapper: void setTheme(int)
androidx.fragment.app.FragmentTransitionCompat21$5: FragmentTransitionCompat21$5(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
androidx.fragment.app.FragmentStateManager: void createView()
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
com.google.zxing.oned.rss.FinderPattern: int[] getStartEnd()
androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
androidx.appcompat.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()
com.journeyapps.barcodescanner.CameraPreview: void access$100(com.journeyapps.barcodescanner.CameraPreview)
androidx.appcompat.view.menu.MenuDialogHelper: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.google.zxing.common.BitMatrix: int[] getBottomRightOnBit()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
kotlin.collections.EmptyList: boolean containsAll(java.util.Collection)
androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.fragment.app.FragmentContainerView: void endViewTransition(android.view.View)
androidx.fragment.app.DefaultSpecialEffectsController$7: DefaultSpecialEffectsController$7(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect)
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] cleanupAutoSizePresetSizes(int[])
kotlinx.coroutines.scheduling.NonBlockingContext: int getTaskMode()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: ReedSolomonDecoder(com.google.zxing.common.reedsolomon.GenericGF)
kotlinx.coroutines.JobSupport$ChildCompletion: JobSupport$ChildCompletion(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested()
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix)
androidx.core.widget.NestedScrollView: void onMeasure(int,int)
com.journeyapps.barcodescanner.CameraPreview: int getDisplayRotation()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.CoroutineDispatcher createDefaultDispatcher()
androidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean isOverlapAllowed()
androidx.appcompat.widget.Toolbar: boolean hideOverflowMenu()
com.google.zxing.qrcode.detector.FinderPattern: float getEstimatedModuleSize()
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.core.graphics.TypefaceCompatApi24Impl: boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean)
androidx.core.view.inputmethod.EditorInfoCompat: void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[])
androidx.activity.ComponentActivity: void reportFullyDrawn()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.graphics.drawable.Drawable getBackground()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()
com.journeyapps.barcodescanner.CameraPreview: java.util.List access$700(com.journeyapps.barcodescanner.CameraPreview)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.activity.ComponentActivity$1: ComponentActivity$1(androidx.activity.ComponentActivity)
androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()
androidx.fragment.app.Fragment: void onLowMemory()
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.fragment.app.FragmentState: FragmentState(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManager: void doPendingDeferredStart()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.lang.Iterable)
androidx.fragment.app.SpecialEffectsController$2: SpecialEffectsController$2(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryAcquireCpuPermit()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainTypedArray(int)
androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.appcompat.widget.TooltipCompatHandler: void clearAnchorPos()
androidx.appcompat.widget.AppCompatTextView: void setTypeface(android.graphics.Typeface,int)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getSystemFontFamily(java.lang.String)
com.journeyapps.barcodescanner.CameraPreview: void pauseAndWait()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
io.flutter.embedding.android.FlutterSplashView: boolean hasSplashCompleted()
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: CursorAdapter$ChangeObserver(androidx.cursoradapter.widget.CursorAdapter)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.DrawableSplashScreen: void transitionToFlutter(java.lang.Runnable)
androidx.fragment.app.Fragment: void performDestroy()
androidx.appcompat.widget.ThemeUtils: void checkAppCompatTheme(android.view.View,android.content.Context)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.widget.SearchView$9: SearchView$9(androidx.appcompat.widget.SearchView)
kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()
com.journeyapps.barcodescanner.camera.CameraInstance$2: CameraInstance$2(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean equals(java.lang.Object)
androidx.core.content.res.ResourcesCompat$FontCallback$1: void run()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewAttachedToWindow(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ResourcesWrapper: void getValueForDensity(int,int,android.util.TypedValue,boolean)
androidx.fragment.app.FragmentTransitionCompat21: FragmentTransitionCompat21()
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(java.lang.Object)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int)
androidx.fragment.app.FragmentManager$2: FragmentManager$2(androidx.fragment.app.FragmentManager)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.view.StandaloneActionMode: void setTitle(int)
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl: void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object getTransition()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
com.google.zxing.qrcode.detector.FinderPatternFinder: com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcel)
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEnabled(int)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean isTerminated()
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewExpanded()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void getOutline(android.graphics.Outline)
androidx.appcompat.widget.ResourcesWrapper: int getColor(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
kotlinx.coroutines.internal.SystemPropsKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: com.google.zxing.common.DecoderResult decode(byte[])
androidx.core.content.ContextCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.google.zxing.common.BitMatrix: BitMatrix(int)
com.journeyapps.barcodescanner.DefaultDecoderFactory: DefaultDecoderFactory()
kotlin.ranges.IntProgression: int getLast()
androidx.appcompat.widget.ActionBarOverlayLayout: void postAddActionBarHideOffset()
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: void onChange(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()
kotlinx.coroutines.EventLoopImplBase: void shutdown()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)
androidx.fragment.app.DefaultSpecialEffectsController$6: DefaultSpecialEffectsController$6(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
kotlinx.coroutines.scheduling.LimitingDispatcher: void execute(java.lang.Runnable)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Object)
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTint(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()
androidx.core.view.inputmethod.EditorInfoCompat: void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int)
androidx.appcompat.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: AppCompatDelegateImpl$AppCompatWindowCallback(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)
com.journeyapps.barcodescanner.CaptureManager: com.google.zxing.client.android.BeepManager access$100(com.journeyapps.barcodescanner.CaptureManager)
androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)
androidx.appcompat.view.SupportMenuInflater$MenuState: SupportMenuInflater$MenuState(androidx.appcompat.view.SupportMenuInflater,android.view.Menu)
androidx.appcompat.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)
kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)
androidx.appcompat.view.menu.StandardMenuPopup: void dismiss()
com.journeyapps.barcodescanner.CaptureManager$2: void cameraClosed()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
androidx.core.provider.RequestExecutor$DefaultThreadFactory: RequestExecutor$DefaultThreadFactory(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: AnimatorInflaterCompat$PathDataEvaluator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.app.AlertController$5: AlertController$5(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.Codeword getCodeword(int)
androidx.fragment.app.FragmentController: void dispatchLowMemory()
androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentManagerViewModel: void onCleared()
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()
androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float interpolateValue(float)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
androidx.appcompat.view.menu.ListMenuPresenter: boolean flagActionItems()
androidx.appcompat.widget.ForwardingListener: boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setFocus(android.hardware.Camera$Parameters,com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode,boolean)
androidx.core.app.TaskStackBuilder: void startActivities()
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
androidx.appcompat.view.StandaloneActionMode: void setCustomView(android.view.View)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitleOptionalHint(boolean)
androidx.activity.result.ActivityResult$1: java.lang.Object[] newArray(int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
androidx.lifecycle.ViewModel: ViewModel()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int[] getModuleBitCount(com.google.zxing.common.BitMatrix,int,int,boolean,int,int)
androidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.SubMenuBuilder: void setGroupDividerEnabled(boolean)
androidx.fragment.app.FragmentManager: void noteStateNotSaved()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor getCursor()
com.google.zxing.oned.OneDReader: void reset()
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char,int)
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
androidx.appcompat.widget.ListPopupWindow: void setEpicenterBounds(android.graphics.Rect)
net.touchcapture.qr.flutterqr.QRView: boolean access$isPaused$p(net.touchcapture.qr.flutterqr.QRView)
com.google.zxing.common.DetectorResult: com.google.zxing.ResultPoint[] getPoints()
androidx.fragment.app.Fragment: boolean isRemoving()
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferAlwaysEmpty()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
kotlinx.coroutines.DefaultExecutor: boolean notifyStartup()
kotlinx.coroutines.ChildHandleNode: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentContainerView: void removeViewAt(int)
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
androidx.appcompat.view.StandaloneActionMode: void invalidate()
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
androidx.core.view.KeyEventDispatcher: boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
io.flutter.plugin.editing.ListenableEditingState: void clearBatchDeltas()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.zxing.qrcode.decoder.Version$ECBlocks: com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values()
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int getHorizontalOriginalOffset()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.fragment.app.FragmentManager$11: FragmentManager$11(androidx.fragment.app.FragmentManager)
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraSurface access$500(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.fragment.app.FragmentActivity: void onResume()
androidx.fragment.app.FragmentManager: void detachFragment(androidx.fragment.app.Fragment)
kotlinx.coroutines.JobSupport: void parentCancelled(kotlinx.coroutines.ParentJob)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.journeyapps.barcodescanner.CameraPreview$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: BlockParsedResult(com.google.zxing.oned.rss.expanded.decoders.DecodedInformation,boolean)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
androidx.fragment.app.FragmentManager: int getBackStackEntryCount()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.zxing.common.DecoderResult: void setOther(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setAlpha(int)
androidx.appcompat.widget.AppCompatTextHelper$1: AppCompatTextHelper$1(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()
androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
androidx.activity.result.ActivityResultRegistry$3: ActivityResultRegistry$3(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: RestrictedContinuationImpl(kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.provider.FontRequest: java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean overridesItemVisibility()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: MenuItemWrapperICS$CollapsibleActionViewWrapper(android.view.View)
androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.view.ViewCompat: java.lang.CharSequence getStateDescription(android.view.View)
io.flutter.plugin.editing.ListenableEditingState: void setSpan(java.lang.Object,int,int,int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(int,int)
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.journeyapps.barcodescanner.BarcodeResult: java.lang.String getText()
androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()
com.google.zxing.datamatrix.decoder.Version$ECBlocks: com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks()
com.google.zxing.oned.UPCEANExtension5Support: UPCEANExtension5Support()
com.google.zxing.common.DecoderResult: java.lang.Object getOther()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)
androidx.appcompat.widget.ResourceManagerInternal: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
io.flutter.embedding.engine.renderer.FlutterRenderer: void markTextureFrameAvailable(long)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: void clear()
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void show(int,int)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: boolean checkCodewordSkew(int,int,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int getTotalDuration()
kotlinx.coroutines.NonDisposableHandle: NonDisposableHandle()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$300(io.flutter.view.AccessibilityBridge,int,int)
androidx.appcompat.widget.AppCompatTextHelper$2: AppCompatTextHelper$2(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setDither(boolean)
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: CustomFramingRectBarcodeView(android.content.Context)
androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: AccessibilityDelegateCompat$AccessibilityDelegateAdapter(androidx.core.view.AccessibilityDelegateCompat)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean access$100(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.provider.FontRequestWorker: java.lang.String createCacheId(androidx.core.provider.FontRequest,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setTextAppearance(android.content.Context,int)
kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()
androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isEmpty()
kotlinx.coroutines.EventLoop: void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isShortcutsVisible()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isRunning()
com.google.zxing.aztec.detector.Detector: com.google.zxing.ResultPoint[] getBullsEyeCorners(com.google.zxing.aztec.detector.Detector$Point)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)
androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: int numericCompaction(int[],int,java.lang.StringBuilder)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
kotlinx.coroutines.CoroutineExceptionHandlerKt: java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable)
com.google.zxing.datamatrix.detector.Detector: boolean isValid(com.google.zxing.ResultPoint)
androidx.appcompat.widget.TintResources: android.graphics.drawable.Drawable getDrawable(int)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs: AI01AndOtherAIs(com.google.zxing.common.BitArray)
androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: java.lang.String parseInformation()
com.journeyapps.barcodescanner.camera.CameraInstance$1: CameraInstance$1(com.journeyapps.barcodescanner.camera.CameraInstance)
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
io.flutter.util.PathUtils: java.lang.String getDataDirPath(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.google.zxing.oned.rss.expanded.decoders.DecodedObject: int getNewPosition()
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewAttachedToWindow(android.view.View)
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode[] values()
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: FragmentLifecycleCallbacksDispatcher(androidx.fragment.app.FragmentManager)
androidx.appcompat.view.SupportActionModeWrapper: android.view.MenuInflater getMenuInflater()
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()
androidx.fragment.app.DefaultSpecialEffectsController$4: void onAnimationEnd(android.view.animation.Animation)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.zxing.client.android.AmbientLightManager: void setTorch(boolean)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
com.google.zxing.Result: java.util.Map getResultMetadata()
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeFocusCompat(int,android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
kotlinx.coroutines.CancellableContinuationImpl: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
com.journeyapps.barcodescanner.SourceData: SourceData(byte[],int,int,int,int)
kotlinx.coroutines.InvokeOnCancelling: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatBackgroundHelper: void applySupportBackgroundTint()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: SingleViewPresentation$FakeWindowViewGroup(android.content.Context)
androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.appcompat.view.SupportActionModeWrapper: android.view.View getCustomView()
com.google.zxing.common.DecoderResult: void setErasures(java.lang.Integer)
com.google.zxing.common.DetectorResult: DetectorResult(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
androidx.appcompat.view.SupportActionModeWrapper: boolean getTitleOptionalHint()
com.google.zxing.client.android.InactivityTimer: void onBattery(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)
androidx.core.widget.AutoScrollHelper$ClampedScroller: AutoScrollHelper$ClampedScroller()
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String[] getStringArray(int)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)
androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)
com.google.zxing.oned.rss.expanded.decoders.DecodedChar: char getValue()
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.appcompat.widget.MenuPopupWindow: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.collection.ArraySet$1: int colIndexOfKey(java.lang.Object)
com.google.zxing.qrcode.detector.AlignmentPatternFinder: float centerFromEnd(int[],int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)
androidx.appcompat.view.SupportMenuInflater: void inflate(int,android.view.Menu)
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()
kotlin.Pair: java.lang.Object getSecond()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isFocused()
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: Detector$ResultPointsAndTransitions(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)
androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
com.google.zxing.datamatrix.decoder.Version$ECB: Version$ECB(int,int,com.google.zxing.datamatrix.decoder.Version$1)
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact()
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
androidx.appcompat.widget.ActionBarContextView$1: ActionBarContextView$1(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode)
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
kotlin.collections.EmptySet: EmptySet()
com.google.zxing.qrcode.decoder.BitMatrixParser: BitMatrixParser(com.google.zxing.common.BitMatrix)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
com.journeyapps.barcodescanner.CameraPreview: double getMarginFraction()
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])
androidx.core.provider.FontRequestWorker: int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUpPanel(int,android.view.KeyEvent)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.core.provider.FontsContractCompat$FontInfo: androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
androidx.tracing.Trace: boolean isEnabledFallback()
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String toString()
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
com.google.zxing.pdf417.detector.PDF417DetectorResult: com.google.zxing.common.BitMatrix getBits()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.TooltipCompatHandler: boolean updateAnchorPos(android.view.MotionEvent)
androidx.appcompat.widget.SearchView$7: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
kotlinx.coroutines.scheduling.LimitingDispatcher: void afterTask()
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher getIO()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata()
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.google.zxing.oned.rss.expanded.decoders.AI01decoder: void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: WindowDecorActionBar$ActionModeImpl(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)
kotlin.jvm.internal.PackageReference: java.lang.String toString()
androidx.fragment.app.FragmentManager$4: androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup)
androidx.fragment.app.Fragment: android.view.View getFocusedView()
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.google.zxing.common.BitArray: void clear()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
kotlin.collections.EmptyMap: java.util.Collection values()
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
kotlinx.coroutines.JobNode: void dispose()
androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()
kotlinx.coroutines.AbstractCoroutine: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
androidx.appcompat.view.menu.StandardMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(int)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
androidx.appcompat.app.AppCompatDelegateImpl: void setTitle(java.lang.CharSequence)
androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)
io.flutter.plugin.platform.PlatformViewsController: void initializePlatformViewIfNeeded(int)
androidx.core.provider.FontRequestWorker$3: androidx.core.provider.FontRequestWorker$TypefaceResult call()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.journeyapps.barcodescanner.DecoderThread: java.lang.Object access$200(com.journeyapps.barcodescanner.DecoderThread)
androidx.appcompat.widget.ListPopupWindow: int getVerticalOffset()
kotlinx.coroutines.scheduling.CoroutineScheduler: void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int)
com.google.zxing.common.DecoderResult: DecoderResult(byte[],java.lang.String,java.util.List,java.lang.String)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDialog: android.view.View findViewById(int)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.camera.CameraSettings getCameraSettings()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
androidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)
androidx.core.widget.TextViewCompat$OreoCallback: void recomputeProcessTextMenuItems(android.view.Menu)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context)
kotlinx.coroutines.internal.Symbol: Symbol(java.lang.String)
androidx.collection.ArraySet: boolean isEmpty()
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)
kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)
androidx.core.widget.AutoScrollHelper: boolean shouldAnimate()
androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String toString()
com.google.zxing.pdf417.PDF417Common: int getCodeword(int)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewCollapsed()
com.google.zxing.qrcode.decoder.Mode: Mode(java.lang.String,int,int[],int)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.journeyapps.barcodescanner.CameraPreview: void setPreviewScalingStrategy(com.journeyapps.barcodescanner.camera.PreviewScalingStrategy)
androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
androidx.appcompat.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.zxing.oned.EAN8Reader: com.google.zxing.BarcodeFormat getBarcodeFormat()
androidx.appcompat.widget.ActionMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.collection.MapCollections$MapIterator: int hashCode()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampUpDuration(int)
com.google.zxing.oned.rss.expanded.ExpandedPair: ExpandedPair(com.google.zxing.oned.rss.DataCharacter,com.google.zxing.oned.rss.DataCharacter,com.google.zxing.oned.rss.FinderPattern,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder: int checkWeight(int)
androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: boolean fullScroll(int)
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char)
androidx.appcompat.widget.ListPopupWindow: void clearListSelection()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()
kotlinx.coroutines.CancelledContinuation: boolean makeResumed()
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
androidx.window.embedding.ActivityStack: int hashCode()
androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)
androidx.fragment.app.Fragment: void performAttach()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: boolean onForwardingStarted()
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
com.google.zxing.oned.CodaBarReader: void setCounters(com.google.zxing.common.BitArray)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUp(int,android.view.KeyEvent)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource getTimeSource()
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.window.core.Bounds: Bounds(int,int,int,int)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$700(io.flutter.view.AccessibilityBridge)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
com.google.zxing.datamatrix.decoder.BitMatrixParser: boolean readModule(int,int,int,int)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: StringsKt__IndentKt$getIndentFunction$2(java.lang.String)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(int)
kotlin.collections.EmptySet: int hashCode()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.zxing.client.android.InactivityTimer$PowerStatusReceiver: InactivityTimer$PowerStatusReceiver(com.google.zxing.client.android.InactivityTimer,com.google.zxing.client.android.InactivityTimer$1)
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.journeyapps.barcodescanner.DecoratedBarcodeView: DecoratedBarcodeView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean inStack()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
androidx.appcompat.widget.SearchView: android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()
kotlinx.coroutines.internal.ContextScope: ContextScope(kotlin.coroutines.CoroutineContext)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.widget.DropDownListView: void onDetachedFromWindow()
com.journeyapps.barcodescanner.CameraPreview: boolean isActive()
androidx.appcompat.widget.SearchView$1: void run()
com.journeyapps.barcodescanner.DecoratedBarcodeView: android.widget.TextView getStatusView()
kotlinx.coroutines.JobSupport: java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.ListPopupWindow: int buildDropDown()
com.google.zxing.qrcode.QRCodeReader: float moduleSize(int[],com.google.zxing.common.BitMatrix)
androidx.appcompat.widget.ActionBarOverlayLayout$2: void run()
com.google.zxing.common.BitMatrix: java.lang.String toString()
com.google.zxing.aztec.decoder.Decoder: int readCode(boolean[],int,int)
kotlinx.coroutines.CancellableContinuationImpl: boolean resetStateReusable()
kotlinx.coroutines.CompletedContinuation: boolean equals(java.lang.Object)
net.touchcapture.qr.flutterqr.QRView: void checkAndRequestPermission(io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
com.journeyapps.barcodescanner.camera.FitXYStrategy: float getScore(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void setSelected(boolean)
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
androidx.fragment.app.FragmentStateManager: void addViewToContainer()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation: void markStartedSpecialEffect(androidx.core.os.CancellationSignal)
androidx.appcompat.view.menu.ActionMenuItem: boolean hasSubMenu()
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
kotlin.random.AbstractPlatformRandom: int nextInt()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)
androidx.core.provider.CallbackWithHandler$2: CallbackWithHandler$2(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int)
com.google.zxing.qrcode.decoder.FormatInformation: com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,long)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Throwable helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed)
io.flutter.embedding.engine.renderer.FlutterRenderer: void unregisterTexture(long)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
io.flutter.plugin.editing.TextInputPlugin: void access$400(io.flutter.plugin.editing.TextInputPlugin)
androidx.fragment.app.FragmentStateManager: void resume()
kotlinx.coroutines.CancellableContinuationImpl: CancellableContinuationImpl(kotlin.coroutines.Continuation,int)
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: int checkWeight(int)
kotlinx.coroutines.internal.DispatchedContinuation: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)
androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibilityBridge()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: CurrentParsingState$State(java.lang.String,int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
androidx.lifecycle.ReportFragment: ReportFragment()
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object[] newArray(int)
com.journeyapps.barcodescanner.camera.AutoFocusManager: boolean access$302(com.journeyapps.barcodescanner.camera.AutoFocusManager,boolean)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()
kotlinx.coroutines.JobSupport: boolean isCompleted()
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(java.io.File)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean onStateChanged(int[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void stop()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getRowCountUpperPart()
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getRowCount()
androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
kotlinx.coroutines.internal.ScopeCoroutine: void afterResume(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
kotlinx.coroutines.channels.ConflatedChannel: kotlinx.coroutines.internal.UndeliveredElementException updateValueLocked(java.lang.Object)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
androidx.fragment.app.FragmentManager$7: void onAnimationEnd(android.animation.Animator)
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
androidx.core.app.ActivityCompat$2: void run()
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)
androidx.appcompat.widget.Toolbar$LayoutParams: void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: AbstractChannel$RemoveReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationStart(android.animation.Animator)
androidx.lifecycle.ViewModel: void clear()
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setBestPreviewFPS(android.hardware.Camera$Parameters)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float getInterpolation(float)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.app.Activity,android.content.Context,android.os.Handler,int)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: AbstractSendChannel$SendBuffered(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void computeContentWidth()
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem getItem(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)
androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
androidx.appcompat.app.AppCompatDialog$1: boolean superDispatchKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.internal.ArrayQueue: void ensureCapacity()
com.google.zxing.datamatrix.decoder.DataBlock: byte[] getCodewords()
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()
androidx.core.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
androidx.appcompat.app.AlertController$AlertParams$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.appcompat.view.menu.CascadingMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
kotlinx.coroutines.UndispatchedCoroutine: void afterResume(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.google.zxing.datamatrix.decoder.Version: int getVersionNumber()
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeView(java.lang.Object[])
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatEditText: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setTorchListener(com.journeyapps.barcodescanner.DecoratedBarcodeView$TorchListener)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setTorchOn()
com.google.zxing.common.BitArray: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)
androidx.fragment.app.FragmentTransitionCompat21$3: FragmentTransitionCompat21$3(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isStillAlpha(int)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.zxing.ResultPoint: float getY()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List load(java.lang.Class,java.lang.ClassLoader)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.UndispatchedCoroutine: void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.widget.SearchView: void onSearchClicked()
androidx.core.view.ViewCompat: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
kotlinx.coroutines.internal.ThreadSafeHeap: int getSize()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.google.zxing.pdf417.detector.Detector: void copyToResult(com.google.zxing.ResultPoint[],com.google.zxing.ResultPoint[],int[])
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
androidx.appcompat.widget.AppCompatReceiveContentHelper: android.app.Activity tryGetActivity(android.view.View)
androidx.appcompat.widget.ListPopupWindow: void show()
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void preApi29Check()
androidx.fragment.app.FragmentManager: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.zxing.maxicode.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)
androidx.collection.MapCollections$ValuesCollection: int size()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock()
androidx.appcompat.widget.ToolbarWidgetWrapper$2: ToolbarWidgetWrapper$2(androidx.appcompat.widget.ToolbarWidgetWrapper,int)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
androidx.lifecycle.LiveData$ObserverWrapper: LiveData$ObserverWrapper(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
kotlin.coroutines.EmptyCoroutineContext: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
androidx.appcompat.widget.AppCompatSpinner$2: AppCompatSpinner$2(androidx.appcompat.widget.AppCompatSpinner)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char,int,int)
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()
kotlinx.coroutines.internal.OpDescriptor: java.lang.String toString()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: AppCompatDelegateImpl$AutoBatteryNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
kotlinx.coroutines.channels.Send: void undeliveredElement()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
androidx.appcompat.app.AlertController$4: void onScrollStateChanged(android.widget.AbsListView,int)
androidx.fragment.app.SpecialEffectsController: void markPostponedState()
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.appcompat.widget.AppCompatSeekBarHelper: AppCompatSeekBarHelper(android.widget.SeekBar)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: FlutterSplashView$SavedState$1()
androidx.appcompat.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
com.google.zxing.qrcode.detector.Detector: float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
com.journeyapps.barcodescanner.RotationListener: android.view.WindowManager access$000(com.journeyapps.barcodescanner.RotationListener)
androidx.savedstate.Recreator$SavedStateProvider: void add(java.lang.String)
androidx.appcompat.view.menu.MenuAdapter: void findExpandedIndex()
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
com.google.zxing.common.GridSampler: GridSampler()
androidx.appcompat.widget.SearchView: void updateFocusedState()
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String invoke(java.lang.String)
androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.widget.ActionMenuPresenter: boolean hideSubMenus()
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block()
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly)
androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
com.journeyapps.barcodescanner.BarcodeView: void stopDecoderThread()
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)
com.google.zxing.pdf417.decoder.BoundingBox: BoundingBox(com.google.zxing.pdf417.decoder.BoundingBox)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getXml(int)
com.journeyapps.barcodescanner.CaptureActivity: com.journeyapps.barcodescanner.DecoratedBarcodeView initializeContent()
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
androidx.core.widget.AutoScrollHelper: float getEdgeValue(float,float,float,float)
com.journeyapps.barcodescanner.camera.CameraInstance: void setDisplayConfiguration(com.journeyapps.barcodescanner.camera.DisplayConfiguration)
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl: android.content.res.Resources getResources(android.content.res.Resources$Theme)
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(android.view.WindowInsets)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraInstance getCameraInstance()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4200(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int,android.util.TypedValue)
com.journeyapps.barcodescanner.DecoderThread: void access$100(com.journeyapps.barcodescanner.DecoderThread)
androidx.core.widget.NestedScrollView: void scrollTo(int,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
kotlin.random.Random$Default: int nextBits(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.internal.ScopeCoroutine: java.lang.StackTraceElement getStackTraceElement()
androidx.appcompat.widget.AppCompatButton: void setTextSize(int,float)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.util.Collection)
androidx.appcompat.widget.ActionBarOverlayLayout: void removeActionBarHideOffset()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService()
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: android.widget.ListView getListView()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)
androidx.appcompat.app.AppCompatDialog: void setTitle(int)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRequestFailed(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: ActionMenuView$MenuBuilderCallback(androidx.appcompat.widget.ActionMenuView)
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean isAutoSizeEnabled()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void updateViewLayout(java.lang.Object[])
androidx.core.view.inputmethod.EditorInfoCompat: boolean isPasswordInputType(int)
androidx.appcompat.content.res.AppCompatResources: android.util.TypedValue getTypedValue()
com.journeyapps.barcodescanner.RotationListener: com.journeyapps.barcodescanner.RotationCallback access$100(com.journeyapps.barcodescanner.RotationListener)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
io.flutter.embedding.android.FlutterImageView: void init()
androidx.appcompat.widget.AppCompatSpinner: boolean performClick()
io.flutter.embedding.android.FlutterView$4: void onFlutterUiNoLongerDisplayed()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: AccessibilityClickableSpanCompat(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.Size getPreviewSize()
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.journeyapps.barcodescanner.BarcodeCallback: void possibleResultPoints(java.util.List)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
net.touchcapture.qr.flutterqr.QRView$1: void onActivityDestroyed(android.app.Activity)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.content.Context,android.util.AttributeSet)
com.google.zxing.common.DecoderResult: java.lang.String getText()
com.google.zxing.common.DecoderResult: java.util.List getByteSegments()
androidx.collection.ArraySet: java.lang.Object valueAt(int)
com.google.zxing.pdf417.decoder.Codeword: java.lang.String toString()
kotlin.text.DelimitedRangesSequence$iterator$1: DelimitedRangesSequence$iterator$1(kotlin.text.DelimitedRangesSequence)
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
androidx.appcompat.widget.SearchView: void updateCloseButton()
kotlinx.coroutines.JobSupport: boolean getOnCancelComplete$kotlinx_coroutines_core()
androidx.activity.ComponentActivity$5: ComponentActivity$5(androidx.activity.ComponentActivity)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()
kotlin.jvm.internal.ClassReference: ClassReference(java.lang.Class)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isStateful()
com.google.zxing.common.CharacterSetECI: CharacterSetECI(java.lang.String,int,int[],java.lang.String[])
androidx.appcompat.app.TwilightManager: boolean isNight()
androidx.appcompat.widget.AppCompatSeekBar: void jumpDrawablesToCurrentState()
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.journeyapps.barcodescanner.BarcodeView: void startDecoderThread()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.channels.Receive: java.lang.Object getOfferResult()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.graphics.drawable.DrawableWrapper: void jumpToCurrentState()
androidx.core.view.ViewCompat$3: java.lang.CharSequence frameworkGet(android.view.View)
io.flutter.view.VsyncWaiter$DisplayListener: VsyncWaiter$DisplayListener(io.flutter.view.VsyncWaiter,android.hardware.display.DisplayManager)
androidx.core.view.WindowInsetsCompat$Type: int indexOf(int)
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
com.journeyapps.barcodescanner.CameraPreview: boolean isPreviewActive()
androidx.window.core.Bounds: int getBottom()
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)
androidx.core.view.ViewPropertyAnimatorCompat: void start()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.Object invoke(java.lang.Object)
com.journeyapps.barcodescanner.CameraPreview: CameraPreview(android.content.Context)
com.google.zxing.qrcode.detector.FinderPatternFinder: void clearCounts(int[])
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.appcompat.widget.ActionMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.fragment.app.FragmentManager$11: void onActivityResult(java.util.Map)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.fragment.app.FragmentManager$2: void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int,int)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: ThreadContextKt$updateState$1()
androidx.appcompat.widget.AppCompatSpinner: void onDetachedFromWindow()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()
androidx.collection.SimpleArrayMap: void allocArrays(int)
androidx.appcompat.app.AlertController: void installContent()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: EventLoopImplBase$DelayedTaskQueue(long)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.embedding.android.FlutterSurfaceView: void pause()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
com.google.zxing.oned.Code93Reader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$7: void run()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int)
androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean)
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
androidx.core.view.ViewPropertyAnimatorCompat: void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: ModuleNameRetriever()
com.journeyapps.barcodescanner.camera.CameraManager: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
kotlinx.coroutines.internal.DispatchedContinuation: void release()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.StackTraceElement getStackTraceElement()
kotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.journeyapps.barcodescanner.CameraPreview$5: CameraPreview$5(com.journeyapps.barcodescanner.CameraPreview)
kotlin.text.StringsKt___StringsKt: java.lang.String drop(java.lang.String,int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler,android.content.Context)
com.google.zxing.oned.rss.expanded.decoders.AI01decoder: void appendCheckDigit(java.lang.StringBuilder,int)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)
kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)
com.google.zxing.oned.rss.Pair: com.google.zxing.oned.rss.FinderPattern getFinderPattern()
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: java.lang.Object getItem(int)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void consumeTextFutureAndSetBlocking()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.fragment.app.SpecialEffectsController$Operation$1: void onCancel()
androidx.collection.MapCollections$EntrySet: void clear()
androidx.customview.view.AbsSavedState: AbsSavedState(androidx.customview.view.AbsSavedState$1)
kotlin.collections.EmptyList: void clear()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)
androidx.core.view.ViewPropertyAnimatorCompat$1: ViewPropertyAnimatorCompat$1(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void focus()
androidx.fragment.app.SpecialEffectsController$Operation: void complete()
io.flutter.embedding.android.FlutterActivity: void onResume()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getLayout(int)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.Region getTransparentRegion()
androidx.appcompat.app.AppCompatDelegateImpl: void onStart()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.String toString()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setTargetVelocity(float,float)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getGroupId()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
com.google.zxing.oned.rss.expanded.ExpandedPair: java.lang.String toString()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values()
com.google.zxing.PlanarYUVLuminanceSource: byte[] getMatrix()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: ViewPropertyAnimatorCompatSet$1(androidx.appcompat.view.ViewPropertyAnimatorCompatSet)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setAdapter(android.widget.ListAdapter)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode forBits(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)
androidx.appcompat.view.menu.MenuPopupHelper: void onDismiss()
com.journeyapps.barcodescanner.CameraPreview$5: void previewSized()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
androidx.appcompat.widget.ToolbarWidgetWrapper$1: ToolbarWidgetWrapper$1(androidx.appcompat.widget.ToolbarWidgetWrapper)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
io.flutter.plugin.platform.PlatformViewsController: boolean access$1202(io.flutter.plugin.platform.PlatformViewsController,boolean)
kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.ActionBarContextView$1: void onClick(android.view.View)
com.google.zxing.datamatrix.decoder.BitMatrixParser: BitMatrixParser(com.google.zxing.common.BitMatrix)
androidx.core.view.inputmethod.InputContentInfoCompat: android.content.ClipDescription getDescription()
androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.google.zxing.ResultPoint: boolean equals(java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.widget.ListPopupWindow: void setSelection(int)
androidx.appcompat.widget.SuggestionsAdapter: void onClick(android.view.View)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.Job getParent()
kotlin.internal.PlatformImplementations: PlatformImplementations()
androidx.fragment.app.FragmentManager: void dispatchLowMemory()
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
androidx.appcompat.view.menu.MenuWrapperICS: boolean performShortcut(int,android.view.KeyEvent,int)
io.flutter.plugin.platform.PlatformViewsController: void validateVirtualDisplayDimensions(int,int)
androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float getValueAt(long)
androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.zxing.datamatrix.decoder.Version: java.lang.String toString()
kotlinx.coroutines.Empty: boolean isActive()
androidx.fragment.app.FragmentTransitionCompat21: void removeTarget(java.lang.Object,android.view.View)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version getVersionForNumber(int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.ranges.IntProgression: java.lang.String toString()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.AssetFileDescriptor openRawResourceFd(int)
androidx.arch.core.internal.SafeIterableMap: int size()
kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.google.zxing.pdf417.decoder.ec.ModulusGF: int multiply(int,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.core.os.CancellationSignal getSignal()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar: boolean collapseActionView()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap getSampleTile()
com.google.zxing.client.android.BeepManager: void playBeepSoundAndVibrate()
kotlinx.coroutines.NodeList: NodeList()
kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: int addFailReason(long)
androidx.core.provider.FontsContractCompat$FontFamilyResult: FontsContractCompat$FontFamilyResult(int,androidx.core.provider.FontsContractCompat$FontInfo[])
kotlinx.coroutines.JobSupport: boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object)
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly getOne()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(int)
com.journeyapps.barcodescanner.CameraPreview: CameraPreview(android.content.Context,android.util.AttributeSet)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.Region getTransparentRegion()
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionResume(android.transition.Transition)
androidx.core.view.WindowInsetsControllerCompat$Impl: WindowInsetsControllerCompat$Impl()
com.google.zxing.oned.rss.DataCharacter: int getValue()
kotlin.collections.EmptyList: java.lang.Object[] toArray(java.lang.Object[])
androidx.window.embedding.ActivityFilter: java.lang.String toString()
androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)
androidx.tracing.Trace: void beginSection(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.zxing.oned.EAN8Reader: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()
androidx.loader.app.LoaderManagerImpl: LoaderManagerImpl(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)
androidx.appcompat.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
kotlinx.coroutines.InactiveNodeList: InactiveNodeList(kotlinx.coroutines.NodeList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet,int)
kotlin.collections.EmptyList: java.lang.Object remove(int)
androidx.appcompat.widget.SearchView$1: SearchView$1(androidx.appcompat.widget.SearchView)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: boolean validate()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.android.FlutterView$3: void accept(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.appcompat.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean onStateChanged(int[])
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
androidx.appcompat.view.menu.ActionMenuItem: void applyIconTint()
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int)
kotlin.collections.EmptyList: java.lang.Object[] toArray()
com.google.zxing.qrcode.decoder.Version: int getDimensionForVersion()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.appcompat.widget.SearchView: void postUpdateFocusedState()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()
androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)
com.journeyapps.barcodescanner.Size: int compareTo(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
kotlinx.coroutines.IncompleteStateBox: IncompleteStateBox(kotlinx.coroutines.Incomplete)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void mutate()
com.google.zxing.pdf417.PDF417ResultMetadata: void setAddressee(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.benjaminabel.vibration.Vibration: void vibrate(java.util.List,int,java.util.List)
androidx.fragment.app.FragmentTransaction: FragmentTransaction(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)
androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)
kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onChanged()
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()
kotlinx.coroutines.channels.AbstractChannel$Itr: void setResult(java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams$2: AlertController$AlertParams$2(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData: void applyMirroredCorrection(com.google.zxing.ResultPoint[])
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.app.WindowDecorActionBar$2: void onAnimationEnd(android.view.View)
androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.widget.ActionBarOverlayLayout: void dismissPopups()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4702(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.fragment.app.FragmentStateManager: void pause()
androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)
androidx.core.view.ContentInfoCompat: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: ViewPropertyAnimatorCompatSet()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
kotlinx.coroutines.internal.AtomicOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
androidx.savedstate.SavedStateRegistry$1: SavedStateRegistry$1(androidx.savedstate.SavedStateRegistry)
androidx.appcompat.widget.SearchView$3: SearchView$3(androidx.appcompat.widget.SearchView)
com.journeyapps.barcodescanner.DecoderThread: boolean access$300(com.journeyapps.barcodescanner.DecoderThread)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
kotlinx.coroutines.CancellableContinuation$DefaultImpls: java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$4: AppCompatDelegateImpl$4(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getItemId()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext)
androidx.fragment.app.FragmentAnim$2: void onAnimationRepeat(android.view.animation.Animation)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: int hashCode()
androidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer getContainer()
androidx.fragment.app.FragmentManager: void hideFragment(androidx.fragment.app.Fragment)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseBitmap(int,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList extractBatchTextEditingDeltas()
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.MenuItem getItem()
kotlin.coroutines.CombinedContext$toString$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
androidx.cursoradapter.widget.CursorAdapter: android.widget.Filter getFilter()
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: boolean isRemaining()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewDetached()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void onChange()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: SpecialEffectsController$Operation$LifecycleImpact(java.lang.String,int)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.google.zxing.common.reedsolomon.GenericGF: int inverse(int)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: ExecutorCoroutineDispatcher$Key$1()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.CancellableContinuationImpl: void resumeWith(java.lang.Object)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()
androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()
androidx.appcompat.view.menu.ListMenuItemView: void insertIconView()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
net.touchcapture.qr.flutterqr.QRView: void setScanAreaSize(double,double,double)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setBestExposure(android.hardware.Camera$Parameters,boolean)
com.journeyapps.barcodescanner.camera.AutoFocusManager: AutoFocusManager(android.hardware.Camera,com.journeyapps.barcodescanner.camera.CameraSettings)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: ListPopupWindow$PopupScrollListener(androidx.appcompat.widget.ListPopupWindow)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)
androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()
io.flutter.FlutterInjector$Builder: void fillDefaults()
io.flutter.embedding.android.FlutterView: boolean access$102(io.flutter.embedding.android.FlutterView,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(int)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.appcompat.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.core.provider.CallbackWithHandler: void onTypefaceRequestFailed(int)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
com.google.zxing.common.GlobalHistogramBinarizer: void initArrays(int)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int[] getBitCountForCodeword(int)
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
kotlin.random.Random: kotlin.random.Random access$getDefaultRandom$cp()
androidx.customview.view.AbsSavedState: AbsSavedState()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.content.ClipDescription getDescription()
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
androidx.core.widget.NestedScrollView: void onAttachedToWindow()
androidx.appcompat.graphics.drawable.DrawableWrapper: int[] getState()
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspotBounds(int,int,int,int)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
androidx.core.widget.NestedScrollView$SavedState: java.lang.String toString()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setupFlutterEngine()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.app.AppCompatDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.google.zxing.qrcode.decoder.DataMask$7: boolean isMasked(int,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.tracing.Trace: boolean isEnabled()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: StringsKt__StringsKt$rangesDelimitedBy$2(java.util.List,boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)
androidx.lifecycle.SingleGeneratedAdapterObserver: SingleGeneratedAdapterObserver(androidx.lifecycle.GeneratedAdapter)
androidx.fragment.app.FragmentManager: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
com.google.zxing.InvertedLuminanceSource: byte[] getMatrix()
com.google.zxing.qrcode.detector.FinderPatternFinder: float centerFromEnd(int[],int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.google.zxing.pdf417.decoder.DetectionResult: void adjustRowNumbers(int,int,com.google.zxing.pdf417.decoder.Codeword[])
kotlinx.coroutines.ChildContinuation: ChildContinuation(kotlinx.coroutines.CancellableContinuationImpl)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: FastOutLinearInInterpolator()
com.google.zxing.qrcode.detector.AlignmentPatternFinder: com.google.zxing.qrcode.detector.AlignmentPattern find()
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
kotlinx.coroutines.internal.AtomicOp: long getOpSequence()
androidx.collection.ArraySet: int indexOfNull()
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested(android.view.SearchEvent)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: AppCompatSpinner$DropDownAdapter(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
androidx.lifecycle.LifecycleRegistry$ObserverWithState: LifecycleRegistry$ObserverWithState(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int adjustCodewordStartColumn(com.google.zxing.common.BitMatrix,int,int,boolean,int,int)
androidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void update()
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setCheckable(boolean)
com.google.zxing.datamatrix.decoder.Version: Version(int,int,int,int,int,com.google.zxing.datamatrix.decoder.Version$ECBlocks)
androidx.arch.core.internal.SafeIterableMap$Entry: SafeIterableMap$Entry(java.lang.Object,java.lang.Object)
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setChecked(boolean)
androidx.fragment.app.FragmentTransition$2: void run()
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
androidx.fragment.app.FragmentStore: void dispatchStateChange(int)
com.google.zxing.pdf417.PDF417Reader: PDF417Reader()
androidx.collection.ArraySet: java.lang.String toString()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryTerminateWorker()
com.journeyapps.barcodescanner.ViewfinderView$1: void previewSized()
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(java.lang.Object)
com.google.zxing.qrcode.decoder.FormatInformation: byte getDataMask()
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.AppCompatPopupWindow: void init(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
com.google.zxing.datamatrix.decoder.Version: int getDataRegionSizeColumns()
com.google.zxing.common.BitMatrix: void setRow(int,com.google.zxing.common.BitArray)
androidx.appcompat.widget.AppCompatRadioButton: void drawableStateChanged()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()
androidx.core.content.res.ComplexColorCompat: int getColor()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAutoMirrored(boolean)
androidx.fragment.app.FragmentManager$10: FragmentManager$10(androidx.fragment.app.FragmentManager)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
com.google.zxing.common.detector.MathUtils: float distance(float,float,float,float)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: void run()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.ChannelResult$Closed: int hashCode()
com.google.zxing.common.DetectorResult: com.google.zxing.common.BitMatrix getBits()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.DropDownListView: DropDownListView(android.content.Context,boolean)
androidx.fragment.app.BackStackState: void writeToParcel(android.os.Parcel,int)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.appcompat.view.menu.MenuBuilder: void clearHeader()
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: AppCompatDelegateImpl$ListMenuDecorView(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
androidx.core.graphics.TypefaceCompatApi26Impl: TypefaceCompatApi26Impl()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(java.lang.CharSequence)
androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.MenuItem getItem()
androidx.lifecycle.SavedStateHandleController: void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
androidx.appcompat.widget.Toolbar$3: Toolbar$3(androidx.appcompat.widget.Toolbar)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])
androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
kotlinx.coroutines.CoroutineId: boolean equals(java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.appcompat.view.menu.ActionMenuItem: int getGroupId()
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long wo(long,long)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size access$002(com.journeyapps.barcodescanner.CameraPreview,com.journeyapps.barcodescanner.Size)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: int getApplyableNightMode()
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.activity.OnBackPressedCallback: boolean isEnabled()
androidx.appcompat.app.AppCompatDelegate: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)
androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: ActivityRecreator$LifecycleCheckCallbacks(android.app.Activity)
androidx.loader.app.LoaderManagerImpl: java.lang.String toString()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean onStateChanged(int[])
net.touchcapture.qr.flutterqr.QRView: boolean hasBackCamera()
com.google.zxing.oned.MultiFormatOneDReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4(java.lang.reflect.Constructor)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void resume()
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.DropDownListView: boolean hasWindowFocus()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getAlpha()
androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResumeWithException(java.lang.Throwable)
androidx.core.app.ActivityRecreator$3: ActivityRecreator$3(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.zxing.oned.UPCEANExtension5Support: int determineCheckDigit(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuPrepared()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.view.menu.MenuPopup: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.zxing.oned.UPCEReader: com.google.zxing.BarcodeFormat getBarcodeFormat()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object getSharedElementTransition()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.google.zxing.oned.rss.expanded.ExpandedRow: boolean isEquivalent(java.util.List)
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
androidx.fragment.app.FragmentManager$1: FragmentManager$1(androidx.fragment.app.FragmentManager,boolean)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()
com.google.zxing.common.PerspectiveTransform: void transformPoints(float[])
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel getKeyEventChannel()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View)
androidx.collection.LruCache: java.lang.String toString()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: FlutterRenderer$DisplayFeatureType(java.lang.String,int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix)
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.AppCompatPopupWindow: AppCompatPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType[] values()
androidx.collection.LongSparseArray: java.lang.String toString()
net.touchcapture.qr.flutterqr.QRView: void changeScanArea(double,double,double,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.SubMenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.widget.NestedScrollView: void endDrag()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void access$400(com.journeyapps.barcodescanner.camera.AutoFocusManager)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.zxing.common.detector.MathUtils: float distance(int,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getActionItems()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
androidx.core.view.ViewPropertyAnimatorCompat: void cancel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void clearColorFilter()
kotlinx.coroutines.internal.ThreadSafeHeap: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaObjectType(kotlin.reflect.KClass)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
com.google.zxing.common.HybridBinarizer: HybridBinarizer(com.google.zxing.LuminanceSource)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.journeyapps.barcodescanner.Size: boolean equals(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationEnd(android.animation.Animator)
androidx.core.view.ContentInfoCompat$Builder: ContentInfoCompat$Builder(android.content.ClipData,int)
androidx.appcompat.app.AlertController: void setTitle(java.lang.CharSequence)
androidx.appcompat.app.AlertController: void setView(int)
kotlin.random.Random$Default: int nextInt()
com.google.zxing.common.BitSource: int readBits(int)
com.google.zxing.oned.rss.AbstractRSSReader: int[] getDataCharacterCounters()
androidx.fragment.app.Fragment: void initState()
androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)
net.touchcapture.qr.flutterqr.QRView: void startScan(java.util.List,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.menu.CascadingMenuPopup: void setForceShowIcon(boolean)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.google.zxing.aztec.decoder.Decoder: byte readByte(boolean[],int)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Activity,boolean)
androidx.appcompat.view.SupportMenuInflater$MenuState: void addItem()
androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.fragment.app.FragmentManager: void dispatchPictureInPictureModeChanged(boolean)
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(java.lang.Integer)
androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isCheckable()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightStatusBars(boolean)
androidx.appcompat.widget.TooltipPopup: boolean isShowing()
com.google.zxing.pdf417.decoder.ec.ModulusGF: int exp(int)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.view.TextureRegistry$SurfaceTextureEntry,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)
com.journeyapps.barcodescanner.CaptureManager: android.app.Activity access$300(com.journeyapps.barcodescanner.CaptureManager)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
androidx.appcompat.widget.ToolbarWidgetWrapper: void initIndeterminateProgress()
androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)
androidx.appcompat.view.menu.MenuPopupHelper: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation,float)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationCancel(android.animation.Animator)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
androidx.appcompat.widget.DropDownListView: void positionSelectorCompat(int,android.view.View)
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder: java.lang.String parseInformation()
androidx.appcompat.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.SearchView: boolean launchSuggestion(int,int,java.lang.String)
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
kotlinx.coroutines.channels.Closed: void completeResumeReceive(java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: void setRootCause(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemImpl: int getGroupId()
kotlinx.coroutines.scheduling.WorkQueue: int getBufferSize$kotlinx_coroutines_core()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
androidx.appcompat.widget.ListPopupWindow: void setAnimationStyle(int)
com.google.zxing.oned.rss.AbstractRSSReader: void increment(int[],float[])
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)
io.flutter.plugin.platform.VirtualDisplayController$1$1: void run()
kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)
com.google.zxing.pdf417.PDF417ResultMetadata: void setSegmentIndex(int)
com.journeyapps.barcodescanner.RawImageData: int getHeight()
androidx.fragment.app.SpecialEffectsController$Operation: boolean isCanceled()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
androidx.activity.OnBackPressedCallback: void remove()
androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundResource(int)
androidx.appcompat.view.menu.MenuBuilder: void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.SearchView: boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
androidx.appcompat.view.menu.MenuAdapter: long getItemId(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
androidx.appcompat.app.AlertDialog: void onCreate(android.os.Bundle)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.fragment.app.FragmentManager: void moveToState(int,boolean)
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.appcompat.widget.AppCompatTextHelper: void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface)
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: void addWeightCode(java.lang.StringBuilder,int)
androidx.fragment.app.FragmentState: FragmentState(android.os.Parcel)
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void postRemoveActionBarHideOffset()
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
androidx.collection.LongSparseArray: void gc()
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void requestStop()
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()
com.google.zxing.datamatrix.decoder.Version: int getSymbolSizeColumns()
com.google.zxing.client.android.BeepManager: BeepManager(android.app.Activity)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.window.java.R: R()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)
com.google.zxing.client.android.DecodeHintManager: DecodeHintManager()
com.google.zxing.datamatrix.decoder.Version$ECBlocks: int getECCodewords()
kotlinx.coroutines.EventLoop: EventLoop()
androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
com.google.zxing.qrcode.decoder.FormatInformation: FormatInformation(int)
androidx.appcompat.widget.ForwardingListener: boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryUnpark()
androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)
com.journeyapps.barcodescanner.camera.FitCenterStrategy: FitCenterStrategy()
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Object newFamily()
androidx.appcompat.widget.SuggestionsAdapter: boolean hasStableIds()
com.google.zxing.oned.Code128Reader: int decodeCode(com.google.zxing.common.BitArray,int[],int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getViewFragment(android.view.View)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.journeyapps.barcodescanner.DecoderThread: DecoderThread(com.journeyapps.barcodescanner.camera.CameraInstance,com.journeyapps.barcodescanner.Decoder,android.os.Handler)
androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
com.google.zxing.datamatrix.DataMatrixReader: DataMatrixReader()
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.zxing.qrcode.decoder.DataBlock: com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel)
com.google.zxing.pdf417.decoder.DetectionResult: int getBarcodeColumnCount()
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: AppCompatDelegateImpl$ActionModeCallbackWrapperV9(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.CoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatSeekBarHelper: void jumpDrawablesToCurrentState()
com.journeyapps.barcodescanner.CameraPreview$2: void surfaceCreated(android.view.SurfaceHolder)
androidx.appcompat.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)
kotlinx.coroutines.AbstractCoroutine: void onCompletionInternal(java.lang.Object)
com.journeyapps.barcodescanner.ViewfinderView$1: void cameraClosed()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isInTouchMode()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeChangeListener()
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float getInterpolation(float)
kotlin.coroutines.CoroutineContext$plus$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.widget.NestedScrollView: void doScrollY(int)
androidx.appcompat.view.menu.ActionMenuItem: boolean isChecked()
com.journeyapps.barcodescanner.camera.CameraInstance: android.os.Handler access$300(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionExpand(android.view.MenuItem)
com.journeyapps.barcodescanner.RawImageData: int getWidth()
kotlinx.coroutines.JobSupport: void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.appcompat.widget.SearchView$8: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly)
androidx.appcompat.app.TwilightManager$TwilightState: TwilightManager$TwilightState()
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
androidx.appcompat.widget.AbsActionBarView: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean isPartialRow(java.lang.Iterable,java.lang.Iterable)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()
com.google.zxing.pdf417.PDF417ResultMetadata: void setChecksum(int)
androidx.appcompat.widget.AppCompatButton: void drawableStateChanged()
com.google.zxing.FormatException: FormatException()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
kotlinx.coroutines.channels.AbstractChannel$Itr: boolean hasNextResult(java.lang.Object)
kotlinx.coroutines.scheduling.Task: Task(long,kotlinx.coroutines.scheduling.TaskContext)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setTorch(android.hardware.Camera$Parameters,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.journeyapps.barcodescanner.CameraPreview: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
kotlin.Result$Companion: Result$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
kotlin.SynchronizedLazyImpl: java.lang.String toString()
kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)
androidx.fragment.app.FragmentManager: void setVisibleRemovingFragment(androidx.fragment.app.Fragment)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLevelChange(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.SupportActionModeWrapper: java.lang.Object getTag()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin access$1000(io.flutter.plugin.platform.PlatformViewsController)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityPaused(android.app.Activity)
com.google.zxing.qrcode.decoder.DataMask$7: DataMask$7(java.lang.String,int)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
androidx.appcompat.app.AlertController: int selectContentView()
androidx.core.view.ViewCompat: void setElevation(android.view.View,float)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.ListView getListView()
com.google.zxing.pdf417.PDF417ResultMetadata: void setLastSegment(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)
io.flutter.plugin.editing.TextEditingDelta: void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)
kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuItemImpl: boolean invoke()
androidx.fragment.app.FragmentTransition$1: FragmentTransition$1(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.appcompat.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)
kotlinx.coroutines.CancellableContinuationImpl: void detachChildIfNonResuable()
androidx.appcompat.widget.ActionMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: FragmentManager$FragmentIntentSenderContract()
androidx.appcompat.view.ActionBarPolicy: ActionBarPolicy(android.content.Context)
androidx.activity.ComponentActivity: void initViewTreeOwners()
com.journeyapps.barcodescanner.DecoderThread: void requestNextPreview()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: boolean isShowing()
androidx.core.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawablesTints()
kotlinx.coroutines.internal.LockFreeTaskQueue: int getSize()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.google.zxing.pdf417.decoder.DetectionResult)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentFactory: FragmentFactory()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
androidx.core.content.res.ComplexColorCompat: void setColor(int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcelable)
com.journeyapps.barcodescanner.CaptureManager: java.lang.String access$500()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void dispose()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
kotlin.coroutines.CombinedContext$toString$1: java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void reverse()
io.flutter.view.AccessibilityBridge$1: void onTap(int)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getBit(int,byte[])
androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentManager: void attachFragment(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.appcompat.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.provider.FontProvider: boolean equalsByteArrayList(java.util.List,java.util.List)
io.flutter.embedding.android.FlutterSplashView$3: FlutterSplashView$3(io.flutter.embedding.android.FlutterSplashView)
com.google.zxing.oned.UPCAReader: com.google.zxing.BarcodeFormat getBarcodeFormat()
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask valueOf(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: boolean canShowTextInput()
com.google.zxing.pdf417.PDF417Reader: void reset()
androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()
androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)
kotlin.collections.ArraysKt___ArraysKt: char single(char[])
kotlinx.coroutines.scheduling.LimitingDispatcher: LimitingDispatcher(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,java.lang.String,int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.fragment.app.FragmentController: void dispatchCreate()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2902(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
androidx.core.view.ContentInfoCompat: ContentInfoCompat(androidx.core.view.ContentInfoCompat$Builder)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.graphics.drawable.StateListDrawable: boolean isStateful()
androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)
kotlin.Pair: java.lang.String toString()
androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)
com.google.zxing.oned.rss.AbstractRSSReader: int[] getEvenCounts()
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: com.google.zxing.common.DecoderResult decode(int[],java.lang.String)
androidx.fragment.app.FragmentManager: void clearFragmentResult(java.lang.String)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderView(android.view.View)
kotlinx.coroutines.JobNode: java.lang.String toString()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
androidx.appcompat.app.WindowDecorActionBar: void showForSystem()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(int)
io.flutter.view.AccessibilityBridge: void access$1200(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
com.google.zxing.oned.UPCEANReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map)
com.journeyapps.barcodescanner.camera.CameraThread: void checkRunning()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.EventLoopImplBase: boolean isCompleted()
kotlinx.coroutines.scheduling.CoroutineScheduler: int createNewWorker()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.fragment.app.FragmentStateManager: void detach()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlinx.coroutines.JobSupport: void initParentJob(kotlinx.coroutines.Job)
androidx.appcompat.view.menu.MenuItemImpl$1: void onActionProviderVisibilityChanged(boolean)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.app.AppCompatActivity: void onStop()
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError()
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.zxing.BinaryBitmap: java.lang.String toString()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
kotlin.ranges.IntProgression$Companion: IntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CoroutineId: java.lang.String updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.collections.EmptyMap: int size()
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.zxing.PlanarYUVLuminanceSource: byte[] getRow(int,byte[])
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: AnimatedStateListDrawableCompat$AnimatableTransition(android.graphics.drawable.Animatable)
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isScanInverted()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isStillIsoIec646(int)
kotlinx.coroutines.scheduling.DefaultScheduler: void close()
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)
androidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.appcompat.widget.ActionMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
kotlinx.coroutines.InvokeOnCompletion: void invoke(java.lang.Throwable)
com.google.zxing.common.GlobalHistogramBinarizer: com.google.zxing.common.BitMatrix getBlackMatrix()
androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.view.AccessibilityBridge: boolean access$500(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancel(java.lang.Throwable)
com.journeyapps.barcodescanner.DecoderResultPointCallback: void foundPossibleResultPoint(com.google.zxing.ResultPoint)
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: ErrorCorrectionLevel(java.lang.String,int,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration)
com.google.zxing.pdf417.decoder.Codeword: int getWidth()
com.journeyapps.barcodescanner.DecoratedBarcodeView: void pause()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
com.google.zxing.pdf417.detector.PDF417DetectorResult: PDF417DetectorResult(com.google.zxing.common.BitMatrix,java.util.List)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
androidx.fragment.app.FragmentStateManager: void activityCreated()
androidx.fragment.app.FragmentManager: void invalidateMenuForFragment(androidx.fragment.app.Fragment)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlin.jvm.internal.ClassReference: int hashCode()
androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()
io.flutter.view.VsyncWaiter: void init()
androidx.appcompat.widget.AppCompatTextHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getOpacity()
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.EventLoopImplBase: void resetAll()
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
com.journeyapps.barcodescanner.camera.CameraManager: void close()
androidx.appcompat.view.menu.CascadingMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
net.touchcapture.qr.flutterqr.QRView$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.zxing.common.reedsolomon.GenericGFPoly: int getDegree()
androidx.appcompat.view.SupportActionModeWrapper: SupportActionModeWrapper(android.content.Context,androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.NonDisposableHandle: void dispose()
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
com.google.zxing.client.android.InactivityTimer$PowerStatusReceiver: InactivityTimer$PowerStatusReceiver(com.google.zxing.client.android.InactivityTimer)
androidx.appcompat.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)
androidx.appcompat.view.menu.CascadingMenuPopup: void setShowTitle(boolean)
androidx.appcompat.view.ActionBarPolicy: boolean showsOverflowMenuButton()
androidx.core.graphics.Insets: int hashCode()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)
androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)
androidx.appcompat.widget.ListPopupWindow: boolean isShowing()
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean)
io.flutter.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.journeyapps.barcodescanner.CaptureManager$2: void previewStarted()
androidx.core.view.ViewCompat$5: ViewCompat$5(int,java.lang.Class,int)
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: void onAnimationEnd(android.view.View)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.String invoke(kotlin.ranges.IntRange)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void dismiss()
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)
androidx.appcompat.view.menu.ActionMenuItem: ActionMenuItem(android.content.Context,int,int,int,int,java.lang.CharSequence)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
kotlinx.coroutines.channels.ArrayChannel: ArrayChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
com.google.zxing.pdf417.decoder.DetectionResult: boolean adjustRowNumber(com.google.zxing.pdf417.decoder.Codeword,com.google.zxing.pdf417.decoder.Codeword)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()
com.google.zxing.common.BitSource: int getByteOffset()
androidx.fragment.app.FragmentTransitionImpl$3: void run()
androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.graphics.drawable.DrawableWrapper: DrawableWrapper(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRatingBar: void onMeasure(int,int)
com.google.zxing.ResultPoint: java.lang.String toString()
net.touchcapture.qr.flutterqr.Shared: Shared()
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$900(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.DisplayConfiguration getDisplayConfiguration()
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)
androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)
androidx.appcompat.app.AlertDialog: android.widget.ListView getListView()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object getResult()
androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)
com.journeyapps.barcodescanner.Size: com.journeyapps.barcodescanner.Size scaleCrop(com.journeyapps.barcodescanner.Size)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: java.lang.String systemProp(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$5: AppCompatDelegateImpl$5(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
androidx.appcompat.app.AppCompatDelegateImpl$2: void run()
androidx.loader.app.LoaderManagerImpl: void markForRedelivery()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getOrder()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.DataCharacter getLeftChar()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)
androidx.fragment.app.FragmentState: int describeContents()
androidx.fragment.app.SuperNotCalledException: SuperNotCalledException(java.lang.String)
androidx.appcompat.widget.TooltipPopup: android.view.View getAppRootView(android.view.View)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController)
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)
com.google.zxing.client.android.InactivityTimer$PowerStatusReceiver: void onReceive(android.content.Context,android.content.Intent)
kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)
androidx.fragment.app.LogWriter: LogWriter(java.lang.String)
kotlinx.coroutines.CompletionHandlerException: CompletionHandlerException(java.lang.String,java.lang.Throwable)
androidx.core.app.ActivityRecreator$1: void run()
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseCache()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
androidx.appcompat.view.menu.MenuDialogHelper: void onClick(android.content.DialogInterface,int)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getResourceId()
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: SupportMenuInflater$InflatedOnMenuItemClickListener(java.lang.Object,java.lang.String)
androidx.core.view.inputmethod.InputConnectionCompat$2: InputConnectionCompat$2(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
androidx.window.core.Bounds: android.graphics.Rect toRect()
com.google.zxing.oned.UPCAReader: UPCAReader()
kotlinx.coroutines.JobSupport: void promoteEmptyToNodeList(kotlinx.coroutines.Empty)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationCancel(android.view.View)
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void clearColorFilter()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: int getLastIndex(java.util.List)
androidx.fragment.app.Fragment: int getPopEnterAnim()
androidx.fragment.app.FragmentState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
androidx.fragment.app.SpecialEffectsController: void updateFinalState()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithDeltas(int,java.util.ArrayList)
androidx.fragment.app.Fragment: void setFocusedView(android.view.View)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
androidx.appcompat.widget.SuggestionsAdapter: SuggestionsAdapter(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStopped()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationStart(android.view.View)
kotlin.ranges.RangesKt___RangesKt: int coerceAtLeast(int,int)
androidx.fragment.app.BackStackRecord: boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)
androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)
kotlinx.coroutines.channels.ClosedSendChannelException: ClosedSendChannelException(java.lang.String)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat(android.view.View$AccessibilityDelegate)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
androidx.fragment.app.DefaultSpecialEffectsController: java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation)
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
androidx.appcompat.app.AppCompatDialog: void setTitle(java.lang.CharSequence)
androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)
androidx.fragment.app.SpecialEffectsController$Operation: void cancel()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEvent(android.view.View,int)
androidx.appcompat.widget.Toolbar: void onMeasure(int,int)
androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationEnd(android.view.View)
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
com.google.zxing.qrcode.decoder.Version: int[] getAlignmentPatternCenters()
androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
com.google.zxing.pdf417.detector.Detector: com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,int,int)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Object)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void bindTab(androidx.appcompat.app.ActionBar$Tab)
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: ForwardingListener$TriggerLongPress(androidx.appcompat.widget.ForwardingListener)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setVisibility(int)
androidx.fragment.app.FragmentAnim$1: FragmentAnim$1(androidx.fragment.app.Fragment)
com.google.zxing.qrcode.decoder.DataMask$8: boolean isMasked(int,int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $values()
androidx.core.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean)
androidx.appcompat.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()
com.google.zxing.oned.UPCAReader: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
com.google.zxing.qrcode.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map)
com.journeyapps.barcodescanner.BarcodeResult: java.lang.String toString()
androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
io.flutter.embedding.android.FlutterView: void convertToImageView()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet,int)
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderFactory getDecoderFactory()
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.ResultPoint[] detect()
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()
kotlinx.coroutines.channels.AbstractChannel: void onReceiveDequeued()
kotlinx.coroutines.channels.ChannelResult$Failed: java.lang.String toString()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.ThreadLocalEventLoop: void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop)
kotlin.collections.EmptyMap: java.util.Collection getValues()
kotlin.Pair: int hashCode()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
com.journeyapps.barcodescanner.camera.CameraInstance: void setReadyHandler(android.os.Handler)
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint getTopLeft()
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumbers()
androidx.appcompat.view.menu.ListMenuItemView: void insertCheckBox()
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getCountry(byte[])
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(java.lang.Integer)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
androidx.appcompat.app.AlertController: boolean onKeyDown(int,android.view.KeyEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.appcompat.widget.ListPopupWindow: void dismiss()
net.touchcapture.qr.flutterqr.QRView: void getSystemFeatures(io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.String toString()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
kotlin.collections.EmptySet: boolean isEmpty()
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onInvalidated()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)
androidx.core.provider.RequestExecutor: void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractChannel)
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.core.widget.TextViewCompat$OreoCallback: java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void setOverlapAnchor(boolean)
androidx.lifecycle.ClassesInfoCache$MethodReference: int hashCode()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getQueueDebugStateString()
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext()
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
kotlin.ranges.IntProgression: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
androidx.window.core.Bounds: boolean isEmpty()
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder: int checkWeight(int)
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
androidx.appcompat.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)
com.google.zxing.oned.Code128Reader: Code128Reader()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue()
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: boolean isSecondDigitFNC1()
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.BaseMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State from(int)
com.journeyapps.barcodescanner.CameraPreview: void setTorch(boolean)
kotlinx.coroutines.EventLoop: long delta(boolean)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean)
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)
com.google.zxing.common.BitMatrix: void rotate180()
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
androidx.appcompat.app.WindowDecorActionBar: void hideForSystem()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
androidx.fragment.app.FragmentAnim: int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
androidx.core.view.KeyEventDispatcher: android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
com.google.zxing.pdf417.decoder.BoundingBox: int getMaxY()
androidx.appcompat.widget.TooltipPopup: void hide()
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1)
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onStateChange(int[])
com.google.zxing.oned.rss.FinderPattern: boolean equals(java.lang.Object)
androidx.core.widget.ListViewAutoScrollHelper: ListViewAutoScrollHelper(android.widget.ListView)
kotlin.text.StringsKt__IndentKt: int indentWidth$StringsKt__IndentKt(java.lang.String)
androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersVertical(android.graphics.Canvas)
androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: ListMenuPresenter$MenuAdapter(androidx.appcompat.view.menu.ListMenuPresenter)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOriginalOffset(int)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.view.NestedScrollingChildHelper: int[] getTempNestedScrollConsumed()
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl: java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int)
androidx.arch.core.executor.ArchTaskExecutor$1: void execute(java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher()
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
androidx.appcompat.app.AlertController$AlertParams$4: AlertController$AlertParams$4(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
androidx.fragment.app.FragmentTransition: void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.drawable.Drawable getIcon()
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean needsMirroring()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
com.google.zxing.oned.UPCEANReader: boolean checkChecksum(java.lang.String)
com.journeyapps.barcodescanner.CameraPreview: void onRestoreInstanceState(android.os.Parcelable)
androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.internal.ContextScope: java.lang.String toString()
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: void invoke(java.lang.Throwable)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int)
kotlinx.coroutines.internal.DispatchedContinuation: void awaitReusability()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key: DownstreamExceptionElement$Key()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Void alreadyResumedError(java.lang.Object)
androidx.fragment.app.FragmentStore: java.util.List getFragments()
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.core.view.ViewCompat$2: java.lang.Object frameworkGet(android.view.View)
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.app.AlertController: boolean onKeyUp(int,android.view.KeyEvent)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int)
io.flutter.plugin.platform.PlatformViewsController$1: void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable)
kotlinx.coroutines.JobNode: boolean isActive()
com.journeyapps.barcodescanner.camera.CameraInstance: boolean access$602(com.journeyapps.barcodescanner.camera.CameraInstance,boolean)
androidx.fragment.app.FragmentTransitionCompat21$1: FragmentTransitionCompat21$1(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
io.flutter.embedding.android.FlutterTextureView: void pause()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.internal.Symbol updateBufferSize(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)
androidx.appcompat.app.AppCompatDialog: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int getBitValue(int[])
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String)
androidx.appcompat.widget.Toolbar$2: Toolbar$2(androidx.appcompat.widget.Toolbar)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: int getChangingConfigurations()
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,java.lang.Class)
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: LockFreeTaskQueueCore(int,boolean)
kotlinx.coroutines.Active: Active()
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean haveMultiplyConfirmedCenters()
androidx.core.widget.NestedScrollView: void initVelocityTrackerIfNotExists()
androidx.appcompat.widget.AppCompatImageHelper: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)
kotlinx.coroutines.LazyStandaloneCoroutine: void onStart()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void adjustOddEvenCounts(int)
com.google.zxing.oned.rss.expanded.ExpandedPair: boolean equalsOrNull(java.lang.Object,java.lang.Object)
androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
androidx.appcompat.view.menu.MenuPopup: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
androidx.appcompat.widget.AppCompatSpinner: void showPopup()
androidx.fragment.app.FragmentManager: void dispatchStop()
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenTransitionNeededNow()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean getPadding(android.graphics.Rect)
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightNavigationBars(boolean)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMaxTextSize()
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
io.flutter.embedding.android.FlutterImageView: void closeCurrentImage()
androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.app.AlertController$1: void onClick(android.view.View)
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
net.touchcapture.qr.flutterqr.QRView$1: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.JobSupport$Finishing: JobSupport$Finishing(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)
androidx.fragment.app.FragmentManager$9: void onActivityResult(androidx.activity.result.ActivityResult)
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
androidx.fragment.app.SpecialEffectsController: SpecialEffectsController(android.view.ViewGroup)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionCancel(android.transition.Transition)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
kotlinx.coroutines.ChildHandleNode: ChildHandleNode(kotlinx.coroutines.ChildJob)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.journeyapps.barcodescanner.CaptureManager: CaptureManager(android.app.Activity,com.journeyapps.barcodescanner.DecoratedBarcodeView)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState()
androidx.fragment.app.DefaultSpecialEffectsController$2: void onAnimationEnd(android.animation.Animator)
androidx.collection.ArraySet$1: java.util.Map colGetMap()
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: FontResourcesParserCompat$FontFamilyFilesResourceEntry(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)
androidx.fragment.app.SpecialEffectsController$1: SpecialEffectsController$1(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)
kotlinx.coroutines.channels.RendezvousChannel: RendezvousChannel(kotlin.jvm.functions.Function1)
kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext getContext()
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)
androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void computeScrollDelta()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
kotlin.internal.PlatformImplementations$ReflectThrowable: PlatformImplementations$ReflectThrowable()
androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)
com.google.zxing.oned.rss.expanded.decoders.DecodedChar: boolean isFNC1()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
androidx.fragment.app.FragmentManager$5: FragmentManager$5(androidx.fragment.app.FragmentManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void storeRow(int,boolean)
androidx.fragment.app.FragmentTransaction: void addOp(androidx.fragment.app.FragmentTransaction$Op)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: DetectionResultRowIndicatorColumn(com.google.zxing.pdf417.decoder.BoundingBox,boolean)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.ListView getListView()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void applyButtonTint()
androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
kotlin.collections.EmptySet: boolean add(java.lang.Object)
androidx.appcompat.view.menu.StandardMenuPopup: boolean tryShow()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.fragment.app.DefaultSpecialEffectsController$9: void run()
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getStableInsets()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1(java.util.Iterator)
com.google.zxing.oned.rss.expanded.ExpandedPair: boolean mustBeLast()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.lang.String toString(java.util.Collection)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValueLabelHint()
kotlin.collections.EmptyMap: void putAll(java.util.Map)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData: QRCodeDecoderMetaData(boolean)
androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)
androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)
kotlinx.coroutines.EventLoop: void incrementUseCount(boolean)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent getIntent()
androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
kotlin.collections.EmptyList: java.lang.Object set(int,java.lang.Object)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView$Companion: CustomFramingRectBarcodeView$Companion()
androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampDownDuration(int)
androidx.appcompat.view.menu.MenuBuilder: void removeItem(int)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.view.menu.CascadingMenuPopup: int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getBufferDebugString()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback)
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
androidx.lifecycle.LiveData$LifecycleBoundObserver: LiveData$LifecycleBoundObserver(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
androidx.core.view.ViewCompat: boolean isScreenReaderFocusable(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
androidx.appcompat.app.AlertController: android.widget.ListView getListView()
kotlin.ranges.IntRange: java.lang.String toString()
androidx.core.graphics.TypefaceCompatBaseImpl: TypefaceCompatBaseImpl()
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)
androidx.fragment.app.FragmentManager: void dispatchPrimaryNavigationFragmentChanged()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void initTempTextPaint(int)
androidx.appcompat.view.menu.ListMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
androidx.fragment.app.BackStackState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager)
com.google.zxing.common.HybridBinarizer: void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix)
kotlin.KotlinNothingValueException: KotlinNothingValueException()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getRowCountLowerPart()
androidx.activity.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)
kotlin.coroutines.jvm.internal.DebugMetadataKt: kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.appcompat.widget.DropDownListView: void setPressedItem(android.view.View,int,float,float)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String)
kotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: InputContentInfoCompat$InputContentInfoCompatBaseImpl(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object invokeSuspend(java.lang.Object)
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
androidx.core.view.WindowInsetsControllerCompat$Impl23: WindowInsetsControllerCompat$Impl23(android.view.Window,android.view.View)
androidx.core.provider.CallbackWithHandler: CallbackWithHandler(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
com.journeyapps.barcodescanner.CameraPreview$3: CameraPreview$3(com.journeyapps.barcodescanner.CameraPreview)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core()
androidx.appcompat.app.LayoutIncludeDetector: LayoutIncludeDetector()
net.touchcapture.qr.flutterqr.QRView: QRView(android.content.Context,io.flutter.plugin.common.BinaryMessenger,int,java.util.HashMap)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.appcompat.view.menu.SubMenuBuilder: SubMenuBuilder(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
com.google.zxing.oned.OneDReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.core.widget.TextViewOnReceiveContentListener: androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onStateChange(int[])
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
androidx.collection.SimpleArrayMap: void clear()
androidx.appcompat.widget.ActionBarOverlayLayout: void addActionBarHideOffset()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,int)
kotlin.collections.EmptyList: boolean remove(java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet,int)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: DrawableContainer$BlockInvalidateCallback()
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean)
com.google.zxing.oned.rss.FinderPattern: FinderPattern(int,int[],int,int,int)
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.widget.NestedScrollView: boolean canScroll()
androidx.appcompat.graphics.drawable.DrawableContainer: int getAlpha()
androidx.core.view.ViewCompat$4: java.lang.Object frameworkGet(android.view.View)
kotlinx.coroutines.EventLoopImplBase: void setCompleted(boolean)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void start()
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
androidx.appcompat.widget.TooltipCompatHandler: void setTooltipText(android.view.View,java.lang.CharSequence)
com.google.zxing.client.android.DecodeFormatManager: java.util.Set parseDecodeFormats(java.lang.Iterable,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object pollInternal()
net.touchcapture.qr.flutterqr.QRView: int convertDpToPixels(double)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.DropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.core.graphics.TypefaceCompatApi21Impl: java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.fragment.app.FragmentManager$9: FragmentManager$9(androidx.fragment.app.FragmentManager)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object next()
androidx.core.app.TaskStackBuilder: TaskStackBuilder(android.content.Context)
kotlin.collections.EmptyList: int hashCode()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)
com.journeyapps.barcodescanner.CaptureManager$1: void barcodeResult(com.journeyapps.barcodescanner.BarcodeResult)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: WindowInfoRepositoryCallbackAdapterWrapper(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
com.journeyapps.barcodescanner.BarcodeView: void initialize()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean)
kotlinx.coroutines.Unconfined: Unconfined()
androidx.core.view.DisplayCutoutCompat: java.lang.String toString()
kotlinx.coroutines.CommonPool: java.util.concurrent.ExecutorService createPool()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.fragment.app.FragmentActivity$HostCallbacks: java.lang.Object onGetHost()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: ExceptionsConstuctorKt$tryCopyException$5$1()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
kotlinx.coroutines.JobSupport: java.lang.String toString()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.view.menu.StandardMenuPopup: void show()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$8: void run()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.widget.NestedScrollView: void stopNestedScroll(int)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
com.google.zxing.pdf417.PDF417ResultMetadata: void setTimestamp(long)
androidx.core.provider.FontRequestWorker$TypefaceResult: FontRequestWorker$TypefaceResult(android.graphics.Typeface)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.appcompat.view.menu.MenuItemImpl: boolean showsTextAsAction()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
io.flutter.plugin.platform.PlatformViewsController: void attachToView(io.flutter.embedding.android.FlutterView)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.zxing.common.DecoderResult: java.lang.String getECLevel()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalBlockingWork(boolean)
com.google.zxing.oned.rss.expanded.ExpandedRow: ExpandedRow(java.util.List,int,boolean)
androidx.fragment.app.DefaultSpecialEffectsController: void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)
io.flutter.view.AccessibilityBridge: int access$7000()
io.flutter.plugin.platform.PlatformViewsController$1: void ensureValidAndroidVersion(int)
androidx.fragment.app.DefaultSpecialEffectsController$6: void run()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManager: android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
kotlin.collections.EmptyMap: boolean isEmpty()
androidx.appcompat.view.menu.ListMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
com.google.zxing.oned.UPCEANReader: int[] findStartGuardPattern(com.google.zxing.common.BitArray)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()
kotlin.jvm.internal.Intrinsics: void throwJavaNpe()
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: int getFirstDigit()
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
kotlin.coroutines.AbstractCoroutineContextKey: boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.fragment.app.BackStackState$1: java.lang.Object[] newArray(int)
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int[] sampleBitCounts(int[])
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.AlertController$AlertParams: AlertController$AlertParams(android.content.Context)
kotlinx.coroutines.scheduling.CoroutineScheduler: void shutdown(long)
androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)
com.google.zxing.qrcode.decoder.BitMatrixParser: byte[] readCodewords()
com.google.zxing.aztec.detector.Detector$Point: Detector$Point(int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalCpuWork()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
io.flutter.embedding.android.FlutterActivity: void release()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.window.core.Bounds: java.lang.String toString()
androidx.core.view.ViewPropertyAnimatorListenerAdapter: ViewPropertyAnimatorListenerAdapter()
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.appcompat.app.AlertController$CheckedItemAdapter: AlertController$CheckedItemAdapter(android.content.Context,int,int,java.lang.CharSequence[])
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)
kotlinx.coroutines.InactiveNodeList: boolean isActive()
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Closed getClosedForSend()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue)
androidx.appcompat.widget.SearchView$8: SearchView$8(androidx.appcompat.widget.SearchView)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
androidx.core.view.inputmethod.EditorInfoCompat: void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
io.flutter.plugin.platform.VirtualDisplayController$1$1: VirtualDisplayController$1$1(io.flutter.plugin.platform.VirtualDisplayController$1)
androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.core.view.ViewCompat$5: java.lang.Object frameworkGet(android.view.View)
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.os.Handler access$200(com.journeyapps.barcodescanner.camera.AutoFocusManager)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onLevelChange(int)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: FragmentActivity$HostCallbacks(androidx.fragment.app.FragmentActivity)
androidx.activity.ComponentActivity: void ensureViewModelStore()
androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.SearchView$9: void onNothingSelected(android.widget.AdapterView)
com.journeyapps.barcodescanner.Decoder: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
kotlinx.coroutines.Active: java.lang.String toString()
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
com.journeyapps.barcodescanner.camera.CameraManager: android.hardware.Camera$Parameters getDefaultCameraParameters()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: void onGlobalLayout()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean performClick()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)
com.google.zxing.BinaryBitmap: int getHeight()
androidx.appcompat.app.AlertController: void setupContent(android.view.ViewGroup)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setConstantSize(boolean)
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context)
net.touchcapture.qr.flutterqr.QRView: io.flutter.plugin.common.MethodChannel access$getChannel$p(net.touchcapture.qr.flutterqr.QRView)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView: void performCollapse()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: ExecutorCoroutineDispatcherImpl(java.util.concurrent.Executor)
com.google.zxing.oned.Code39Reader: char patternToChar(int)
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(int)
androidx.appcompat.view.menu.ListMenuItemView: void setShortcut(boolean,char)
kotlin.collections.EmptyIterator: java.lang.Object next()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.appcompat.widget.TooltipCompatHandler$2: TooltipCompatHandler$2(androidx.appcompat.widget.TooltipCompatHandler)
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.journeyapps.barcodescanner.CameraPreview: void resume()
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence getHintText()
kotlin.internal.PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
kotlinx.coroutines.channels.ChannelResult$Failed: ChannelResult$Failed()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.activity.ComponentActivity$1: void run()
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean getANDROID_DETECTED()
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)
androidx.appcompat.view.menu.MenuAdapter: java.lang.Object getItem(int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOffset(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)
androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)
androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
kotlinx.coroutines.NodeList: boolean isActive()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalClear()
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
androidx.collection.LongSparseArray: long keyAt(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float)
androidx.activity.ComponentActivity: ComponentActivity()
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onGlobalLayout()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[])
androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isAutoTorchEnabled()
androidx.fragment.app.DefaultSpecialEffectsController$4$1: void run()
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int,int)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: ActivityResultContracts$StartActivityForResult()
androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.view.menu.MenuWrapperICS: void removeGroup(int)
io.flutter.embedding.android.FlutterActivity: void onPause()
androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)
androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.zxing.oned.Code93Reader: Code93Reader()
androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void mergeRecoveredTraces(java.lang.StackTraceElement[],java.util.ArrayDeque)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
androidx.core.os.CancellationSignal: CancellationSignal()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: FragmentManager$StartEnterTransitionListener(androidx.fragment.app.BackStackRecord,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)
kotlinx.coroutines.AbstractCoroutine: void onCompleted(java.lang.Object)
com.journeyapps.barcodescanner.CaptureManager$1: void possibleResultPoints(java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)
androidx.fragment.app.Fragment: void onDestroyView()
androidx.activity.ComponentActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: int atMost(int)
com.google.zxing.maxicode.MaxiCodeReader: MaxiCodeReader()
kotlin.collections.EmptySet: java.util.Iterator iterator()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: AppCompatSpinner$DropdownPopup$1(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner)
com.google.zxing.oned.UPCEANExtensionSupport: UPCEANExtensionSupport()
com.google.zxing.common.BitArray: int getNextUnset(int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
androidx.fragment.app.SpecialEffectsController$Operation$State: SpecialEffectsController$Operation$State(java.lang.String,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean)
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: CursorAdapter$MyDataSetObserver(androidx.cursoradapter.widget.CursorAdapter)
kotlinx.coroutines.channels.AbstractChannel: void onReceiveEnqueued()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
com.journeyapps.barcodescanner.DecoderThread$2: DecoderThread$2(com.journeyapps.barcodescanner.DecoderThread)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setTorchOff()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
kotlinx.coroutines.channels.ArrayChannel: void ensureCapacity(int)
androidx.appcompat.view.menu.CascadingMenuPopup: void setGravity(int)
androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
kotlin.collections.EmptySet: boolean remove(java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.res.ColorStateList getIconTintList()
androidx.core.graphics.drawable.WrappedDrawableApi14: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)
androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
kotlin.Unit: java.lang.String toString()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parseFile(java.io.BufferedReader)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)
kotlinx.coroutines.BlockingEventLoop: BlockingEventLoop(java.lang.Thread)
com.journeyapps.barcodescanner.ViewfinderView: void setMaskColor(int)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.google.zxing.MultiFormatReader: void reset()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraManager access$100(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.appcompat.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.journeyapps.barcodescanner.camera.CameraManager: boolean isCameraRotated()
net.touchcapture.qr.flutterqr.QRView: boolean hasFlash()
io.flutter.view.AccessibilityBridge$StringAttributeType: AccessibilityBridge$StringAttributeType(java.lang.String,int)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: int compare(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()
kotlin.coroutines.jvm.internal.CompletedContinuation: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
androidx.fragment.app.FragmentState$1: java.lang.Object[] newArray(int)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setIndex(int)
com.journeyapps.barcodescanner.CaptureManager: void onDestroy()
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable createCopy()
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()
com.google.zxing.pdf417.PDF417ResultMetadata: void setSegmentCount(int)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isStateful()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformHeight(int,int)
androidx.core.provider.RequestExecutor$ReplyRunnable$1: RequestExecutor$ReplyRunnable$1(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object)
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void onStartEnterTransition()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
androidx.appcompat.widget.MenuPopupWindow: void setEnterTransition(java.lang.Object)
com.journeyapps.barcodescanner.RawImageData: com.journeyapps.barcodescanner.RawImageData cropAndScale(android.graphics.Rect,int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDown(int,android.view.KeyEvent)
kotlin.ranges.IntRange$Companion: IntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()
androidx.fragment.app.FragmentManager: boolean dispatchContextItemSelected(android.view.MenuItem)
androidx.appcompat.app.AlertController$AlertParams$2: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray)
kotlinx.coroutines.JobCancellationException: int hashCode()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()
androidx.appcompat.widget.SearchView: int getInputType()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.appcompat.view.menu.MenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager getWindowManager()
kotlinx.coroutines.channels.Channel$Factory: Channel$Factory()
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
kotlinx.coroutines.DispatchedCoroutine: void afterResume(java.lang.Object)
net.touchcapture.qr.flutterqr.QRView: net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView initBarCodeView()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
androidx.appcompat.widget.Toolbar$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.menu.MenuItemImpl: int getOrder()
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()
androidx.fragment.app.DefaultSpecialEffectsController: void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation)
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean elementWiseEquals(java.lang.StackTraceElement,java.lang.StackTraceElement)
androidx.fragment.app.FragmentManager: java.util.Map access$100(androidx.fragment.app.FragmentManager)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.customview.view.AbsSavedState$2: AbsSavedState$2()
kotlinx.coroutines.internal.LockFreeLinkedListKt: kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView: void onAttachedToWindow()
com.google.zxing.datamatrix.detector.Detector: void increment(java.util.Map,com.google.zxing.ResultPoint)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel access$1400(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()
com.journeyapps.barcodescanner.ViewfinderView: void addPossibleResultPoint(com.google.zxing.ResultPoint)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
androidx.appcompat.widget.MenuPopupWindow: void setExitTransition(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState)
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: SuggestionsAdapter$ChildViewCache(android.view.View)
com.google.zxing.oned.rss.RSSUtils: int getRSSvalue(int[],int,boolean)
kotlin.ranges.IntProgression: int getFirst()
androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3(java.lang.reflect.Constructor)
androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)
com.google.zxing.BinaryBitmap: com.google.zxing.common.BitMatrix getBlackMatrix()
com.journeyapps.barcodescanner.camera.CameraInstance: void validateOpen()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
com.google.zxing.common.BitArray: java.lang.Object clone()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.KeyboardManager,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionEnd(android.transition.Transition)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI[] values()
androidx.fragment.app.FragmentTransitionImpl$1: void run()
kotlin.collections.EmptySet: boolean addAll(java.util.Collection)
androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()
com.journeyapps.barcodescanner.BarcodeResult: BarcodeResult(com.google.zxing.Result,com.journeyapps.barcodescanner.SourceData)
androidx.appcompat.widget.ListPopupWindow: void setPopupClipToScreenEnabled(boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toSet(java.lang.Iterable)
kotlinx.coroutines.AbstractCoroutine: void afterResume(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void updateSubmitArea()
androidx.activity.ComponentActivity$4: ComponentActivity$4(androidx.activity.ComponentActivity)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void stop()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase)
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getState$kotlinx_coroutines_core()
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
kotlin.collections.EmptyList: boolean addAll(java.util.Collection)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[],java.util.Map)
kotlin.sequences.ConstrainedOnceSequence: ConstrainedOnceSequence(kotlin.sequences.Sequence)
com.google.zxing.oned.UPCEANReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
com.google.zxing.oned.rss.FinderPattern: int getValue()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.journeyapps.barcodescanner.CameraPreview$3: boolean handleMessage(android.os.Message)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
net.touchcapture.qr.flutterqr.QRView: void toggleFlash(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: java.lang.String getSystemFontFamilyName()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int nextInt(int)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)
androidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.appcompat.widget.AppCompatImageHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
kotlin.collections.EmptyMap: java.util.Set entrySet()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationRepeat(android.animation.Animator)
com.journeyapps.barcodescanner.DecoderThread$1: DecoderThread$1(com.journeyapps.barcodescanner.DecoderThread)
kotlin.collections.EmptyMap: java.lang.Void get(java.lang.Object)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: void onRequery(androidx.lifecycle.ViewModel)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setPromptText(java.lang.CharSequence)
androidx.appcompat.widget.LinearLayoutCompat: void layoutVertical(int,int,int,int)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.view.ViewGroup$LayoutParams)
kotlin.text.DelimitedRangesSequence: int access$getLimit$p(kotlin.text.DelimitedRangesSequence)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)
kotlin.jvm.internal.ClassReference: java.lang.Class getJClass()
androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)
androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
kotlin.coroutines.ContinuationInterceptor$Key: ContinuationInterceptor$Key()
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
kotlinx.coroutines.CompletedExceptionally: boolean getHandled()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1)
androidx.collection.ArrayMap: ArrayMap(int)
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void draw(android.graphics.Canvas)
androidx.window.embedding.SplitRule: SplitRule()
androidx.appcompat.widget.AppCompatSpinner: int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: void setResolution(com.journeyapps.barcodescanner.Size)
androidx.lifecycle.ClassesInfoCache: ClassesInfoCache()
androidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.activity.OnBackPressedDispatcher: void onBackPressed()
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveItem(int)
com.journeyapps.barcodescanner.camera.DisplayConfiguration: void setPreviewScalingStrategy(com.journeyapps.barcodescanner.camera.PreviewScalingStrategy)
androidx.window.core.Version: int compareTo(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.embedding.android.FlutterImageView)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean hasStableIds()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDefaultIcon1()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNext(kotlin.coroutines.Continuation)
kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)
androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)
com.google.zxing.aztec.detector.Detector: boolean isValid(int,int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.appcompat.widget.SearchView: void clearFocus()
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
androidx.fragment.app.Fragment: java.lang.Object getHost()
androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)
io.flutter.plugin.localization.LocalizationPlugin$1: java.lang.String getStringResource(java.lang.String,java.lang.String)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.appcompat.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)
kotlinx.coroutines.EventLoopImplBase: void closeQueue()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
androidx.appcompat.view.menu.MenuItemImpl: int getAlphabeticModifiers()
kotlin.ranges.IntRange: boolean isEmpty()
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleHorizontalMovement(boolean,boolean)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: ViewCompat$AccessibilityPaneVisibilityManager()
com.google.zxing.common.BitMatrix: int getWidth()
androidx.collection.ArraySet: boolean contains(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.core.Bounds: int hashCode()
androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View,int)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlin.Result$Companion: Result$Companion()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
kotlinx.coroutines.internal.DispatchedContinuation: boolean isReusable()
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$1: FlutterSplashView$1(io.flutter.embedding.android.FlutterSplashView)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayChanged(int)
androidx.core.view.WindowInsetsControllerCompat$Impl26: WindowInsetsControllerCompat$Impl26(android.view.Window,android.view.View)
kotlinx.coroutines.JobSupport: void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
androidx.window.R: R()
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin)
androidx.appcompat.widget.AppCompatEditText: boolean onTextContextMenuItem(int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate access$800(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiDisplayed()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface,boolean)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getAlphabeticModifiers()
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: MenuItemWrapperICS$OnActionExpandListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener)
com.google.zxing.pdf417.decoder.BarcodeValue: void setValue(int)
androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
androidx.fragment.app.FragmentManager: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
androidx.core.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourcePackageName(int)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.text.SpannableString createSpannableString(java.lang.String,java.util.List)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
androidx.appcompat.widget.TintTypedArray: java.lang.String getString(int)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
kotlinx.coroutines.CoroutineContextKt: java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraSettings getCameraSettings()
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint getBottomLeft()
androidx.appcompat.view.menu.MenuItemImpl: char getNumericShortcut()
androidx.core.content.res.ResourcesCompat$FontCallback$2: void run()
androidx.core.widget.AutoScrollHelper: void startAnimating()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManager: void destroyFragmentView(androidx.fragment.app.Fragment)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
androidx.core.view.WindowInsetsControllerCompat$Impl23: void setAppearanceLightStatusBars(boolean)
androidx.appcompat.widget.Toolbar: int getChildVerticalGravity(int)
androidx.core.app.ActivityCompat$2: ActivityCompat$2(android.app.Activity)
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState[] newArray(int)
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)
com.google.zxing.common.BitArray: boolean get(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationEnd(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: ActionMenuItemView$PopupCallback()
kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)
androidx.appcompat.view.menu.ActionMenuItem: int getOrder()
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcelable)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()
androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)
com.google.zxing.pdf417.decoder.DetectionResult: void adjustRowNumbersFromBothRI()
com.google.zxing.qrcode.detector.FinderPatternInfo: FinderPatternInfo(com.google.zxing.qrcode.detector.FinderPattern[])
com.google.zxing.oned.rss.DataCharacter: boolean equals(java.lang.Object)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionPause(android.transition.Transition)
com.journeyapps.barcodescanner.CameraPreview: void onLayout(boolean,int,int,int,int)
androidx.appcompat.view.menu.CascadingMenuPopup$2: CascadingMenuPopup$2(androidx.appcompat.view.menu.CascadingMenuPopup)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,boolean)
androidx.core.provider.FontProvider$1: int compare(byte[],byte[])
kotlin.jvm.internal.Intrinsics: Intrinsics()
androidx.core.view.ActionProvider: boolean hasSubMenu()
androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
com.journeyapps.barcodescanner.CaptureManager: android.content.Intent resultIntent(com.journeyapps.barcodescanner.BarcodeResult,java.lang.String)
androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode[] values()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()
androidx.collection.SimpleArrayMap: java.lang.String toString()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.appcompat.view.menu.CascadingMenuPopup$3: CascadingMenuPopup$3(androidx.appcompat.view.menu.CascadingMenuPopup)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
com.journeyapps.barcodescanner.BarcodeView: void setDecoderFactory(com.journeyapps.barcodescanner.DecoderFactory)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.appcompat.view.StandaloneActionMode: boolean isTitleOptional()
kotlin.collections.EmptySet: boolean contains(java.lang.Void)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
com.google.zxing.pdf417.PDF417Common: int[] toIntArray(java.util.Collection)
androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void start()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void setBackgroundResource(int)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.fragment.app.SpecialEffectsController$2: void run()
androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.fragment.app.DefaultSpecialEffectsController$4$1: DefaultSpecialEffectsController$4$1(androidx.fragment.app.DefaultSpecialEffectsController$4)
androidx.appcompat.widget.AppCompatTextHelper: void onSetTextAppearance(android.content.Context,int)
com.journeyapps.barcodescanner.camera.CameraSurface: void setPreview(android.hardware.Camera)
androidx.appcompat.view.menu.MenuAdapter: MenuAdapter(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values()
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void cancelTransaction()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void ensureMenuView()
androidx.collection.ArraySet$1: void colClear()
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.ArraySet$1: void colRemoveAt(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readUtah(int,int,int,int)
androidx.fragment.app.BackStackState: int describeContents()
androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
com.journeyapps.barcodescanner.CameraPreview: void containerSized(com.journeyapps.barcodescanner.Size)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.SpecialEffectsController: android.view.ViewGroup getContainer()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo)
kotlinx.coroutines.DefaultExecutor: void run()
kotlinx.coroutines.channels.ConflatedChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
com.journeyapps.barcodescanner.CameraPreview: void setUseTextureView(boolean)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor getExecutor()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemovePrev()
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void completeTransaction()
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlin.collections.EmptySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.zxing.oned.OneDReader: com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspot(float,float)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode[] values()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getHorizontalOffset()
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport getJob()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: Toolbar$ExpandedActionViewMenuPresenter(androidx.appcompat.widget.Toolbar)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.lang.Object initialValue()
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute(io.flutter.view.AccessibilityBridge$1)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.DispatcherExecutor: void execute(java.lang.Runnable)
androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
androidx.core.view.ViewPropertyAnimatorCompat$2: void onAnimationUpdate(android.animation.ValueAnimator)
androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.flutter.plugin.platform.PlatformPlugin$2: PlatformPlugin$2(io.flutter.plugin.platform.PlatformPlugin)
androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
com.journeyapps.barcodescanner.ViewfinderView: void onDraw(android.graphics.Canvas)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix)
com.google.zxing.aztec.decoder.Decoder: int totalBitsInLayer(int,boolean)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)
com.google.zxing.common.BitArray: BitArray(int[],int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: DefaultSpecialEffectsController$SpecialEffectsInfo(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
kotlinx.coroutines.JobSupport: java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTint(int)
androidx.appcompat.widget.ListPopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean canShowOverflowMenu()
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.fragment.app.SpecialEffectsController: void executePendingOperations()
androidx.fragment.app.FragmentManager: void dispatchAttach()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel)
androidx.core.view.ActionProvider: boolean isVisible()
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table[] values()
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: int getRemainingValue()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.journeyapps.barcodescanner.CameraPreview: void setupSurfaceView()
androidx.appcompat.widget.ListPopupWindow: void setAnchorView(android.view.View)
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
androidx.fragment.app.Fragment: void restoreViewState()
kotlinx.coroutines.JobImpl: boolean handlesException()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets)
com.journeyapps.barcodescanner.camera.AutoFocusManager$1: boolean handleMessage(android.os.Message)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getContext()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()
androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)
androidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)
com.google.zxing.maxicode.decoder.BitMatrixParser: BitMatrixParser(com.google.zxing.common.BitMatrix)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()
androidx.appcompat.widget.ListPopupWindow$3: void onNothingSelected(android.widget.AdapterView)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1(java.lang.reflect.Constructor)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI$Factory: FlutterJNI$Factory()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
androidx.appcompat.widget.TooltipCompatHandler: TooltipCompatHandler(android.view.View,java.lang.CharSequence)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
kotlin.Result: boolean isFailure-impl(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()
androidx.appcompat.widget.ActionMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)
androidx.appcompat.widget.SearchView$10: SearchView$10(androidx.appcompat.widget.SearchView)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)
androidx.appcompat.widget.AppCompatProgressBarHelper: AppCompatProgressBarHelper(android.widget.ProgressBar)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setHomeButtonEnabled(boolean)
com.google.zxing.aztec.AztecDetectorResult: boolean isCompact()
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.CameraPreview$StateListener access$400(com.journeyapps.barcodescanner.CameraPreview)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: ActionMenuPresenter$OverflowMenuButton$1(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: void completeResumeSend()
androidx.appcompat.view.menu.CascadingMenuPopup: CascadingMenuPopup(android.content.Context,android.view.View,int,int,boolean)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()
net.touchcapture.qr.flutterqr.Shared: android.app.Activity getActivity()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
kotlinx.coroutines.JobImpl: boolean getHandlesException$kotlinx_coroutines_core()
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeUniformPresetSizesConfiguration()
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: DartMessenger$HandlerInfo(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue)
kotlin.jvm.internal.PackageReference: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources getResources()
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
kotlinx.coroutines.JobCancellationException: java.lang.Throwable fillInStackTrace()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
androidx.appcompat.widget.AppCompatSeekBar: void drawableStateChanged()
kotlin.Result$Failure: java.lang.String toString()
kotlinx.coroutines.channels.BufferOverflow: BufferOverflow(java.lang.String,int)
androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri getContentUri()
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: DecodedNumeric(int,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
com.journeyapps.barcodescanner.Util: void validateMainThread()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.Region getTransparentRegion()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void findExpandedIndex()
androidx.appcompat.widget.SearchView: void onCloseClicked()
androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
com.google.zxing.common.BitMatrix: void setRegion(int,int,int,int)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void commitAsync(android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
com.benjaminabel.vibration.Vibration: void vibrate(long,int)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
net.touchcapture.qr.flutterqr.Shared: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding getBinding()
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: BlockParsedResult(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: AnimatedStateListDrawableCompat$AnimationDrawableTransition(android.graphics.drawable.AnimationDrawable,boolean,boolean)
com.google.zxing.oned.Code93Reader: int toPattern(int[])
com.google.zxing.oned.ITFReader: int decodeDigit(int[])
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
kotlinx.coroutines.CancelHandler: CancelHandler()
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.appcompat.view.menu.ActionMenuItem: boolean isEnabled()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
androidx.appcompat.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: void setShowAsAction(int)
androidx.window.embedding.ActivityFilter: int hashCode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.core.provider.RequestExecutor: java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.fragment.app.FragmentActivity: void onDestroy()
androidx.fragment.app.FragmentViewLifecycleOwner: void performSave(android.os.Bundle)
androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
com.journeyapps.barcodescanner.CameraPreview: void addStateListener(com.journeyapps.barcodescanner.CameraPreview$StateListener)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float getInterpolation(float)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()
androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
androidx.fragment.app.FragmentManager: void dispatchResume()
androidx.fragment.app.DefaultSpecialEffectsController$9: DefaultSpecialEffectsController$9(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
com.google.zxing.MultiFormatReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean isStateful()
com.google.zxing.qrcode.decoder.Version: int getTotalCodewords()
androidx.appcompat.widget.SearchView$6: boolean onKey(android.view.View,int,android.view.KeyEvent)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: ResourcesWrapper(android.content.res.Resources)
com.google.zxing.PlanarYUVLuminanceSource: PlanarYUVLuminanceSource(byte[],int,int,int,int,int,int,boolean)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.view.menu.StandardMenuPopup: void setForceShowIcon(boolean)
androidx.appcompat.view.menu.MenuBuilder: android.content.Context getContext()
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: void run()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.zxing.common.HybridBinarizer: int cap(int,int,int)
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
androidx.core.provider.FontRequest: int getCertificatesArrayResId()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.fragment.app.FragmentTransitionCompat21$2: FragmentTransitionCompat21$2(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
androidx.appcompat.widget.ActionBarOverlayLayout$3: ActionBarOverlayLayout$3(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.appcompat.app.AlertController: void setupButtons(android.view.ViewGroup)
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder: java.lang.String parseInformation()
androidx.appcompat.widget.AppCompatReceiveContentHelper$1: AppCompatReceiveContentHelper$1(android.view.View)
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)
kotlin.collections.EmptyIterator: void add(java.lang.Object)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementSourceNames()
com.google.zxing.common.GlobalHistogramBinarizer: GlobalHistogramBinarizer(com.google.zxing.LuminanceSource)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.collection.ArraySet: int size()
androidx.fragment.app.FragmentActivity$1: FragmentActivity$1(androidx.fragment.app.FragmentActivity)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toList(kotlin.sequences.Sequence)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: FlutterMutatorView$1(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView,android.view.View$OnFocusChangeListener,android.view.View)
com.journeyapps.barcodescanner.SourceData: void setCropRect(android.graphics.Rect)
androidx.core.view.WindowInsetsControllerCompat: WindowInsetsControllerCompat(android.view.Window,android.view.View)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean isVisible()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)
androidx.core.graphics.TypefaceCompatApi24Impl: boolean isUsable()
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: LocalizationChannel$1(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
androidx.fragment.app.FragmentAnim: int transitToAnimResourceId(int,boolean)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: OnBackPressedDispatcher$LifecycleOnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)
com.google.zxing.aztec.detector.Detector: com.google.zxing.ResultPoint[] expandSquare(com.google.zxing.ResultPoint[],int,int)
androidx.fragment.app.Fragment: android.view.View getView()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
androidx.appcompat.widget.ScrollingTabContainerView: void onMeasure(int,int)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.Codeword getCodewordNearby(int)
androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: android.view.View onCreateActionView(android.view.MenuItem)
androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)
kotlin.text.CharsKt__CharJVMKt: int digitOf(char,int)
com.google.zxing.datamatrix.DataMatrixReader: void reset()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Key getKey()
com.journeyapps.barcodescanner.camera.CameraManager: boolean isTorchOn()
com.google.zxing.common.BitArray: BitArray(int)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: void verifyCodewordCount(int[],int)
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder: void encodeCompressedWeight(java.lang.StringBuilder,int,int)
androidx.appcompat.widget.Toolbar$1: boolean onMenuItemClick(android.view.MenuItem)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsets(int)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)
com.journeyapps.barcodescanner.CaptureManager: void openCameraWithPermission()
kotlinx.coroutines.CommonPool: java.lang.String toString()
com.google.zxing.qrcode.decoder.BitMatrixParser: void mirror()
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.CoroutineId: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.appcompat.widget.ListPopupWindow: void setPromptPosition(int)
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
androidx.appcompat.app.WindowDecorActionBar$3: void onAnimationUpdate(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getIndexInArray()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()
androidx.appcompat.view.menu.MenuPopupHelper: void dismiss()
androidx.core.os.CancellationSignal: void waitForCancelFinishedLocked()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: DefaultSpecialEffectsController$TransitionInfo(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.collection.LongSparseArray: int size()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.ViewfinderView access$000(com.journeyapps.barcodescanner.DecoratedBarcodeView)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window$Callback)
kotlinx.coroutines.channels.Closed: java.lang.Object getPollResult()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.fragment.app.BackStackRecord: void executePopOps(boolean)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.zxing.oned.Code39Reader: Code39Reader(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setWindowFlag(int)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getPollResult()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet,int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.fragment.app.FragmentActivity: void onPause()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.fragment.app.FragmentTransaction: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
androidx.appcompat.widget.SearchView: boolean isLandscapeMode(android.content.Context)
com.google.zxing.pdf417.PDF417Reader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.Result constructResult(java.util.List)
kotlinx.coroutines.channels.LinkedListChannel: LinkedListChannel(kotlin.jvm.functions.Function1)
androidx.core.app.ActivityCompat$1: void run()
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,int,int)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
net.touchcapture.qr.flutterqr.QRView$1: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: ActionMenuPresenter$OpenOverflowRunnable(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void setupChannel(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver access$000()
androidx.core.content.res.ResourcesCompat$FontCallback$2: ResourcesCompat$FontCallback$2(androidx.core.content.res.ResourcesCompat$FontCallback,int)
com.google.zxing.qrcode.detector.FinderPatternFinder: com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map)
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getErrorCorrectionLevel()
androidx.appcompat.view.StandaloneActionMode: android.view.View getCustomView()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getTitle()
com.google.zxing.DecodeHintType: java.lang.Class getValueType()
androidx.appcompat.widget.AppCompatSeekBar: void onDraw(android.graphics.Canvas)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.zxing.pdf417.decoder.Codeword: int getEndX()
androidx.core.app.ActivityRecreator$2: ActivityRecreator$2(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float)
androidx.activity.result.ActivityResultLauncher: ActivityResultLauncher()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached()
androidx.appcompat.widget.ActionBarOverlayLayout$2: ActionBarOverlayLayout$2(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasExpandedActionView()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void start()
com.google.zxing.common.reedsolomon.GenericGF: int log(int)
kotlin.random.FallbackThreadLocalRandom: java.util.Random getImpl()
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.appcompat.app.WindowDecorActionBar: int getDisplayOptions()
androidx.fragment.app.FragmentManager: void dispatchStart()
androidx.fragment.app.FragmentTransition$6: void run()
androidx.core.view.ViewPropertyAnimatorCompat$2: ViewPropertyAnimatorCompat$2(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
kotlinx.coroutines.StandaloneCoroutine: StandaloneCoroutine(kotlin.coroutines.CoroutineContext,boolean)
kotlin.ranges.IntProgression: IntProgression(int,int,int)
com.google.zxing.common.BitArray: int hashCode()
androidx.appcompat.view.menu.MenuBuilder: boolean getOptionalIconsVisible()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence formatUrl(java.lang.CharSequence)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: void requestPermission()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
androidx.collection.SparseArrayCompat: java.lang.String toString()
kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl: void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration)
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
androidx.fragment.app.BackStackState: BackStackState(androidx.fragment.app.BackStackRecord)
androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.List decodeList(java.lang.String)
com.google.zxing.oned.ITFReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.appcompat.widget.AppCompatCheckBox: void drawableStateChanged()
com.google.zxing.DecodeHintType: DecodeHintType(java.lang.String,int,java.lang.Class)
kotlinx.coroutines.ChildHandleNode: boolean childCancelled(java.lang.Throwable)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.NonDisposableHandle: boolean childCancelled(java.lang.Throwable)
com.google.zxing.qrcode.decoder.Version$ECB: int getCount()
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
androidx.appcompat.widget.TintTypedArray: int getColor(int,int)
com.journeyapps.barcodescanner.camera.CameraManager: void stopPreview()
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.lifecycle.ReportFragment: void onStop()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationCancel(android.animation.Animator)
androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
com.journeyapps.barcodescanner.BarcodeResult: java.util.List transformResultPoints(java.util.List,com.journeyapps.barcodescanner.SourceData)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
androidx.fragment.app.FragmentManager: int reverseTransit(int)
androidx.activity.result.ActivityResult$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
com.journeyapps.barcodescanner.camera.FitCenterStrategy: float getScore(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean supportsAutoSizeText()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: float getPostOnViewCreatedAlpha()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTint(int)
androidx.appcompat.widget.ActionMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.LinearLayoutCompat: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.app.AppCompatDelegateImpl: void onStop()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
androidx.fragment.app.FragmentLayoutInflaterFactory: FragmentLayoutInflaterFactory(androidx.fragment.app.FragmentManager)
androidx.fragment.app.FragmentManagerState$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ScrollingTabContainerView: boolean isCollapsed()
androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.fragment.app.Fragment: boolean getPopDirection()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: ActivityResultRegistry$CallbackAndContract(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.appcompat.app.AppCompatDelegateImpl$1: boolean shouldWrapException(java.lang.Throwable)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()
com.google.zxing.pdf417.decoder.ec.ModulusPoly: int getCoefficient(int)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void completeResumeReceive(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
androidx.fragment.app.FragmentManager: void scheduleCommit()
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: void dismissPopupMenus()
kotlinx.coroutines.channels.ArrayChannel: void enqueueElement(int,java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onInvalidated()
com.google.zxing.pdf417.decoder.BoundingBox: int getMinY()
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
com.google.zxing.ReaderException: ReaderException(java.lang.Throwable)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.fragment.app.FragmentManager: void checkStateLoss()
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean canReverse()
androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDownPanel(int,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int findLargestTextSizeWhichFits(android.graphics.RectF)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: int parseECIValue(com.google.zxing.common.BitSource)
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()
androidx.fragment.app.FragmentTransition$2: FragmentTransition$2(java.util.ArrayList)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)
androidx.fragment.app.FragmentContainerView: void startViewTransition(android.view.View)
androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean)
com.google.zxing.common.DecoderResult: boolean hasStructuredAppend()
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformWidth(int,int)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlinx.coroutines.Job)
com.google.zxing.qrcode.decoder.Version$ECB: int getDataCodewords()
androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
androidx.appcompat.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)
androidx.collection.MapCollections$KeySet: boolean isEmpty()
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
androidx.fragment.app.FragmentManagerViewModel: int hashCode()
androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)
androidx.appcompat.app.AppCompatActivity$2: AppCompatActivity$2(androidx.appcompat.app.AppCompatActivity)
androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.Toolbar: boolean showOverflowMenu()
kotlinx.coroutines.scheduling.CoroutineScheduler: void close()
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder: AI01392xDecoder(com.google.zxing.common.BitArray)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
androidx.appcompat.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)
net.touchcapture.qr.flutterqr.QRView: void getFlashInfo(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
androidx.appcompat.app.AlertController$AlertParams$2: void bindView(android.view.View,android.content.Context,android.database.Cursor)
kotlinx.coroutines.Dispatchers: Dispatchers()
kotlinx.coroutines.channels.LinkedListChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks()
kotlin.collections.EmptyList: int size()
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)
kotlinx.coroutines.internal.ArrayQueue: void addLast(java.lang.Object)
kotlinx.coroutines.ChildContinuation: java.lang.Object invoke(java.lang.Object)
kotlin.collections.EmptyIterator: int nextIndex()
androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)
androidx.appcompat.app.TwilightManager: TwilightManager(android.content.Context,android.location.LocationManager)
io.flutter.plugin.platform.PlatformViewsController: boolean access$000(int)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.aztec.decoder.Decoder: java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
com.google.zxing.oned.UPCEANReader: int getStandardUPCEANChecksum(java.lang.CharSequence)
androidx.core.text.PrecomputedTextCompat$Params: int hashCode()
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.core.view.WindowInsetsControllerCompat$Impl20: WindowInsetsControllerCompat$Impl20(android.view.Window,android.view.View)
androidx.core.provider.FontRequestWorker: androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
com.journeyapps.barcodescanner.BarcodeView: void decodeContinuous(com.journeyapps.barcodescanner.BarcodeCallback)
androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
androidx.core.provider.FontRequestWorker$3: java.lang.Object call()
com.google.zxing.common.CharacterSetECI: CharacterSetECI(java.lang.String,int,int)
kotlin.collections.EmptyList: int indexOf(java.lang.Void)
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
androidx.appcompat.view.menu.MenuWrapperICS: void clear()
androidx.fragment.app.Fragment$3: void run()
androidx.appcompat.app.AppCompatDelegateImpl$2: AppCompatDelegateImpl$2(androidx.appcompat.app.AppCompatDelegateImpl)
com.journeyapps.barcodescanner.CaptureManager$2: CaptureManager$2(com.journeyapps.barcodescanner.CaptureManager)
kotlin.internal.jdk8.JDK8PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
kotlin.coroutines.EmptyCoroutineContext: int hashCode()
com.journeyapps.barcodescanner.CaptureManager: java.lang.String getBarcodeImagePath(com.journeyapps.barcodescanner.BarcodeResult)
com.google.zxing.pdf417.decoder.ec.ModulusGF: ModulusGF(int,int)
com.google.zxing.Result: void putAllMetadata(java.util.Map)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
kotlinx.coroutines.scheduling.WorkQueue: void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue)
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder: AI01weightDecoder(com.google.zxing.common.BitArray)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,boolean)
com.journeyapps.barcodescanner.RotationListener: RotationListener()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern getTopLeft()
kotlin.collections.EmptyMap: void clear()
kotlin.sequences.TransformingSequence: TransformingSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.fragment.app.BackStackRecord: void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.journeyapps.barcodescanner.CameraPreview: boolean isCameraClosed()
androidx.appcompat.widget.SuggestionsAdapter: void changeCursor(android.database.Cursor)
kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightNavigationBars(boolean)
com.journeyapps.barcodescanner.camera.CameraSettings: int getRequestedCameraId()
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle)
androidx.appcompat.widget.TooltipPopup: TooltipPopup(android.content.Context)
androidx.window.layout.WindowLayoutInfo: int hashCode()
com.journeyapps.barcodescanner.BarcodeView$1: BarcodeView$1(com.journeyapps.barcodescanner.BarcodeView)
kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)
kotlin.collections.EmptyMap: java.lang.String toString()
androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: void onFrameAvailable(android.graphics.SurfaceTexture)
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: ReflectiveGenericLifecycleObserver(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStopped(android.app.Activity)
net.touchcapture.qr.flutterqr.QRView: boolean hasCameraPermission()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.appcompat.view.menu.MenuPopup: void setEpicenterBounds(android.graphics.Rect)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.google.zxing.pdf417.PDF417Reader: int getMinWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
androidx.appcompat.view.menu.ListMenuPresenter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.zxing.oned.ITFReader: int skipWhiteSpace(com.google.zxing.common.BitArray)
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
androidx.appcompat.view.menu.MenuItemImpl: void setCheckedInt(boolean)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size getPreviewSize()
androidx.appcompat.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)
androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
kotlinx.coroutines.scheduling.DefaultScheduler: java.lang.String toString()
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isProjected()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
androidx.fragment.app.SpecialEffectsController: void forceCompleteAllOperations()
androidx.activity.result.ActivityResult: ActivityResult(int,android.content.Intent)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
kotlinx.coroutines.JobSupport: JobSupport(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
androidx.appcompat.app.AlertController: void centerButton(android.widget.Button)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: ActionMenuPresenter$ActionButtonSubmenu(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.zxing.client.android.BeepManager: void setBeepEnabled(boolean)
com.journeyapps.barcodescanner.BarcodeView$1: boolean handleMessage(android.os.Message)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
io.flutter.util.ViewUtils: android.app.Activity getActivity(android.content.Context)
com.journeyapps.barcodescanner.CameraPreview$2: void surfaceDestroyed(android.view.SurfaceHolder)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List checkRows(java.util.List,int)
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightStatusBars(boolean)
androidx.appcompat.app.WindowDecorActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)
androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
com.google.zxing.LuminanceSource: com.google.zxing.LuminanceSource rotateCounterClockwise()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String)
androidx.fragment.app.Fragment: void setSharedElementNames(java.util.ArrayList,java.util.ArrayList)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isAutoMirrored()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
androidx.appcompat.widget.ListPopupWindow: void setVerticalOffset(int)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()
kotlinx.coroutines.EventLoopImplBase: int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
com.journeyapps.barcodescanner.CameraPreview$5: void cameraError(java.lang.Exception)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()
androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.String toString()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
io.flutter.embedding.android.FlutterSurfaceView: void init()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
com.google.zxing.oned.UPCEANExtension2Support: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: void setBundle(android.os.Bundle)
androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupVisible(int,boolean)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri getLinkUri()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.zxing.qrcode.decoder.DataMask$3: boolean isMasked(int,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
androidx.fragment.app.FragmentManager: void reportBackStackChanged()
com.google.zxing.oned.Code128Reader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
com.google.zxing.oned.rss.expanded.ExpandedPair: int hashCode()
androidx.core.view.ContentInfoCompat: java.lang.String flagsToString(int)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeWith(java.lang.Object)
com.google.zxing.oned.rss.RSS14Reader: void reset()
androidx.appcompat.widget.AppCompatReceiveContentHelper: boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int)
net.touchcapture.qr.flutterqr.QRView: void getCameraInfo(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.zxing.client.android.AmbientLightManager: AmbientLightManager(android.content.Context,com.journeyapps.barcodescanner.camera.CameraManager,com.journeyapps.barcodescanner.camera.CameraSettings)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setFilterBitmap(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map)
io.flutter.embedding.android.FlutterView$4: FlutterView$4(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
androidx.appcompat.view.StandaloneActionMode: void finish()
androidx.appcompat.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()
kotlinx.coroutines.DebugStringsKt: java.lang.String toDebugString(kotlin.coroutines.Continuation)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void unsetOnDescendantFocusChangeListener()
com.google.zxing.pdf417.decoder.Codeword: void setRowNumber(int)
androidx.collection.MapCollections$KeySet: int hashCode()
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawableStateChanged()
kotlin.collections.EmptyMap: java.util.Set getKeys()
com.google.zxing.aztec.AztecDetectorResult: AztecDetectorResult(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[],boolean,int,int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.zxing.pdf417.decoder.BarcodeValue: BarcodeValue()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
kotlinx.coroutines.CommonPool: java.lang.Thread createPlainPool$lambda-12(java.util.concurrent.atomic.AtomicInteger,java.lang.Runnable)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onMeasure(int,int)
androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()
androidx.appcompat.widget.AppCompatSpinner: void onMeasure(int,int)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder)
androidx.appcompat.view.menu.MenuPopup: int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
androidx.fragment.app.FragmentTransition: boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: AppCompatSpinner$DialogPopup(androidx.appcompat.widget.AppCompatSpinner)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)
androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.activity.ComponentActivity: void onBackPressed()
kotlinx.coroutines.YieldContext$Key: YieldContext$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.ArraySet$1: void colPut(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
androidx.fragment.app.Fragment: void performDetach()
androidx.core.view.NestedScrollingChildHelper: NestedScrollingChildHelper(android.view.View)
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraManager: void requestPreviewFrame(com.journeyapps.barcodescanner.camera.PreviewCallback)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.journeyapps.barcodescanner.RawImageData: RawImageData(byte[],int,int)
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.google.zxing.qrcode.detector.Detector: com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: boolean getBoolean(android.os.Bundle,java.lang.String,boolean)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
androidx.appcompat.view.menu.SubMenuWrapperICS: SubMenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportSubMenu)
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView$Companion: CustomFramingRectBarcodeView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.journeyapps.barcodescanner.ViewfinderView: void setCameraPreview(com.journeyapps.barcodescanner.CameraPreview)
androidx.appcompat.view.SupportMenuInflater: java.lang.Object findRealOwner(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.appcompat.widget.AppCompatTextHelper$2: void run()
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)
androidx.fragment.app.Fragment: void onResume()
androidx.appcompat.view.menu.StandardMenuPopup: StandardMenuPopup(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.google.zxing.aztec.AztecReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
net.touchcapture.qr.flutterqr.QRView: boolean access$hasCameraPermission(net.touchcapture.qr.flutterqr.QRView)
androidx.fragment.app.FragmentActivity: void onStop()
com.google.zxing.qrcode.detector.FinderPattern: boolean aboutEquals(float,float,float)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()
androidx.appcompat.widget.Toolbar: void ensureContentInsets()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
kotlin.ranges.IntRange$Companion: kotlin.ranges.IntRange getEMPTY()
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightNavigationBars(boolean)
androidx.appcompat.widget.Toolbar: void ensureLogoView()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
androidx.activity.result.ActivityResult: android.content.Intent getData()
androidx.appcompat.graphics.drawable.DrawableContainer: DrawableContainer()
com.journeyapps.barcodescanner.camera.CameraManager: android.hardware.Camera$CameraInfo access$000(com.journeyapps.barcodescanner.camera.CameraManager)
androidx.appcompat.app.AlertController$2: AlertController$2(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: void run()
com.journeyapps.barcodescanner.CaptureManager$1: CaptureManager$1(com.journeyapps.barcodescanner.CaptureManager)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
androidx.fragment.app.FragmentManager: void dispatchDestroyView()
androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char,int)
androidx.appcompat.graphics.drawable.DrawableContainer: int getCurrentIndex()
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
kotlinx.coroutines.CoroutineId: long getId()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
androidx.appcompat.widget.ResourcesWrapper: void getValue(int,android.util.TypedValue,boolean)
androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
com.journeyapps.barcodescanner.camera.CameraInstance: void notifyError(java.lang.Exception)
androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentTransitionImpl$2: void run()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
androidx.appcompat.view.menu.ListMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.fragment.app.FragmentContainerView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onContentChanged()
androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(java.lang.Runnable,boolean)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: boolean isReady()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.zxing.qrcode.decoder.DataMask$1: DataMask$1(java.lang.String,int)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
com.google.zxing.qrcode.decoder.DataBlock: byte[] getCodewords()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
androidx.arch.core.executor.ArchTaskExecutor$2: void execute(java.lang.Runnable)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
kotlin.random.jdk8.PlatformThreadLocalRandom: PlatformThreadLocalRandom()
androidx.appcompat.view.menu.MenuItemImpl: int getItemId()
androidx.appcompat.app.AppCompatDelegateImpl: boolean isHandleNativeActionModesEnabled()
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()
com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance(java.lang.Throwable)
androidx.appcompat.widget.TintContextWrapper: TintContextWrapper(android.content.Context)
kotlinx.coroutines.flow.AbstractFlow$collect$1: AbstractFlow$collect$1(kotlinx.coroutines.flow.AbstractFlow,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean isStateful()
androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()
com.google.zxing.oned.EANManufacturerOrgSupport: EANManufacturerOrgSupport()
com.google.zxing.qrcode.decoder.DataMask$4: boolean isMasked(int,int)
kotlinx.coroutines.Unconfined: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.appcompat.widget.SearchView$4: SearchView$4(androidx.appcompat.widget.SearchView)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.util.List)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull()
com.google.zxing.common.BitArray: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findAnyTask(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
kotlinx.coroutines.flow.internal.NoOpContinuation: void resumeWith(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setWrappedDrawable(android.graphics.drawable.Drawable)
com.google.zxing.common.DecoderResult: void setNumBits(int)
androidx.fragment.app.Fragment$1: Fragment$1(androidx.fragment.app.Fragment)
androidx.collection.ContainerHelpers: int idealLongArraySize(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2602(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop createEventLoop()
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.util.List buildMiddleArea(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(int)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)
androidx.appcompat.app.AppCompatDelegateImpl: void setTheme(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.Intent getIntent()
androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
androidx.lifecycle.Lifecycling$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: AppCompatDelegateImpl$AutoTimeNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationStart(android.view.View)
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()
androidx.fragment.app.FragmentStore: void resetActiveFragments()
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
com.google.zxing.LuminanceSource: int getWidth()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Void)
androidx.appcompat.app.AppCompatDelegateImpl$1: AppCompatDelegateImpl$1(java.lang.Thread$UncaughtExceptionHandler)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getQuantityText(int,int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.zxing.common.BitMatrix: int[] getTopLeftOnBit()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: androidx.fragment.app.FragmentTransitionImpl getHandlingImpl()
androidx.core.graphics.ColorUtils: int compositeColors(int,int)
com.journeyapps.barcodescanner.ViewfinderView$1: ViewfinderView$1(com.journeyapps.barcodescanner.ViewfinderView)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void reset()
androidx.appcompat.view.menu.MenuBuilder: MenuBuilder(android.content.Context)
androidx.appcompat.widget.ScrollingTabContainerView$1: ScrollingTabContainerView$1(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3400(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.Pair: java.lang.Object getFirst()
kotlin.ranges.RangesKt___RangesKt: long coerceAtMost(long,long)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
io.flutter.embedding.android.KeyChannelResponder: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
net.touchcapture.qr.flutterqr.QRView: boolean hasFrontCamera()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
androidx.appcompat.view.menu.CascadingMenuPopup: void dismiss()
androidx.core.provider.FontsContractCompat$FontInfo: FontsContractCompat$FontInfo(android.net.Uri,int,int,boolean,int)
androidx.cursoradapter.widget.CursorAdapter: void onContentChanged()
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspot(float,float)
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.DetectorResult detect(java.util.Map)
androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])
androidx.appcompat.widget.AppCompatTextHelper: void autoSizeText()
com.google.zxing.datamatrix.decoder.DataBlock: DataBlock(int,byte[])
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: Detector$ResultPointsAndTransitionsComparator()
androidx.collection.MapCollections$MapIterator: boolean hasNext()
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
androidx.fragment.app.Fragment: void setAnimations(int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: void measureVertical(int,int)
androidx.fragment.app.FragmentManager$2: void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean isStateful()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
com.google.zxing.qrcode.detector.Detector: Detector(com.google.zxing.common.BitMatrix)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.fragment.app.FragmentStateManager: void stop()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater getMenuInflater()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
androidx.appcompat.view.ActionMode: java.lang.Object getTag()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)
androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)
kotlin.text.CharsKt__CharKt: boolean equals(char,char,boolean)
androidx.appcompat.widget.ActionMenuPresenter: void setReserveOverflow(boolean)
androidx.fragment.app.FragmentTransition: android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean)
androidx.fragment.app.FragmentController: void dispatchResume()
androidx.core.text.PrecomputedTextCompat$Params$Builder: PrecomputedTextCompat$Params$Builder(android.text.TextPaint)
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.os.ExecutorCompat$HandlerExecutor: ExecutorCompat$HandlerExecutor(android.os.Handler)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: kotlin.jvm.functions.Function1 createConstructor(java.lang.reflect.Constructor)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTooltipText(java.lang.CharSequence)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)
androidx.core.provider.FontProvider: java.util.List convertToByteArrayList(android.content.pm.Signature[])
androidx.appcompat.widget.AppCompatButton: void setTextAppearance(android.content.Context,int)
androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void runWorker()
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.fragment.app.DefaultSpecialEffectsController$1: void run()
androidx.fragment.app.DefaultSpecialEffectsController$4: DefaultSpecialEffectsController$4(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setState(int[])
androidx.appcompat.widget.AppCompatTextHelper: void onLayout(boolean,int,int,int,int)
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraInstance createCameraInstance()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: FragmentAnim$AnimationOrAnimator(android.animation.Animator)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.google.zxing.oned.Code93Reader: char patternToChar(int)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onDetachedFromActivityForConfigChanges()
androidx.activity.result.ActivityResultRegistry: boolean dispatchResult(int,int,android.content.Intent)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: FlutterRenderer$SurfaceTextureRegistryEntry$1(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.journeyapps.barcodescanner.CameraPreview: void rotationChanged()
com.journeyapps.barcodescanner.camera.CenterCropStrategy: android.graphics.Rect scalePreview(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
androidx.core.view.ContentInfoCompat: java.lang.String sourceToString(int)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale localeFromString(java.lang.String)
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor)
androidx.fragment.app.Fragment: void initLifecycle()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.CompletedWithCancellation: int hashCode()
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowPending()
com.google.zxing.oned.MultiFormatUPCEANReader: MultiFormatUPCEANReader(java.util.Map)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
com.journeyapps.barcodescanner.CameraPreview: void initializeAttributes(android.util.AttributeSet)
com.google.zxing.oned.CodaBarReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)
androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String toString()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
kotlinx.coroutines.CoroutineName: java.lang.String getName()
com.google.zxing.pdf417.decoder.Codeword: void setRowNumberAsRowIndicatorColumn()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: DownstreamExceptionElement(java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setExclusiveCheckable(boolean)
androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()
androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionEnd(android.transition.Transition)
androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
kotlin.ExceptionsKt__ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: DropDownListView$ResolveHoverRunnable(androidx.appcompat.widget.DropDownListView)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: DecodedBitStreamParser$Mode(java.lang.String,int)
androidx.appcompat.app.AlertController: void manageScrollIndicators(android.view.View,android.view.View,android.view.View)
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupEnabled(int,boolean)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.AbstractSendChannel: void helpClose(kotlinx.coroutines.channels.Closed)
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
androidx.appcompat.widget.TooltipCompatHandler: boolean onLongClick(android.view.View)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
com.journeyapps.barcodescanner.Size: int compareTo(com.journeyapps.barcodescanner.Size)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values()
kotlinx.coroutines.internal.AtomicOp: java.lang.Object perform(java.lang.Object)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: ResourceManagerInternal$VdcInflateDelegate()
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean onPerformDefaultAction()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean childHasFocus(android.view.View)
com.journeyapps.barcodescanner.RotationListener: int access$200(com.journeyapps.barcodescanner.RotationListener)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)
io.flutter.embedding.android.KeyboardManager: void onUnhandled(android.view.KeyEvent)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo()
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: CameraSettings$FocusMode(java.lang.String,int)
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
androidx.collection.LongSparseArray: LongSparseArray(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()
androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
io.flutter.embedding.android.FlutterView: void onAttachedToWindow()
com.google.zxing.InvertedLuminanceSource: boolean isRotateSupported()
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(android.net.Uri,android.content.ClipDescription,android.net.Uri)
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void reverseCounters(int[])
kotlin.coroutines.CombinedContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void decodeSingle(com.journeyapps.barcodescanner.BarcodeCallback)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueue: int getSize$kotlinx_coroutines_core()
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: ListPopupWindow$PopupDataSetObserver(androidx.appcompat.widget.ListPopupWindow)
androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void forceSuggestionQuery()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object getNextParkedWorker()
androidx.fragment.app.FragmentManager: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
com.google.zxing.aztec.detector.Detector: Detector(com.google.zxing.common.BitMatrix)
com.google.zxing.oned.UPCAReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
kotlin.jvm.internal.FunctionReference: boolean isInline()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task pollGlobalQueues()
kotlin.ranges.IntRange: int hashCode()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleKeyEvent(android.view.KeyEvent)
net.touchcapture.qr.flutterqr.QRView$1: void onActivityStarted(android.app.Activity)
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
androidx.cursoradapter.widget.CursorFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)
com.journeyapps.barcodescanner.camera.CameraManager: int calculateDisplayRotation()
com.google.zxing.common.reedsolomon.GenericGFPoly: int evaluateAt(int)
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.EventLoop: long getNextTime()
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
androidx.fragment.app.FragmentController: void restoreSaveState(android.os.Parcelable)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean remove()
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[])
com.journeyapps.barcodescanner.camera.AutoFocusManager: int access$000(com.journeyapps.barcodescanner.camera.AutoFocusManager)
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[])
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.Fragment getFragment()
kotlinx.coroutines.channels.AbstractChannel$Itr: AbstractChannel$Itr(kotlinx.coroutines.channels.AbstractChannel)
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
androidx.arch.core.executor.DefaultTaskExecutor$1: DefaultTaskExecutor$1(androidx.arch.core.executor.DefaultTaskExecutor)
kotlinx.coroutines.InvokeOnCancelling: InvokeOnCancelling(kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void dispatchCreate()
androidx.appcompat.widget.AppCompatImageHelper: android.content.res.ColorStateList getSupportImageTintList()
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: java.lang.Object parseResult(int,android.content.Intent)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()
androidx.appcompat.widget.SearchView: void adjustDropDownSizeAndPosition()
androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)
com.google.zxing.common.DecoderResult: int getNumBits()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()
com.google.zxing.common.HybridBinarizer: int[][] calculateBlackPoints(byte[],int,int,int,int)
kotlin.collections.EmptyMap: boolean containsKey(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)
kotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
androidx.fragment.app.Fragment: void setPopDirection(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task)
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4202(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
com.journeyapps.barcodescanner.DecoderThread: void start()
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)
androidx.lifecycle.SavedStateHandleController$OnRecreation: void onRecreated(androidx.savedstate.SavedStateRegistryOwner)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.view.ActionBarPolicy: int getTabContainerHeight()
kotlinx.coroutines.flow.internal.SafeCollector: void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionElement,java.lang.Object)
kotlin.collections.EmptyList: java.util.ListIterator listIterator()
androidx.collection.MapCollections$KeySet: void clear()
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isChecked()
androidx.core.graphics.drawable.WrappedDrawableState: WrappedDrawableState(androidx.core.graphics.drawable.WrappedDrawableState)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
androidx.appcompat.widget.ListPopupWindow$2: void run()
kotlin.collections.EmptySet: java.lang.String toString()
com.google.zxing.oned.rss.expanded.ExpandedPair: boolean equals(java.lang.Object)
androidx.interpolator.view.animation.LookupTableInterpolator: float getInterpolation(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: VectorDrawableCompat$VectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
kotlinx.coroutines.scheduling.Task: Task()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void incrementPosition(int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()
com.google.zxing.aztec.AztecReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
kotlin.ranges.IntProgression: boolean isEmpty()
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AlertController: void setupCustomContent(android.view.ViewGroup)
androidx.fragment.app.Fragment: void performStop()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler)
androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
kotlinx.coroutines.JobSupport: boolean getHandlesException$kotlinx_coroutines_core()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersHorizontal(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatDrawableManager: void preload()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.String)
androidx.fragment.app.FragmentManager: void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)
com.google.zxing.oned.rss.DataCharacter: DataCharacter(int,int)
androidx.window.core.Bounds: boolean isZero()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
androidx.fragment.app.FragmentContainerView: void dispatchDraw(android.graphics.Canvas)
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ForwardingListener: void onViewDetachedFromWindow(android.view.View)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getPostCode2Length(byte[])
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
androidx.fragment.app.FragmentTransitionCompat21$5: android.graphics.Rect onGetEpicenter(android.transition.Transition)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
io.flutter.view.AccessibilityBridge: boolean doesLayoutInDisplayCutoutModeRequireLeftInset()
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.zxing.qrcode.decoder.BitMatrixParser: void remask()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hideOverflowMenu()
androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferEmpty()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: boolean systemProp(java.lang.String,boolean)
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
com.journeyapps.barcodescanner.camera.CenterCropStrategy: CenterCropStrategy()
kotlinx.coroutines.EventLoop: boolean processUnconfinedEvent()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
androidx.core.graphics.Insets: androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)
androidx.core.widget.TextViewCompat$OreoCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getOpacity()
androidx.appcompat.view.menu.MenuPopup: boolean closeMenuOnSubMenuOpened()
androidx.appcompat.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.appcompat.view.menu.MenuBuilder: void setGroupVisible(int,boolean)
androidx.appcompat.widget.AppCompatProgressBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.fragment.app.FragmentManager$10: void onActivityResult(java.lang.Object)
androidx.appcompat.widget.Toolbar: boolean canShowOverflowMenu()
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setDecoderFactory(com.journeyapps.barcodescanner.DecoderFactory)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.journeyapps.barcodescanner.BarcodeView: void stopDecoding()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.google.zxing.Result: Result(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat)
androidx.appcompat.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
androidx.appcompat.view.ContextThemeWrapper: int getThemeResId()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element)
androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)
kotlinx.coroutines.CompletedContinuation: java.lang.String toString()
androidx.collection.MapCollections: java.util.Collection getValues()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
androidx.appcompat.view.menu.MenuItemImpl: int getNumericModifiers()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,char,java.lang.String)
androidx.appcompat.widget.RtlSpacingHelper: int getLeft()
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(float,io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceTypeName(int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.Throwable invoke(java.lang.Throwable)
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
com.google.zxing.qrcode.decoder.DataMask$5: boolean isMasked(int,int)
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: android.graphics.Rect calculateFramingRect(android.graphics.Rect,android.graphics.Rect)
androidx.appcompat.app.WindowDecorActionBar: void dispatchMenuVisibilityChanged(boolean)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.google.zxing.common.reedsolomon.ReedSolomonException: ReedSolomonException(java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.String processVariableAI(int,int,java.lang.String)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: java.lang.Object[] newArray(int)
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getTitle()
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: void setFramingRect(int,int,int)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()
kotlin.UNINITIALIZED_VALUE: UNINITIALIZED_VALUE()
androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getOpacity()
com.google.zxing.InvertedLuminanceSource: com.google.zxing.LuminanceSource rotateCounterClockwise()
com.google.zxing.common.BitSource: int getBitOffset()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)
io.flutter.view.AccessibilityBridge: void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: JobSupport$addLastAtomic$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean canShowOverflowMenu()
androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context)
androidx.appcompat.view.menu.MenuWrapperICS: MenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenu)
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: LockFreeTaskQueueCore$Placeholder(int)
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: DartMessenger$BufferedMessageInfo(java.nio.ByteBuffer,int,long)
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Object newFamily()
com.google.zxing.pdf417.decoder.ec.ModulusGF: int inverse(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView)
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
androidx.fragment.app.FragmentActivity: void onPostResume()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
io.flutter.plugin.common.StringCodec: StringCodec()
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
androidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parse(java.net.URL)
kotlinx.coroutines.scheduling.CoroutineScheduler: int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
kotlin.collections.EmptyList: boolean removeAll(java.util.Collection)
com.google.zxing.qrcode.detector.FinderPatternFinder: int findRowSkip()
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
com.google.zxing.BinaryBitmap: int getWidth()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.common.DecoderResult decodeCodewords(int[],int,int[])
androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
com.journeyapps.barcodescanner.CaptureActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.view.SupportActionModeWrapper: void setTitleOptionalHint(boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)
androidx.appcompat.widget.AbsActionBarView: void access$001(androidx.appcompat.widget.AbsActionBarView,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()
androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)
kotlinx.coroutines.EventLoop: void shutdown()
kotlinx.coroutines.AbstractCoroutine: java.lang.String cancellationExceptionMessage()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)
com.google.zxing.pdf417.decoder.DetectionResult: void setBoundingBox(com.google.zxing.pdf417.decoder.BoundingBox)
com.google.zxing.oned.UPCEANExtension5Support: java.util.Map parseExtensionString(java.lang.String)
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.collection.SimpleArrayMap: int size()
kotlinx.coroutines.JobSupport: boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.appcompat.view.menu.StandardMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.fragment.app.FragmentManager: void completeShowHideFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setHorizontalOriginalOffset(int)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void autoFocusAgainLater()
androidx.appcompat.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()
kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
kotlinx.coroutines.internal.SystemPropsKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
androidx.collection.SparseArrayCompat: int keyAt(int)
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
net.touchcapture.qr.flutterqr.QRView: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.zxing.qrcode.decoder.DataMask$8: DataMask$8(java.lang.String,int)
io.flutter.embedding.android.KeyboardManager: void destroy()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable tryCopyAndVerify(java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
com.journeyapps.barcodescanner.camera.CameraInstance: void access$200(com.journeyapps.barcodescanner.camera.CameraInstance,java.lang.Exception)
kotlinx.coroutines.CompletedExceptionally: boolean makeHandled()
androidx.appcompat.widget.AppCompatTextClassifierHelper: AppCompatTextClassifierHelper(android.widget.TextView)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionCollapse(android.view.MenuItem)
com.journeyapps.barcodescanner.CameraPreview: void onAttachedToWindow()
androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
kotlinx.coroutines.YieldContext$Key: YieldContext$Key()
androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)
androidx.appcompat.app.AlertController$4: AlertController$4(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setEnabled(boolean)
com.google.zxing.common.reedsolomon.GenericGF: int getGeneratorBase()
androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()
androidx.appcompat.view.StandaloneActionMode: void setTitleOptionalHint(boolean)
androidx.appcompat.widget.AppCompatDrawableManager$1: AppCompatDrawableManager$1()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: java.lang.Object getInputContentInfo()
androidx.fragment.app.BackStackRecord: BackStackRecord(androidx.fragment.app.FragmentManager)
androidx.core.widget.TextViewCompat$OreoCallback: boolean isEditable(android.widget.TextView)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void drawableStateChanged()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void clearExtrasSpans()
com.google.zxing.aztec.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult)
com.google.zxing.oned.UPCEANExtension2Support: java.util.Map parseExtensionString(java.lang.String)
androidx.fragment.app.DefaultSpecialEffectsController: void captureTransitioningViews(java.util.ArrayList,android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
com.google.zxing.oned.Code93Reader: void checkChecksums(java.lang.CharSequence)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.StackTraceElement artificialFrame(java.lang.String)
com.google.zxing.LuminanceSource: int getHeight()
com.journeyapps.barcodescanner.RawImageData: byte[] rotateCW(byte[],int,int)
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
androidx.lifecycle.LiveData: LiveData()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)
androidx.core.provider.CallbackWithHandler$1: CallbackWithHandler$1(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isStateful()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
com.journeyapps.barcodescanner.RotationListener$1: void onOrientationChanged(int)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
kotlinx.coroutines.JobSupport$Finishing: java.lang.String toString()
androidx.appcompat.view.menu.MenuItemImpl$1: MenuItemImpl$1(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
com.journeyapps.barcodescanner.camera.DisplayConfiguration: android.graphics.Rect scalePreview(com.journeyapps.barcodescanner.Size)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.appcompat.view.menu.StandardMenuPopup$1: StandardMenuPopup$1(androidx.appcompat.view.menu.StandardMenuPopup)
androidx.appcompat.view.WindowCallbackWrapper: WindowCallbackWrapper(android.view.Window$Callback)
androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()
kotlin.collections.EmptyMap: java.lang.Object remove(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
androidx.collection.LongSparseArray: LongSparseArray()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getMax(int[])
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()
androidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeStepGranularity()
androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()
com.google.zxing.qrcode.detector.FinderPatternFinder: float crossCheckHorizontal(int,int,int,int)
com.journeyapps.barcodescanner.Size: java.lang.String toString()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: int getDegree()
com.google.zxing.oned.ITFReader: int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[])
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.TintTypedArray: int getInt(int,int)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.google.zxing.oned.MultiFormatUPCEANReader: void reset()
androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)
androidx.collection.ArraySet: void allocArrays(int)
com.google.zxing.oned.rss.FinderPattern: com.google.zxing.ResultPoint[] getResultPoints()
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: void possibleResultPoints(java.util.List)
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(int)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence)
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff$Mode)
com.journeyapps.barcodescanner.CameraPreview: void access$300(com.journeyapps.barcodescanner.CameraPreview,com.journeyapps.barcodescanner.Size)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)
androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasFocus()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
androidx.appcompat.view.menu.StandardMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.Size getPreviewSize()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: PlatformViewsChannel$1$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)
com.google.zxing.pdf417.detector.Detector: float patternMatchVariance(int[],int[],float)
androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)
com.google.zxing.client.android.AmbientLightManager: void start()
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: DecodedInformation(int,java.lang.String,int)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onChanged()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
kotlin.random.Random: Random()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.appcompat.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.collection.LongSparseArray: void clear()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
kotlinx.coroutines.JobSupport: boolean isActive()
kotlinx.coroutines.NodeList: java.lang.String toString()
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
androidx.appcompat.view.menu.ListMenuItemView: void insertRadioButton()
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
kotlinx.coroutines.scheduling.TaskImpl: void run()
com.google.zxing.oned.rss.FinderPattern: int hashCode()
androidx.versionedparcelable.ParcelImpl: int describeContents()
androidx.collection.ArraySet$1: java.lang.Object colSetValue(int,java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.lifecycle.ReportFragment: void onResume()
androidx.appcompat.view.menu.SubMenuWrapperICS: void clearHeader()
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.appcompat.view.menu.ActionMenuItem: boolean isVisible()
kotlinx.coroutines.JobSupport: boolean isScopedCoroutine()
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
androidx.fragment.app.Fragment$4: Fragment$4(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatTextHelper: void setTextSize(int,float)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()
androidx.fragment.app.Fragment: void noteStateNotSaved()
io.flutter.plugin.platform.PlatformViewsController$1: long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
kotlinx.coroutines.DispatchedTaskKt: boolean isReusableMode(int)
androidx.core.util.Preconditions: int checkFlagsArgument(int,int)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
androidx.appcompat.widget.TintTypedArray: TintTypedArray(android.content.Context,android.content.res.TypedArray)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapOf(kotlin.Pair[])
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.zxing.common.BitArray: int[] makeArray(int)
androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.Codeword[] getCodewords()
androidx.appcompat.widget.AppCompatSeekBarHelper: void applyTickMarkTint()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: InputContentInfoCompat$InputContentInfoCompatApi25Impl(java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
androidx.appcompat.app.AlertController$3: AlertController$3(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
androidx.appcompat.widget.Toolbar: boolean shouldCollapse()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
androidx.fragment.app.Fragment: void performLowMemory()
kotlinx.coroutines.internal.Symbol: java.lang.String toString()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)
androidx.activity.result.ActivityResult: int describeContents()
com.google.zxing.oned.OneDReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
kotlin.Pair: Pair(java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: void performResume()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
kotlin.text.StringsKt__StringsKt: java.util.List lines(java.lang.CharSequence)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.widget.ActionMenuPresenter: void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
com.google.zxing.qrcode.decoder.DataMask: void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: com.journeyapps.barcodescanner.Size getBestPreviewSize(java.util.List,com.journeyapps.barcodescanner.Size)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.google.zxing.oned.CodaBarReader: int findStartPattern()
com.google.zxing.oned.CodaBarReader: void validatePattern(int)
androidx.collection.ArrayMap: java.util.Set entrySet()
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)
androidx.core.app.ActivityRecreator$3: void run()
androidx.fragment.app.FragmentManager: boolean isStateAtLeast(int)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeVirtualDisplayForPlatformView(int)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: com.google.zxing.common.DecoderResult decode(byte[],int)
androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.zxing.qrcode.decoder.Decoder: Decoder()
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(java.lang.Object)
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder: AI013103decoder(com.google.zxing.common.BitArray)
kotlinx.coroutines.CoroutineName: boolean equals(java.lang.Object)
androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
com.google.zxing.oned.rss.DataCharacter: java.lang.String toString()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)
com.google.zxing.pdf417.decoder.BoundingBox: int getMinX()
com.google.zxing.oned.rss.RSS14Reader: int[] findFinderPattern(com.google.zxing.common.BitArray,boolean)
androidx.activity.result.ActivityResult: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core()
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
com.google.zxing.oned.rss.Pair: Pair(int,int,com.google.zxing.oned.rss.FinderPattern)
com.google.zxing.qrcode.decoder.DataBlock: int getNumDataCodewords()
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder: java.lang.String parseInformation()
androidx.fragment.app.FragmentManager: boolean isStateSaved()
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)
com.google.zxing.oned.EAN13Reader: EAN13Reader()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
androidx.appcompat.widget.SearchView: void updateVoiceButton(boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: void updateDensity(android.content.res.Resources)
androidx.appcompat.app.AppCompatActivity$1: AppCompatActivity$1(androidx.appcompat.app.AppCompatActivity)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
com.google.zxing.Result: Result(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat,long)
androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.window.core.Bounds: int getWidth()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.appcompat.widget.ScrollingTabContainerView: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getNext()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: ResourceManagerInternal$AsldcInflateDelegate()
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ListPopupWindow: void removePromptView()
kotlinx.coroutines.CommonPool: void isGoodCommonPool$lambda-9()
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setVerticalOffset(int)
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: LoaderManagerImpl$LoaderViewModel$1()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: int getCompoundPaddingLeft(int)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: int getCount()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()
kotlin.ranges.IntProgressionIterator: IntProgressionIterator(int,int,int)
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
androidx.appcompat.widget.TooltipCompatHandler: void cancelPendingShow()
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key()
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumbersFromLRI()
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: AppCompatViewInflater$DeclaredOnClickListener(android.view.View,java.lang.String)
androidx.collection.ArraySet$1: int colIndexOfValue(java.lang.Object)
kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionPause(android.transition.Transition)
kotlinx.coroutines.CancellableContinuationImpl: void multipleHandlersError(kotlin.jvm.functions.Function1,java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.lang.String findSettableValue(java.lang.String,java.util.Collection,java.lang.String[])
androidx.appcompat.view.menu.MenuDialogHelper: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.view.menu.MenuPopup: boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
androidx.appcompat.view.menu.MenuPopupHelper$1: MenuPopupHelper$1(androidx.appcompat.view.menu.MenuPopupHelper)
kotlin.jvm.internal.TypeIntrinsics: int getFunctionArity(java.lang.Object)
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder: AI013x0xDecoder(com.google.zxing.common.BitArray)
androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)
androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)
com.google.zxing.pdf417.decoder.DetectionResultColumn: void setCodeword(int,com.google.zxing.pdf417.decoder.Codeword)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect calculateFramingRect(android.graphics.Rect,android.graphics.Rect)
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock()
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)
androidx.appcompat.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
com.google.zxing.qrcode.detector.FinderPattern: FinderPattern(float,float,float)
androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void setIsoIec646()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.zxing.oned.UPCEANExtension2Support: UPCEANExtension2Support()
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: void run()
com.google.zxing.datamatrix.DataMatrixReader: int moduleSize(int[],com.google.zxing.common.BitMatrix)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.lang.Throwable tryCopyException(java.lang.Throwable)
com.google.zxing.ResultPoint: int hashCode()
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationEnd(android.animation.Animator)
com.journeyapps.barcodescanner.RawImageData: byte[] rotate180(byte[],int,int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()
kotlin.ranges.IntRange: IntRange(int,int)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void findNextPair(com.google.zxing.common.BitArray,java.util.List,int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()
androidx.fragment.app.FragmentAnim$2: FragmentAnim$2(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: void onDismiss()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String,int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.zxing.common.BitArray: void setBulk(int,int)
com.google.zxing.pdf417.PDF417ResultMetadata: void setFileId(java.lang.String)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)
androidx.appcompat.widget.ScrollingTabContainerView: boolean performExpand()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2900(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void onActionProviderVisibilityChanged(boolean)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setNextParkedWorker(java.lang.Object)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)
com.google.zxing.oned.UPCEANExtension5Support: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.journeyapps.barcodescanner.CaptureActivity: CaptureActivity()
androidx.fragment.app.FragmentContainerView: void removeView(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$1: boolean onForwardingStarted()
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
androidx.activity.result.contract.ActivityResultContract: ActivityResultContract()
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.Window,androidx.core.view.WindowInsetsControllerCompat)
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void park()
androidx.appcompat.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)
com.benjaminabel.vibration.VibrationPlugin: void teardownChannels()
androidx.appcompat.app.AlertController: int getIconAttributeResId(int)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int)
com.google.zxing.aztec.decoder.Decoder: com.google.zxing.aztec.decoder.Decoder$Table getTable(char)
androidx.appcompat.widget.DropDownListView: void clearPressedItem()
androidx.appcompat.widget.AppCompatTextHelper: int[] getAutoSizeTextAvailableSizes()
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
kotlinx.coroutines.internal.InlineList: java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object)
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int getDecodedValue(int[])
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: java.lang.String getPostCode3(byte[])
kotlin.collections.EmptySet: java.lang.Object[] toArray()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context)
com.google.zxing.common.detector.WhiteRectangleDetector: boolean containsBlackPoint(int,int,int,boolean)
com.journeyapps.barcodescanner.BarcodeView: BarcodeView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void complete()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
com.google.zxing.oned.rss.AbstractRSSReader: int[] getDecodeFinderCounters()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)
com.journeyapps.barcodescanner.camera.CameraInstance: boolean isCameraClosed()
androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.appcompat.widget.MenuPopupWindow: MenuPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int,java.lang.String)
androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])
androidx.core.app.ActivityRecreator$2: void run()
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly)
kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion()
androidx.fragment.app.FragmentTransition$4: FragmentTransition$4(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.View getActionView()
io.flutter.Log: void v(java.lang.String,java.lang.String)
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
androidx.core.provider.FontRequestWorker$4: FontRequestWorker$4(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: AnimatedStateListDrawableCompat$FrameInterpolator(android.graphics.drawable.AnimationDrawable,boolean)
androidx.core.graphics.TypefaceCompatBaseImpl: long getUniqueKey(android.graphics.Typeface)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
io.flutter.plugin.platform.PlatformViewsController$1: void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
com.google.zxing.oned.UPCEANReader: UPCEANReader()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.appcompat.app.AlertController: void setMessage(java.lang.CharSequence)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int)
androidx.appcompat.app.WindowDecorActionBar: void completeDeferredDestroyActionMode()
androidx.fragment.app.FragmentManager: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
com.google.zxing.qrcode.decoder.Mode: int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version)
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferAlwaysEmpty()
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: ListPopupWindow$ResizePopupRunnable(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.app.AlertController: void setupView()
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
com.journeyapps.barcodescanner.DecoderThread$2: void onPreview(com.journeyapps.barcodescanner.SourceData)
androidx.appcompat.view.menu.MenuDialogHelper: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void post()
androidx.appcompat.widget.AlertDialogLayout: boolean tryOnMeasure(int,int)
androidx.appcompat.view.menu.MenuWrapperICS: boolean isShortcutKey(int,android.view.KeyEvent)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: ThreadContextKt$countAll$1()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.collection.ArrayMap$1: void colClear()
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setFlags(int)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: StateListDrawable$StateListState(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme getTheme()
androidx.fragment.app.FragmentManager: java.lang.String toString()
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: AnimatedVectorDrawableCompat$1(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.ResourcesWrapper: void getValue(java.lang.String,android.util.TypedValue,boolean)
com.journeyapps.barcodescanner.ViewfinderView: void setLaserVisibility(boolean)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()
com.journeyapps.barcodescanner.DecoderThread: void setCropRect(android.graphics.Rect)
com.google.zxing.pdf417.PDF417ResultMetadata: PDF417ResultMetadata()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.appcompat.view.ActionBarPolicy: int getStackedTabMaxWidth()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)
androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)
androidx.core.view.ViewCompat$1: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)
com.journeyapps.barcodescanner.CameraPreview$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
androidx.appcompat.widget.ToolbarWidgetWrapper: void collapseActionView()
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
androidx.fragment.app.Fragment$4: boolean onHasView()
androidx.window.core.Version: int hashCode()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
androidx.appcompat.view.menu.MenuItemImpl: MenuItemImpl(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
androidx.fragment.app.FragmentController: void noteStateNotSaved()
androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: int extractNumericValueFromBitArray(int,int)
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern getTopRight()
io.flutter.plugin.common.StandardMessageCodec: void writeFloat(java.io.ByteArrayOutputStream,float)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable()
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()
androidx.fragment.app.SpecialEffectsController$Operation: void addCompletionListener(java.lang.Runnable)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
com.google.zxing.aztec.AztecDetectorResult: int getNbLayers()
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int,boolean)
androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])
androidx.core.graphics.TypefaceCompatApi24Impl: TypefaceCompatApi24Impl()
kotlinx.coroutines.CommonPool: void close()
com.journeyapps.barcodescanner.Decoder: com.google.zxing.Result decode(com.google.zxing.LuminanceSource)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isStillNumeric(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: boolean onPreDraw()
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.jvm.internal.CallableReference$NoReceiver: CallableReference$NoReceiver()
androidx.activity.result.ActivityResult: int getResultCode()
androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl$3: AppCompatDelegateImpl$3(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.zxing.oned.rss.RSS14Reader: void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)
com.google.zxing.oned.rss.AbstractRSSReader: float[] getOddRoundingErrors()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker(long)
kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
io.flutter.plugin.editing.TextInputPlugin: boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)
androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)
androidx.collection.ArraySet: ArraySet(int)
com.google.zxing.oned.EANManufacturerOrgSupport: void add(int[],java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
com.journeyapps.barcodescanner.ViewfinderView: void refreshSizes()
androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()
androidx.appcompat.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)
kotlinx.coroutines.DispatchedTaskKt: void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean)
androidx.core.provider.FontRequest: java.lang.String getProviderPackage()
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(java.util.List,java.util.List)
androidx.appcompat.widget.DropDownListView: void drawSelectorCompat(android.graphics.Canvas)
com.journeyapps.barcodescanner.camera.CameraThread: void enqueue(java.lang.Runnable)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List checkRows(boolean)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)
androidx.appcompat.view.menu.MenuDialogHelper: void onDismiss(android.content.DialogInterface)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.core.widget.TextViewCompat$OreoCallback: TextViewCompat$OreoCallback(android.view.ActionMode$Callback,android.widget.TextView)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
androidx.collection.ArraySet: boolean remove(java.lang.Object)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean hasSharedElementTransition()
androidx.core.content.res.GrowingArrayUtils: int growSize(int)
androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
kotlin.collections.EmptyList: void add(int,java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: void decode(int[],int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(int)
androidx.core.view.inputmethod.EditorInfoCompat: void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()
androidx.core.widget.AutoScrollHelper$ClampedScroller: boolean isFinished()
com.journeyapps.barcodescanner.CaptureManager: com.journeyapps.barcodescanner.DecoratedBarcodeView access$000(com.journeyapps.barcodescanner.CaptureManager)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$2: void onGlobalLayout()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])
kotlinx.coroutines.internal.ScopeCoroutine: boolean isScopedCoroutine()
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()
kotlinx.coroutines.AbstractCoroutine: boolean isActive()
com.journeyapps.barcodescanner.camera.CameraThread: CameraThread()
androidx.fragment.app.FragmentStore: void moveToExpectedState()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.core.view.inputmethod.EditorInfoCompat$Impl30: void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.journeyapps.barcodescanner.InvertedDecoder: InvertedDecoder(com.google.zxing.Reader)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
com.journeyapps.barcodescanner.CaptureManager: void setShowMissingCameraPermissionDialog(boolean,java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIntent(android.content.Intent)
kotlinx.coroutines.internal.SystemPropsKt: boolean systemProp(java.lang.String,boolean)
androidx.fragment.app.SpecialEffectsController$Operation$1: SpecialEffectsController$Operation$1(androidx.fragment.app.SpecialEffectsController$Operation)
net.touchcapture.qr.flutterqr.QRView: void dispose()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set setOf(java.lang.Object)
kotlinx.coroutines.ChildContinuation: void invoke(java.lang.Throwable)
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
kotlinx.coroutines.CompletedExceptionally: java.lang.String toString()
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.zxing.NotFoundException: NotFoundException()
androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()
kotlinx.coroutines.JobSupport: boolean handleJobException(java.lang.Throwable)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
androidx.appcompat.widget.SearchView: void onTextFocusChanged()
com.google.zxing.FormatException: FormatException(java.lang.Throwable)
androidx.core.provider.FontRequestWorker$4: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)
androidx.appcompat.app.WindowDecorActionBar: void enableContentAnimations(boolean)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void recalcViewsWithUnhandled()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean isOutOfBounds(int,int)
kotlinx.coroutines.CoroutineStart: boolean isLazy()
androidx.fragment.app.FragmentManager: void handleOnBackPressed()
com.journeyapps.barcodescanner.ViewfinderView$1: void previewStarted()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context)
androidx.appcompat.app.AlertController$2: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
androidx.appcompat.view.menu.MenuDialogHelper: void dismiss()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
androidx.appcompat.view.menu.MenuPopupHelper: void setGravity(int)
com.journeyapps.barcodescanner.CaptureActivity: boolean onKeyDown(int,android.view.KeyEvent)
androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)
androidx.window.embedding.SplitController: SplitController()
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)
com.google.zxing.oned.MultiFormatUPCEANReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.appcompat.widget.Toolbar$SavedState$1: Toolbar$SavedState$1()
com.journeyapps.barcodescanner.CaptureActivity: void onResume()
kotlinx.coroutines.CancellableContinuationImpl: void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: ActionMenuPresenter$ActionMenuPopupCallback(androidx.appcompat.widget.ActionMenuPresenter)
androidx.fragment.app.FragmentManager: void cancelExitAnimation(androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)
com.google.zxing.common.DecoderResult: int getStructuredAppendParity()
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void doAfterTextChanged(android.widget.AutoCompleteTextView)
androidx.appcompat.widget.SearchView: android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
com.google.zxing.Result: Result(java.lang.String,byte[],int,com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat,long)
androidx.appcompat.widget.SearchView: boolean onItemSelected(int)
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
androidx.appcompat.widget.SearchView$4: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
androidx.appcompat.view.menu.StandardMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.fragment.app.FragmentActivity$2: FragmentActivity$2(androidx.fragment.app.FragmentActivity)
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void close()
com.google.zxing.qrcode.decoder.DataMask$6: DataMask$6(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: ThreadContextKt$findOne$1()
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.appcompat.view.SupportMenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
androidx.appcompat.widget.AppCompatToggleButton: void drawableStateChanged()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.appcompat.widget.SearchView: int getMaxWidth()
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.appcompat.app.AppCompatDelegateImpl$5: void onDetachedFromWindow()
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onDetachedFromActivity()
kotlin.collections.EmptyList: java.util.Iterator iterator()
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
androidx.fragment.app.SpecialEffectsController: void updateOperationDirection(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean onStateChanged(int[])
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
com.google.zxing.oned.Code39Reader: int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[])
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.appcompat.view.StandaloneActionMode: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.app.AlertDialog: void setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.loader.FlutterLoader: boolean automaticallyRegisterPlugins()
androidx.appcompat.app.AppCompatDelegate: void setTheme(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()
io.flutter.embedding.android.FlutterSplashView: void displayFlutterViewWithSplash(io.flutter.embedding.android.FlutterView,io.flutter.embedding.android.SplashScreen)
com.google.zxing.aztec.decoder.Decoder: Decoder()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: ExceptionsConstuctorKt$tryCopyException$4$1()
com.google.zxing.common.reedsolomon.GenericGFPoly: int getCoefficient(int)
androidx.core.widget.NestedScrollView: void stopNestedScroll()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int,java.lang.Object[])
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.appcompat.view.menu.ActionMenuItem: char getNumericShortcut()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void afterTask(int)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: ActionMenuView$ActionMenuPresenterCallback()
androidx.appcompat.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
androidx.core.provider.FontRequest: java.lang.String getQuery()
kotlinx.coroutines.EventLoopImplBase: boolean isEmpty()
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
com.google.zxing.aztec.detector.Detector: com.google.zxing.aztec.AztecDetectorResult detect(boolean)
androidx.appcompat.widget.ActionBarBackgroundDrawable: int getOpacity()
androidx.appcompat.app.AlertController: boolean shouldCenterSingleButton(android.content.Context)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
androidx.window.core.Version: int getMinor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean getPadding(android.graphics.Rect)
com.journeyapps.barcodescanner.RotationListener$1: RotationListener$1(com.journeyapps.barcodescanner.RotationListener,android.content.Context,int)
androidx.activity.result.ActivityResult: java.lang.String resultCodeToString(int)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.fragment.app.Fragment: int getEnterAnim()
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
androidx.appcompat.widget.SearchView$7: SearchView$7(androidx.appcompat.widget.SearchView)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.appcompat.view.menu.ActionMenuItemView: void updateTextButtonVisibility()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: void onDismiss()
androidx.core.view.DisplayCutoutCompat: int hashCode()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setStyle(android.content.Context)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$6600(io.flutter.view.AccessibilityBridge,int)
androidx.fragment.app.FragmentTransitionImpl$1: FragmentTransitionImpl$1(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean isEmpty()
androidx.tracing.Trace: void endSection()
com.journeyapps.barcodescanner.camera.CameraInstance: CameraInstance(android.content.Context)
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
androidx.appcompat.widget.LinearLayoutCompat: void onMeasure(int,int)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.String processFixedAI(int,int,java.lang.String)
androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: FinderPatternFinder$CenterComparator(float,com.google.zxing.qrcode.detector.FinderPatternFinder$1)
androidx.fragment.app.SpecialEffectsController$Operation: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.lifecycle.ClassesInfoCache$MethodReference: boolean equals(java.lang.Object)
androidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)
com.journeyapps.barcodescanner.DecoderThread: android.os.Handler access$400(com.journeyapps.barcodescanner.DecoderThread)
kotlin.collections.EmptyIterator: EmptyIterator()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.lifecycle.ClassesInfoCache$MethodReference: ClassesInfoCache$MethodReference(int,java.lang.reflect.Method)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy getPreviewScalingStrategy()
androidx.fragment.app.FragmentStore: void setNonConfig(androidx.fragment.app.FragmentManagerViewModel)
androidx.fragment.app.LogWriter: void write(char[],int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.lifecycle.ViewModelStore: java.util.Set keys()
androidx.appcompat.view.menu.MenuItemImpl: void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9)
io.flutter.plugin.platform.PlatformViewsController$1: void synchronizeToNativeViewHierarchy(boolean)
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isMeteringEnabled()
kotlin.coroutines.CombinedContext: int size()
io.flutter.view.AccessibilityBridge: int access$1176(io.flutter.view.AccessibilityBridge,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
androidx.appcompat.widget.DropDownListView: void updateSelectorStateCompat()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()
com.google.zxing.aztec.detector.Detector: int sampleLine(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)
com.journeyapps.barcodescanner.CameraPreview$5: void previewStarted()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
com.google.zxing.qrcode.decoder.DataMask$1: boolean isMasked(int,int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.journeyapps.barcodescanner.SourceData: void setPreviewMirrored(boolean)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport: boolean start()
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
androidx.fragment.app.FragmentManager$4: FragmentManager$4(androidx.fragment.app.FragmentManager)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
androidx.appcompat.app.AppCompatDialog: int getThemeResId(android.content.Context,int)
com.google.zxing.qrcode.decoder.DataMask$2: DataMask$2(java.lang.String,int)
com.google.zxing.aztec.detector.Detector: com.google.zxing.aztec.detector.Detector$Point getMatrixCenter()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasWindowFocus()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object[] newArray(int)
androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
kotlinx.coroutines.DispatchedTaskKt: void resumeUnconfined(kotlinx.coroutines.DispatchedTask)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getStartColumn(com.google.zxing.pdf417.decoder.DetectionResult,int,int,boolean)
com.google.zxing.common.reedsolomon.GenericGF: int exp(int)
com.journeyapps.barcodescanner.InvertedDecoder: com.google.zxing.BinaryBitmap toBitmap(com.google.zxing.LuminanceSource)
kotlinx.coroutines.DispatchedTaskKt: void dispatch(kotlinx.coroutines.DispatchedTask,int)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
kotlinx.coroutines.scheduling.TaskImpl: java.lang.String toString()
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.Decoder createDecoder()
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferEmpty()
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
kotlin.coroutines.jvm.internal.DebugMetadataKt: void checkDebugMetadataVersion(int,int)
com.google.zxing.ResultMetadataType: ResultMetadataType(java.lang.String,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.core.provider.RequestExecutor$ReplyRunnable$1: void run()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.google.zxing.oned.Code93Reader: java.lang.String decodeExtended(java.lang.CharSequence)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.appcompat.view.menu.StandardMenuPopup: boolean isShowing()
com.google.zxing.pdf417.decoder.DetectionResult: void adjustIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.DetectionResultColumn)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: float getInterpolation(float)
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder: java.lang.String parseInformation()
androidx.appcompat.view.menu.ActionMenuItem: int getItemId()
androidx.collection.ArraySet: java.util.Iterator iterator()
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.fragment.app.BackStackRecord: java.lang.String toString()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Void)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.core.widget.TextViewCompat$OreoCallback: void onDestroyActionMode(android.view.ActionMode)
androidx.fragment.app.FragmentTransition$4: void run()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.google.zxing.oned.UPCEANReader: int[] decodeEnd(com.google.zxing.common.BitArray,int)
androidx.lifecycle.LiveData: boolean hasActiveObservers()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
androidx.appcompat.view.menu.MenuItemImpl: android.view.View getActionView()
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.core.widget.NestedScrollView: void initScrollView()
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop()
androidx.appcompat.widget.TooltipPopup: void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.BarcodeView getBarcodeView()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object)
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
androidx.core.view.inputmethod.InputContentInfoCompat: java.lang.Object unwrap()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.google.zxing.oned.rss.expanded.decoders.AI01decoder: void encodeCompressedGtin(java.lang.StringBuilder,int)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void onStart()
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionResume(android.transition.Transition)
kotlin.Pair: java.lang.Object component1()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
com.google.zxing.BinaryBitmap: com.google.zxing.BinaryBitmap rotateCounterClockwise()
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollector: SafeCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
androidx.fragment.app.Fragment: boolean isRemovingParent()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object)
androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)
com.google.zxing.common.DecoderResult: DecoderResult(byte[],java.lang.String,java.util.List,java.lang.String,int,int)
androidx.appcompat.app.AppCompatDelegateImpl$5: void onAttachedFromWindow()
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
androidx.fragment.app.FragmentManagerState: int describeContents()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: int unrandomize255State(int,int)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
kotlinx.coroutines.channels.ConflatedChannel: ConflatedChannel(kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.NonDisposableHandle: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: SafeCollector$collectContextSize$1()
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
io.flutter.plugin.platform.PlatformPlugin: boolean access$1100(io.flutter.plugin.platform.PlatformPlugin)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceName(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)
androidx.appcompat.app.WindowDecorActionBar: boolean shouldAnimateContextView()
com.journeyapps.barcodescanner.CameraPreview: void previewStarted()
androidx.core.app.ActivityCompat$1: ActivityCompat$1(java.lang.String[],android.app.Activity,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.PrecomputedText$Params)
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
androidx.appcompat.view.WindowCallbackWrapper: void onAttachedToWindow()
androidx.appcompat.app.WindowDecorActionBar: void showForActionMode()
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen access$100(io.flutter.embedding.android.FlutterSplashView)
kotlin.sequences.TransformingSequence: java.util.Iterator iterator()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.journeyapps.barcodescanner.CameraPreview$1: CameraPreview$1(com.journeyapps.barcodescanner.CameraPreview)
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionButton()
androidx.core.view.inputmethod.InputConnectionCompat$1: InputConnectionCompat$1(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
androidx.lifecycle.SavedStateHandleController$1: SavedStateHandleController$1(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry)
androidx.appcompat.app.WindowDecorActionBar$1: void onAnimationEnd(android.view.View)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: ListPopupWindow$ListSelectorHider(androidx.appcompat.widget.ListPopupWindow)
kotlinx.coroutines.Unconfined: java.lang.String toString()
net.touchcapture.qr.flutterqr.QRView: void stopScan()
com.google.zxing.aztec.detector.Detector$Point: int getY()
kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()
androidx.appcompat.app.AppCompatActivity$1: android.os.Bundle saveState()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)
androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.window.R$styleable: R$styleable()
androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[])
com.google.zxing.aztec.detector.Detector$Point: com.google.zxing.ResultPoint toResultPoint()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4402(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor)
com.google.zxing.datamatrix.decoder.Decoder: Decoder()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void release()
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()
kotlinx.coroutines.channels.AbstractSendChannel: void onClosedIdempotent(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawable(android.net.Uri)
androidx.fragment.app.SpecialEffectsController$Operation: void onStart()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
com.journeyapps.barcodescanner.CameraPreview: android.os.Parcelable onSaveInstanceState()
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setVideoStabilization(android.hardware.Camera$Parameters)
com.google.zxing.client.android.InactivityTimer: void cancel()
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
com.journeyapps.barcodescanner.CaptureManager: void access$600(com.journeyapps.barcodescanner.CaptureManager)
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean)
io.flutter.plugin.platform.PlatformViewsController: void access$600(io.flutter.plugin.platform.PlatformViewsController,int,int)
kotlin.jvm.internal.FunctionReference: int hashCode()
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.appcompat.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.app.WindowDecorActionBar$2: WindowDecorActionBar$2(androidx.appcompat.app.WindowDecorActionBar)
com.google.zxing.pdf417.PDF417ResultMetadata: void setSender(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getAlphabeticShortcut()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.fragment.app.DefaultSpecialEffectsController$1: DefaultSpecialEffectsController$1(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
kotlinx.coroutines.JobSupport$ChildCompletion: void invoke(java.lang.Throwable)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
androidx.appcompat.widget.SearchView: void onQueryRefine(java.lang.CharSequence)
kotlinx.coroutines.CoroutineDispatcher$Key$1: CoroutineDispatcher$Key$1()
androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
io.flutter.embedding.engine.dart.PlatformTaskQueue: PlatformTaskQueue()
androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: LockFreeLinkedListNode$CondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int)
com.google.zxing.common.detector.MathUtils: int sum(int[])
androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])
kotlin.jvm.internal.TypeIntrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly)
com.journeyapps.barcodescanner.CameraPreview$4: CameraPreview$4(com.journeyapps.barcodescanner.CameraPreview)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent getIntent()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isVisible()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray getCapturedKeys()
com.google.zxing.qrcode.decoder.Version$ECBlocks: int getECCodewordsPerBlock()
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: void encodeCompressedDate(java.lang.StringBuilder,int)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SuggestionsAdapter: void setViewText(android.widget.TextView,java.lang.CharSequence)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)
androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.DetectionResult merge(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn)
androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
kotlin.jvm.internal.Lambda: Lambda(int)
kotlin.collections.EmptyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: boolean tryResume()
androidx.collection.SimpleArrayMap: int indexOfNull()
kotlinx.coroutines.internal.ScopeCoroutine: void afterCompletion(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setContentDescription(java.lang.CharSequence)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCount(java.lang.Class,int)
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly getZero()
io.flutter.embedding.engine.systemchannels.PlatformChannel: void systemChromeChanged(boolean)
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionCancel(android.transition.Transition)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformViewFactory,android.view.Surface,io.flutter.view.TextureRegistry$SurfaceTextureEntry,android.view.View$OnFocusChangeListener,int,java.lang.Object)
androidx.appcompat.widget.SearchView$SavedState$1: SearchView$SavedState$1()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.fragment.app.DefaultSpecialEffectsController: void executeOperations(java.util.List,boolean)
kotlinx.coroutines.JobSupport: java.lang.String cancellationExceptionMessage()
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
com.journeyapps.barcodescanner.DecoderResultPointCallback: DecoderResultPointCallback()
kotlinx.coroutines.DispatchedTask: void run()
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.CancellableContinuationImpl: boolean trySuspend()
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
androidx.appcompat.widget.ListPopupWindow: void setContentWidth(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
androidx.appcompat.view.menu.MenuBuilder: void close()
androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$6: void run()
com.journeyapps.barcodescanner.CaptureManager: void lockOrientation()
kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getVerticalOffset()
androidx.core.graphics.drawable.IconCompat: int getResId()
androidx.appcompat.view.ActionMode: ActionMode()
com.journeyapps.barcodescanner.CaptureManager$2: void cameraError(java.lang.Exception)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)
com.google.zxing.common.HybridBinarizer: com.google.zxing.common.BitMatrix getBlackMatrix()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeViewImmediate(java.lang.Object[])
com.google.zxing.oned.UPCEANReader: boolean checkStandardUPCEANChecksum(java.lang.CharSequence)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
androidx.core.view.ContentInfoCompat: int getFlags()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: void onPreviewFrame(byte[],android.hardware.Camera)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: void run()
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: int decode(int[],int,int[])
androidx.appcompat.widget.AppCompatTextHelper$1: void onFontRetrievalFailed(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)
com.journeyapps.barcodescanner.camera.AutoFocusManager$1: AutoFocusManager$1(com.journeyapps.barcodescanner.camera.AutoFocusManager)
com.google.zxing.oned.Code39Reader: java.lang.String decodeExtended(java.lang.CharSequence)
com.google.zxing.aztec.detector.Detector: int getRotation(int[],int)
androidx.core.provider.FontProvider$1: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setInternalBackgroundTint(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.lifecycle.SavedStateHandleController: void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
com.google.zxing.aztec.decoder.Decoder$Table: Decoder$Table(java.lang.String,int)
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.JobCancellationException: JobCancellationException(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
androidx.activity.result.ActivityResult$1: androidx.activity.result.ActivityResult[] newArray(int)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
com.google.zxing.BinaryBitmap: boolean isRotateSupported()
androidx.appcompat.widget.SearchView: void updateQueryHint()
com.google.zxing.oned.UPCEReader: int[] decodeEnd(com.google.zxing.common.BitArray,int)
com.google.zxing.qrcode.detector.FinderPatternFinder: void shiftCounts2(int[])
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.PorterDuff$Mode getIconTintMode()
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: FlutterQrPlugin()
com.google.zxing.pdf417.decoder.ec.ModulusPoly: int evaluateAt(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemove()
kotlinx.coroutines.CancellableContinuationImpl: void completeResume(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.zxing.oned.UPCAReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
kotlinx.coroutines.scheduling.TaskImpl: TaskImpl(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext)
com.google.zxing.client.android.AmbientLightManager: void onAccuracyChanged(android.hardware.Sensor,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size getFramingRectSize()
androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
androidx.fragment.app.FragmentStore: void removeFragment(androidx.fragment.app.Fragment)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)
androidx.appcompat.widget.SearchView: boolean isSubmitAreaEnabled()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version[] buildVersions()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumbersFromRRI()
androidx.appcompat.widget.TintInfo: void clear()
kotlin.collections.IntIterator: void remove()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleVerticalMovement(boolean,boolean)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion()
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()
kotlinx.coroutines.EventLoopImplBase: void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()
androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)
kotlinx.coroutines.CompletedWithCancellation: CompletedWithCancellation(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.CascadingMenuPopup: void show()
androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()
androidx.appcompat.app.AlertController$ButtonHandler: AlertController$ButtonHandler(android.content.DialogInterface)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMaxTextSize()
kotlin.random.RandomKt: int takeUpperBits(int,int)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)
androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.benjaminabel.vibration.VibrationPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.fragment.app.FragmentLayoutInflaterFactory$1: void onViewDetachedFromWindow(android.view.View)
kotlinx.coroutines.CoroutineExceptionHandler$Key: CoroutineExceptionHandler$Key()
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)
kotlinx.coroutines.DefaultExecutor: boolean isShutdownRequested()
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void scheduleSelf(java.lang.Runnable,long)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
kotlinx.coroutines.EventLoop: boolean isUnconfinedLoopActive()
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: ActionMenuItemView$ActionMenuItemForwardingListener(androidx.appcompat.view.menu.ActionMenuItemView)
androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity attachedActivity()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onMeasure(int,int)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)
com.google.zxing.aztec.detector.Detector: boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point)
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: void run()
androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()
com.journeyapps.barcodescanner.SourceData: com.google.zxing.PlanarYUVLuminanceSource createSource()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(java.lang.Object,java.lang.Object)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map)
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()
com.google.zxing.datamatrix.decoder.Version$ECB: int getDataCodewords()
androidx.appcompat.app.AppCompatDelegateImpl: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.Fragment: boolean isStateSaved()
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int getClosestDecodedValue(int[])
com.google.zxing.LuminanceSource: java.lang.String toString()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: int getPosition()
androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)
androidx.appcompat.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)
androidx.appcompat.view.menu.SubMenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void removePartialRows(java.util.List,java.util.List)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: ScrollingTabContainerView$TabAdapter(androidx.appcompat.widget.ScrollingTabContainerView)
kotlin.coroutines.jvm.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getCodewordBucketNumber(int[])
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
com.google.zxing.datamatrix.detector.Detector: Detector(com.google.zxing.common.BitMatrix)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMinTextSize()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
androidx.appcompat.widget.TintTypedArray: void recycle()
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
androidx.fragment.app.FragmentManagerViewModel: FragmentManagerViewModel(boolean)
com.google.zxing.common.BitArray: void reverse()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: DropDownListView$GateKeeperDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: boolean isVisibilityUnchanged()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.IntIterator: java.lang.Integer next()
androidx.appcompat.app.LayoutIncludeDetector: org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque)
kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()
androidx.fragment.app.FragmentActivity$2: void onContextAvailable(android.content.Context)
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
androidx.lifecycle.ReportFragment: void onDestroy()
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCount$default(java.lang.Class,int,int,java.lang.Object)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4400(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: java.lang.Object getInputContentInfo()
androidx.appcompat.app.AppCompatDelegateImpl: void reopenMenu(boolean)
com.journeyapps.barcodescanner.ViewfinderView: ViewfinderView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterView: java.util.Set access$200(io.flutter.embedding.android.FlutterView)
kotlinx.coroutines.EventLoopImplBase: boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean onStateChange(int[])
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
androidx.appcompat.view.WindowCallbackWrapper: void onDetachedFromWindow()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
com.journeyapps.barcodescanner.Decoder: void foundPossibleResultPoint(com.google.zxing.ResultPoint)
kotlin.collections.EmptyList: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,android.content.res.Resources$Theme)
androidx.core.view.ViewPropertyAnimatorCompat: ViewPropertyAnimatorCompat(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
androidx.appcompat.widget.AppCompatReceiveContentHelper: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListener(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.google.zxing.datamatrix.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$1)
com.google.zxing.datamatrix.decoder.Version: int getSymbolSizeRows()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.appcompat.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()
androidx.fragment.app.FragmentActivity: void init()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getCurrent()
androidx.core.content.res.ComplexColorCompat: ComplexColorCompat(android.graphics.Shader,android.content.res.ColorStateList,int)
androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(java.lang.CharSequence)
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
androidx.appcompat.widget.TintContextWrapper: void setTheme(int)
androidx.appcompat.widget.TintTypedArray: boolean getBoolean(int,boolean)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute()
androidx.core.graphics.TypefaceCompatApi29Impl: TypefaceCompatApi29Impl()
com.journeyapps.barcodescanner.CameraPreview: android.view.TextureView$SurfaceTextureListener surfaceTextureListener()
androidx.appcompat.view.menu.ListMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
androidx.core.graphics.drawable.WrappedDrawableApi14: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupCheckable(int,boolean,boolean)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14(androidx.core.view.ViewPropertyAnimatorCompat)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)
com.journeyapps.barcodescanner.Size: com.journeyapps.barcodescanner.Size rotate()
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
com.google.zxing.qrcode.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.qrcode.decoder.Version$ECB[])
androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
kotlinx.coroutines.CancellableContinuationImpl: void dispatchResume(int)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.appcompat.widget.AppCompatSpinner: void onRestoreInstanceState(android.os.Parcelable)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
io.flutter.embedding.android.FlutterImageView: void pause()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isStateful()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List listOf(java.lang.Object)
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object invoke(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[])
kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.journeyapps.barcodescanner.ViewfinderView$1: void cameraError(java.lang.Exception)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()
kotlinx.coroutines.channels.Closed: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
kotlin.coroutines.CombinedContext$toString$1: CombinedContext$toString$1()
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintList(android.content.res.ColorStateList)
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.SubMenu addSubMenuItem()
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.journeyapps.barcodescanner.CameraPreview$2: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: AbstractChannel$ReceiveHasNext(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlinx.coroutines.CancellableContinuation)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearColorFilter()
androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)
io.flutter.plugin.platform.PlatformViewsController: void flushAllViews()
com.journeyapps.barcodescanner.BarcodeResult: java.util.Map getResultMetadata()
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration)
androidx.core.provider.FontRequestWorker$2: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)
com.google.zxing.ResultPoint: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.appcompat.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
androidx.appcompat.widget.DropDownListView: boolean touchModeDrawsInPressedStateCompat()
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: ForwardingListener$DisallowIntercept(androidx.appcompat.widget.ForwardingListener)
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)
com.google.zxing.oned.rss.AbstractRSSReader: boolean isFinderPattern(int[])
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
androidx.appcompat.view.SupportActionModeWrapper: void setTag(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.LinearLayoutCompat: boolean shouldDelayChildPressedState()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.zxing.common.reedsolomon.GenericGF: int getSize()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentAnim$2: void onAnimationStart(android.view.animation.Animation)
androidx.appcompat.widget.AppCompatSpinner$1: AppCompatSpinner$1(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
androidx.appcompat.widget.DropDownListView: boolean isInTouchMode()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getTimeout()
androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()
kotlin.random.jdk8.PlatformThreadLocalRandom: java.util.Random getImpl()
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
androidx.appcompat.widget.SearchView: void updateViewsVisibility(boolean)
com.journeyapps.barcodescanner.camera.CameraManager: void setPreviewDisplay(com.journeyapps.barcodescanner.camera.CameraSurface)
kotlinx.coroutines.internal.Removed: java.lang.String toString()
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.journeyapps.barcodescanner.CameraPreview: void pause()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.app.AlertController: void setView(android.view.View,int,int,int,int)
kotlinx.coroutines.internal.ThreadState: ThreadState(kotlin.coroutines.CoroutineContext,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isActionViewExpanded()
kotlin.ranges.IntRange: kotlin.ranges.IntRange access$getEMPTY$cp()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object removeFirstOrNull()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentManager: void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getOfferResult()
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.collection.LruCache: java.lang.Object create(java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraThread: void quit()
androidx.appcompat.widget.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean isArtificial(java.lang.StackTraceElement)
androidx.appcompat.widget.LinearLayoutCompat: void layoutHorizontal(int,int,int,int)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void draw(android.graphics.Canvas)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState createFromParcel(android.os.Parcel)
com.google.zxing.common.detector.WhiteRectangleDetector: WhiteRectangleDetector(com.google.zxing.common.BitMatrix,int,int,int)
androidx.appcompat.widget.AppCompatSpinner$SavedState: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.channels.AbstractChannel: boolean access$enqueueReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setVisible(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void applyTheme(android.content.res.Resources$Theme)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)
androidx.appcompat.view.menu.StandardMenuPopup: void setHorizontalOffset(int)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()
androidx.fragment.app.LogWriter: void flushBuilder()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode)
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect getFramingRect()
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void launchIntent(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,char,java.lang.String)
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int)
androidx.core.view.ViewCompat$1: ViewCompat$1()
androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)
com.journeyapps.barcodescanner.camera.DisplayConfiguration: DisplayConfiguration(int,com.journeyapps.barcodescanner.Size)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setFilterBitmap(boolean)
androidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
androidx.appcompat.app.ActionBar: boolean closeOptionsMenu()
androidx.appcompat.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
androidx.fragment.app.FragmentLayoutInflaterFactory$1: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)
androidx.core.widget.NestedScrollView: boolean arrowScroll(int)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getCodewordBucketNumber(int)
androidx.appcompat.widget.AppCompatHintHelper: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()
androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)
androidx.appcompat.view.menu.MenuItemImpl: int getOrdering()
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)
androidx.fragment.app.FragmentAnim$3: void onAnimationEnd(android.animation.Animator)
com.google.zxing.oned.CodaBarReader: int toNarrowWidePattern(int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String)
kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
androidx.fragment.app.FragmentStateManager: void destroyFragmentView()
com.journeyapps.barcodescanner.CameraPreview: java.lang.String access$200()
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int,int)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void teardownChannel()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.BarcodeCallback access$000(com.journeyapps.barcodescanner.BarcodeView)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.lang.String toString(java.lang.Iterable)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.google.zxing.common.BitMatrix,com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.ResultPoint,boolean,int,int)
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelOffset(int)
androidx.appcompat.widget.AppCompatTextHelper: void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray)
androidx.lifecycle.LiveData: java.lang.Object getValue()
androidx.appcompat.view.menu.ActionMenuItem: boolean isCheckable()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
com.journeyapps.barcodescanner.camera.FitCenterStrategy: android.graphics.Rect scalePreview(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
androidx.core.graphics.Insets: java.lang.String toString()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker()
kotlinx.coroutines.JobSupport: boolean childCancelled(java.lang.Throwable)
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
com.google.zxing.oned.UPCEANExtensionSupport: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getColumnCount()
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
androidx.appcompat.view.menu.MenuItemImpl: void appendModifier(java.lang.StringBuilder,int,int,java.lang.String)
com.journeyapps.barcodescanner.camera.CameraInstance: void open()
com.google.zxing.common.BitMatrix: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
androidx.core.graphics.TypefaceCompatUtil: java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.String invoke(java.lang.String)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundTints()
androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
kotlin.random.Random$Default: Random$Default(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.provider.CallbackWithHandler$2: void run()
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState)
kotlinx.coroutines.AbstractCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()
androidx.appcompat.widget.ListPopupWindow: void setDropDownGravity(int)
androidx.appcompat.view.menu.MenuWrapperICS: void removeItem(int)
androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)
kotlin.collections.EmptyList: EmptyList()
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: DecodedInformation(int,java.lang.String)
androidx.appcompat.app.AlertController: void setupTitle(android.view.ViewGroup)
androidx.collection.ArraySet: boolean add(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.app.BackStackState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)
androidx.appcompat.app.AlertController$4: void onScroll(android.widget.AbsListView,int,int,int)
androidx.appcompat.widget.ResourcesWrapper: float getDimension(int)
androidx.core.app.ActivityCompat: void recreate(android.app.Activity)
androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)
kotlin.coroutines.intrinsics.CoroutineSingletons: CoroutineSingletons(java.lang.String,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()
androidx.core.widget.NestedScrollView: void initOrResetVelocityTracker()
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()
com.google.zxing.client.android.InactivityTimer: void cancelCallback()
androidx.appcompat.view.menu.ListMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
kotlinx.coroutines.flow.internal.NoOpContinuation: NoOpContinuation()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
com.google.zxing.oned.rss.AbstractRSSReader: AbstractRSSReader()
androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
io.flutter.embedding.android.FlutterView: void onDetachedFromWindow()
androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,boolean)
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentState saveState()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.zxing.qrcode.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange next()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)
androidx.lifecycle.SavedStateHandleController: boolean isAttached()
androidx.collection.ArraySet: java.lang.Object removeAt(int)
kotlinx.coroutines.CoroutineId: CoroutineId(long)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()
androidx.collection.ArrayMap: java.util.Set keySet()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
kotlinx.coroutines.scheduling.LimitingDispatcher: int getTaskMode()
androidx.fragment.app.FragmentManager: java.util.Map access$000(androidx.fragment.app.FragmentManager)
androidx.window.core.Bounds: int getHeight()
kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: boolean isPowerSaveMode(android.os.PowerManager)
androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int)
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
com.google.zxing.pdf417.decoder.BarcodeMetadata: BarcodeMetadata(int,int,int,int)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: FragmentManager$LaunchedFragmentInfo(android.os.Parcel)
androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()
androidx.appcompat.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()
androidx.appcompat.view.menu.MenuBuilder: boolean isGroupDividerEnabled()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.google.zxing.oned.UPCAReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
com.google.zxing.oned.rss.expanded.ExpandedRow: int hashCode()
androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View,int)
com.google.zxing.oned.EANManufacturerOrgSupport: void initIfNeeded()
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: void run()
com.journeyapps.barcodescanner.RawImageData: byte[] getData()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.widget.Toolbar$LayoutParams)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
io.flutter.embedding.android.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.savedstate.Recreator: Recreator(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object[] newArray(int)
kotlin.coroutines.AbstractCoroutineContextKey: AbstractCoroutineContextKey(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void onAnimationsEnded()
io.flutter.view.VsyncWaiter$1$1: void doFrame(long)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
kotlinx.coroutines.CancellableContinuationImpl: boolean cancelLater(java.lang.Throwable)
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int)
kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraThread: void incrementAndEnqueue(java.lang.Runnable)
androidx.fragment.app.FragmentController: void dispatchPause()
androidx.core.view.ContentInfoCompat: int getSource()
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
androidx.appcompat.app.AppCompatDelegateImpl: void onPanelClosed(int)
androidx.window.layout.FoldingFeature: boolean isSeparating()
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int,boolean)
androidx.fragment.app.FragmentManager$10: void onActivityResult(androidx.activity.result.ActivityResult)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void invalidateDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setEnterFadeDuration(int)
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.TooltipCompatHandler: void show(boolean)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
androidx.fragment.app.DefaultSpecialEffectsController$4: void onAnimationRepeat(android.view.animation.Animation)
androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMinTextSize()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.SearchView: void onActionViewExpanded()
com.journeyapps.barcodescanner.Decoder: java.util.List getPossibleResultPoints()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.appcompat.widget.Toolbar: void inflateMenu(int)
androidx.appcompat.widget.AlertDialogLayout: void forceUniformWidth(int,int)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
androidx.appcompat.view.menu.CascadingMenuPopup: void setHorizontalOffset(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2402(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
androidx.collection.ArraySet: ArraySet()
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()
androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)
androidx.fragment.app.FragmentController: FragmentController(androidx.fragment.app.FragmentHostCallback)
androidx.appcompat.view.menu.CascadingMenuPopup: void setAnchorView(android.view.View)
androidx.appcompat.app.AlertController: void setIcon(int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTint(int)
androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$400(io.flutter.plugin.platform.PlatformViewsController)
androidx.core.widget.NestedScrollView: void ensureGlows()
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.JobCancellationException createCopy()
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int getAVAILABLE_PROCESSORS()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.view.menu.MenuPopupHelper: void show()
kotlinx.coroutines.JobSupport: java.lang.String toDebugString()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasSelection()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.provider.FontRequest: java.util.List getCertificates()
androidx.appcompat.app.AlertController$CheckedItemAdapter: long getItemId(int)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.String getBufferDebugString()
com.google.zxing.client.android.AmbientLightManager: void onSensorChanged(android.hardware.SensorEvent)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler)
com.google.zxing.datamatrix.decoder.DataBlock: int getNumDataCodewords()
androidx.appcompat.app.AlertDialog$Builder: android.content.Context getContext()
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
androidx.fragment.app.Fragment: void performStart()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
com.google.zxing.qrcode.detector.FinderPatternFinder: float crossCheckVertical(int,int,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object getPollResult()
androidx.activity.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: int decodeMacroBlock(int[],int,com.google.zxing.pdf417.PDF417ResultMetadata)
androidx.core.widget.TextViewOnReceiveContentListener: void replaceSelection(android.text.Editable,java.lang.CharSequence)
androidx.appcompat.widget.ToolbarWidgetWrapper$1: void onClick(android.view.View)
com.journeyapps.barcodescanner.Decoder: com.google.zxing.BinaryBitmap toBitmap(com.google.zxing.LuminanceSource)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)
androidx.appcompat.widget.TooltipCompatHandler: void onViewDetachedFromWindow(android.view.View)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: RequestExecutor$DefaultThreadFactory$ProcessPriorityThread(java.lang.Runnable,java.lang.String,int)
androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)
androidx.fragment.app.Fragment$2: void run()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()
androidx.fragment.app.FragmentLayoutInflaterFactory$1: FragmentLayoutInflaterFactory$1(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager)
io.flutter.embedding.android.KeyChannelResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean crossCheckDiagonal(int,int)
com.google.zxing.pdf417.decoder.Codeword: int getRowNumber()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()
androidx.core.os.CancellationSignal: boolean isCanceled()
androidx.appcompat.widget.DrawableUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: CascadingMenuPopup$CascadingMenuInfo(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
io.flutter.FlutterInjector$Builder$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
androidx.core.view.KeyEventDispatcher: boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.Throwable invoke(java.lang.Throwable)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: StringsKt__IndentKt$getIndentFunction$1()
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayAdded(int)
com.google.zxing.ResultPoint: void orderBestPatterns(com.google.zxing.ResultPoint[])
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isAlphaTo646ToAlphaLatch(int)
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation)
androidx.fragment.app.FragmentContainerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
androidx.fragment.app.SpecialEffectsController$Operation: SpecialEffectsController$Operation(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
androidx.window.R$id: R$id()
androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)
com.google.zxing.Result: com.google.zxing.ResultPoint[] getResultPoints()
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.Pair[])
androidx.appcompat.widget.ActionBarContextView: void closeMode()
androidx.appcompat.widget.SearchView$5: SearchView$5(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.SearchView$10: void onTextChanged(java.lang.CharSequence,int,int,int)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
kotlinx.coroutines.channels.ArrayChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
androidx.core.provider.FontsContractCompat: android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context)
androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.google.zxing.Result: byte[] getRawBytes()
kotlinx.coroutines.EventLoop: void dispatchUnconfined(kotlinx.coroutines.DispatchedTask)
androidx.collection.ArrayMap$1: int colGetSize()
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
androidx.appcompat.widget.AppCompatImageHelper: boolean hasOverlappingRendering()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
kotlin.collections.EmptySet: int size()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: boolean isQwertyMode()
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
io.flutter.embedding.android.FlutterImageView: void closeImageReader()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLevelChange(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
net.touchcapture.qr.flutterqr.Shared: void setBinding(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.core.provider.CallbackWithHandler$1: void run()
com.google.zxing.maxicode.decoder.BitMatrixParser: byte[] readCodewords()
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)
kotlinx.coroutines.CommonPool: boolean isGoodCommonPool$kotlinx_coroutines_core(java.lang.Class,java.util.concurrent.ExecutorService)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.core.provider.FontRequestWorker$1: FontRequestWorker$1(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean hasSpans()
com.google.zxing.common.StringUtils: java.lang.String guessEncoding(byte[],java.util.Map)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.zxing.common.BitMatrix: int[] getEnclosingRectangle()
kotlinx.coroutines.EventLoopImplBase: long processNextEvent()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.SearchView: void onDetachedFromWindow()
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: java.lang.Void invoke(java.lang.Throwable)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: void run()
kotlin.text.DelimitedRangesSequence: DelimitedRangesSequence(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2)
com.google.zxing.pdf417.decoder.DetectionResult: int getBarcodeECLevel()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
kotlin.collections.EmptyIterator: java.lang.Void next()
androidx.core.provider.FontRequest: java.lang.String getId()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ActionBarOverlayLayout: void initFeature(int)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp(java.lang.String,int,int,int)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.appcompat.widget.Toolbar: void dismissPopupMenus()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.core.provider.FontRequestWorker$2: void accept(java.lang.Object)
kotlinx.coroutines.BeforeResumeCancelHandler: BeforeResumeCancelHandler()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
androidx.fragment.app.FragmentTransition: void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
com.google.zxing.pdf417.decoder.ec.ModulusGF: int add(int,int)
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean getPadding(android.graphics.Rect)
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder: AnyAIDecoder(com.google.zxing.common.BitArray)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.StackTraceElement getStackTraceElement()
androidx.appcompat.widget.AppCompatTextHelper: void setAllCaps(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: AppCompatDelegateImpl$AutoNightModeManager$1(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)
androidx.appcompat.widget.ActionBarOverlayLayout$1: ActionBarOverlayLayout$1(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
kotlin.coroutines.CoroutineContext$plus$1: CoroutineContext$plus$1()
io.flutter.util.ViewUtils: int generateViewId(int)
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: AppCompatSpinner$SavedState$1()
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerBefore()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)
androidx.core.view.ViewCompat: boolean isAccessibilityHeading(android.view.View)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow()
androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.JobSupport$Finishing: boolean isActive()
androidx.core.provider.FontProvider$1: FontProvider$1()
androidx.fragment.app.FragmentManager: boolean isParentMenuVisible(androidx.fragment.app.Fragment)
com.journeyapps.barcodescanner.CaptureManager$2: void previewStopped()
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.journeyapps.barcodescanner.camera.CameraSurface: CameraSurface(android.graphics.SurfaceTexture)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)
com.google.zxing.datamatrix.decoder.DataBlock: com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
androidx.core.provider.FontRequestWorker$2: FontRequestWorker$2(androidx.core.provider.CallbackWithHandler)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.fragment.app.FragmentManager: void addAddedFragments(androidx.collection.ArraySet)
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.CancellableContinuationImpl: void detachChild$kotlinx_coroutines_core()
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
androidx.fragment.app.BackStackState: BackStackState(android.os.Parcel)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)
androidx.appcompat.widget.RtlSpacingHelper: void setDirection(boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
io.flutter.plugin.common.StandardMethodCodec: java.lang.String getStackTrace(java.lang.Throwable)
com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()
androidx.appcompat.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: java.lang.Object parseResult(int,android.content.Intent)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuBuilder: int findItemIndex(int)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)
androidx.core.os.BuildCompat: boolean isAtLeastR()
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs: java.lang.String parseInformation()
androidx.appcompat.app.AppCompatDelegateImpl: int getLocalNightMode()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object failure-PtdJZtk()
androidx.appcompat.widget.AppCompatCheckedTextView: void drawableStateChanged()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri)
net.touchcapture.qr.flutterqr.QRView$startScan$2: void barcodeResult(com.journeyapps.barcodescanner.BarcodeResult)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()
androidx.appcompat.view.menu.MenuWrapperICS: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
net.touchcapture.qr.flutterqr.QRView: void pauseCamera(io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.Fragment: boolean isMenuVisible()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
kotlin.collections.EmptyIterator: boolean hasNext()
com.google.zxing.oned.EAN13Reader: com.google.zxing.BarcodeFormat getBarcodeFormat()
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
kotlinx.coroutines.CompletedContinuation: boolean getCancelled()
androidx.collection.ArrayMap: void putAll(java.util.Map)
androidx.core.view.WindowInsetsCompat: int hashCode()
androidx.appcompat.widget.ResourcesWrapper: android.graphics.Movie getMovie(int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: MenuItemWrapperICS$ActionProviderWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
com.journeyapps.barcodescanner.SourceData: boolean isRotated()
com.google.zxing.oned.ITFReader: void validateQuietZone(com.google.zxing.common.BitArray,int)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()
com.journeyapps.barcodescanner.camera.CameraManager: void configure()
net.touchcapture.qr.flutterqr.QRView$1: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: void invoke(java.lang.Throwable)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.appcompat.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
androidx.fragment.app.FragmentStateManager: int computeExpectedState()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.zxing.aztec.detector.Detector: int getCorrectedParameterData(long,boolean)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
io.flutter.embedding.engine.dart.PlatformTaskQueue: void dispatch(java.lang.Runnable)
androidx.appcompat.view.menu.MenuAdapter: int getCount()
io.flutter.Log: void w(java.lang.String,java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatBackgroundHelper: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: ResourceManagerInternal$AvdcInflateDelegate()
androidx.fragment.app.FragmentController: void dispatchStart()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.datamatrix.decoder.Version getVersion()
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks()
androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)
androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.appcompat.view.menu.ListMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.fragment.app.Fragment$1: void run()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.zxing.pdf417.decoder.Codeword: int getBucket()
kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)
kotlin.collections.EmptyList: java.lang.String toString()
androidx.versionedparcelable.VersionedParcel: boolean isStream()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugin.platform.PlatformViewsController: void removeOverlaySurfaces()
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)
com.google.zxing.Result: java.lang.String getText()
androidx.fragment.app.Fragment: int getExitAnim()
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.scheduling.NanoTimeSource: NanoTimeSource()
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)
androidx.appcompat.app.AppCompatDialog: void dismiss()
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)
kotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStopped()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet,int)
com.google.zxing.Binarizer: Binarizer(com.google.zxing.LuminanceSource)
androidx.appcompat.widget.AppCompatBackgroundHelper: AppCompatBackgroundHelper(android.view.View)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object offerInternal(java.lang.Object)
kotlin.ranges.IntRange$Companion: IntRange$Companion()
androidx.window.embedding.SplitInfo: float getSplitRatio()
androidx.fragment.app.FragmentManager: boolean isDestroyed()
androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
kotlinx.coroutines.flow.SafeFlow: SafeFlow(kotlin.jvm.functions.Function2)
com.journeyapps.barcodescanner.DecoderThread: void setDecoder(com.journeyapps.barcodescanner.Decoder)
androidx.appcompat.view.menu.MenuItemImpl: char getShortcut()
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float)
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
com.journeyapps.barcodescanner.camera.AutoFocusManager$2: void onAutoFocus(boolean,android.hardware.Camera)
kotlin.collections.EmptySet: int getSize()
androidx.appcompat.view.menu.CascadingMenuPopup: void setVerticalOffset(int)
androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeightWithMargins(android.view.View)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String toString()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMap(java.util.Map)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
com.google.zxing.common.detector.MathUtils: int round(float)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
androidx.fragment.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
androidx.appcompat.view.menu.StandardMenuPopup$2: StandardMenuPopup$2(androidx.appcompat.view.menu.StandardMenuPopup)
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
kotlinx.coroutines.internal.ScopeCoroutine: kotlinx.coroutines.Job getParent$kotlinx_coroutines_core()
androidx.appcompat.view.menu.MenuItemImpl: boolean isChecked()
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView access$000(io.flutter.embedding.android.FlutterSplashView)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.core.view.ViewCompat$4: ViewCompat$4(int,java.lang.Class,int,int)
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
com.google.zxing.common.BitSource: BitSource(byte[])
com.google.zxing.common.BitArray: void set(int)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.window.core.Bounds: int getTop()
androidx.appcompat.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)
androidx.core.view.ActionProvider: void reset()
kotlinx.coroutines.EventLoopImplPlatform: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)
com.google.zxing.common.BitMatrix: java.lang.String toString(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: boolean isFirstDigitFNC1()
androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: java.util.List getBestPreviewOrder(java.util.List,com.journeyapps.barcodescanner.Size)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)
com.google.zxing.oned.OneDReader: OneDReader()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.zxing.aztec.detector.Detector: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
androidx.fragment.app.FragmentViewLifecycleOwner: FragmentViewLifecycleOwner(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation)
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin)
com.google.zxing.ResultPoint: float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
com.google.zxing.client.android.InactivityTimer: void access$200(com.google.zxing.client.android.InactivityTimer,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.Closed: java.lang.Object getOfferResult()
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
androidx.cursoradapter.widget.CursorAdapter: int getCount()
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
androidx.appcompat.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()
kotlinx.coroutines.CommonPool: java.util.concurrent.ExecutorService createPlainPool()
androidx.fragment.app.FragmentTransition$6: FragmentTransition$6(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect)
androidx.appcompat.view.menu.MenuPopup: MenuPopup()
androidx.appcompat.widget.SearchView: void dismissSuggestions()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void loadFromAttributes(android.util.AttributeSet,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)
androidx.fragment.app.FragmentTransition$5: FragmentTransition$5(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect)
androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.journeyapps.barcodescanner.MixedDecoder: com.google.zxing.BinaryBitmap toBitmap(com.google.zxing.LuminanceSource)
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()
androidx.appcompat.widget.AppCompatTextHelper: void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)
kotlin.random.Random$Default: Random$Default()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()
androidx.fragment.app.FragmentContainerView: void removeDetachedView(android.view.View,boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
kotlin.collections.EmptyList: boolean contains(java.lang.Object)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)
com.google.zxing.oned.rss.RSS14Reader: RSS14Reader()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)
net.touchcapture.qr.flutterqr.QRView$startScan$2: QRView$startScan$2(java.util.List,net.touchcapture.qr.flutterqr.QRView)
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
com.google.zxing.client.android.DecodeHintManager: java.util.Map parseDecodeHints(android.content.Intent)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.cursoradapter.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)
androidx.core.provider.CalleeHandler: android.os.Handler create()
androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationCancel(android.animation.Animator)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: DecodedBitStreamParser$Mode(java.lang.String,int)
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.appcompat.widget.Toolbar: void postShowOverflowMenu()
androidx.core.widget.NestedScrollView: void requestLayout()
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcelable)
androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()
androidx.appcompat.view.menu.CascadingMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.fragment.app.FragmentContainerView: void removeAllViewsInLayout()
androidx.core.provider.FontRequestWorker$4: void accept(java.lang.Object)
androidx.lifecycle.LiveData: void onInactive()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)
net.touchcapture.qr.flutterqr.QRView: void barCodeViewNotSet(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.core.graphics.Insets: boolean equals(java.lang.Object)
kotlinx.coroutines.JobImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
androidx.appcompat.view.menu.ActionMenuItem: boolean collapseActionView()
androidx.appcompat.widget.RtlSpacingHelper: int getRight()
com.journeyapps.barcodescanner.CaptureManager: android.os.Handler access$200(com.journeyapps.barcodescanner.CaptureManager)
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.ActionMenuItem: android.view.View getActionView()
com.journeyapps.barcodescanner.CaptureActivity: void onSaveInstanceState(android.os.Bundle)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
androidx.appcompat.view.menu.BaseMenuWrapper: BaseMenuWrapper(android.content.Context)
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiNoLongerDisplayed()
com.google.zxing.common.BitMatrix: java.lang.String buildToString(java.lang.String,java.lang.String,java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ActionProvider getActionProvider()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin: void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.appcompat.widget.AppCompatImageButton: boolean hasOverlappingRendering()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()
androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean flagActionItems()
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox()
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
androidx.appcompat.view.menu.MenuBuilder: void flagActionItems()
androidx.appcompat.widget.ListPopupWindow: void setModal(boolean)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.benjaminabel.vibration.VibrationMethodChannelHandler: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
androidx.fragment.app.FragmentTransitionImpl$3: FragmentTransitionImpl$3(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
androidx.appcompat.view.SupportActionModeWrapper: void invalidate()
androidx.fragment.app.FragmentTransition$5: void run()
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(android.content.Context,int)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$500(io.flutter.embedding.android.FlutterSplashView)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getHotspotBounds(android.graphics.Rect)
kotlin.collections.EmptyList: boolean retainAll(java.util.Collection)
androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
androidx.appcompat.view.SupportMenuInflater: java.lang.Object getRealOwner()
androidx.fragment.app.Fragment: void setNextTransition(int)
androidx.appcompat.widget.ListPopupWindow: android.view.View getAnchorView()
androidx.appcompat.app.AlertController$AlertParams$3: AlertController$AlertParams$3(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)
com.google.zxing.pdf417.PDF417Reader: int getMinCodewordWidth(com.google.zxing.ResultPoint[])
com.google.zxing.pdf417.PDF417ResultMetadata: void setOptionalData(int[])
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor getOrCreatePoolSync()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: char toAlphaNumericChar(int)
androidx.appcompat.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object[] newArray(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.appcompat.view.menu.ExpandedMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState[] newArray(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onEnd()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.widget.DropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isStateful()
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)
kotlinx.coroutines.ThreadLocalEventLoop: ThreadLocalEventLoop()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: boolean deliverSelfNotifications()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
kotlinx.coroutines.channels.Receive: kotlinx.coroutines.internal.Symbol getOfferResult()
androidx.appcompat.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean foundPatternDiagonal(int[])
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()
kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map)
com.google.zxing.Binarizer: int getHeight()
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox()
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
com.google.zxing.oned.rss.expanded.decoders.DecodedObject: DecodedObject(int)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentById(int)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: boolean timeToExecute(long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.journeyapps.barcodescanner.DecoderThread: void stop()
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String toString()
kotlinx.coroutines.InactiveNodeList: java.lang.String toString()
androidx.appcompat.view.menu.MenuItemImpl: boolean expandActionView()
androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.Size access$400(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.core.content.res.ResourcesCompat$FontCallback: ResourcesCompat$FontCallback()
kotlin.coroutines.jvm.internal.CompletedContinuation: CompletedContinuation()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance()
io.flutter.embedding.android.FlutterSplashView$2: FlutterSplashView$2(io.flutter.embedding.android.FlutterSplashView)
com.google.zxing.pdf417.decoder.Codeword: int getValue()
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)
com.google.zxing.common.GlobalHistogramBinarizer: com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long,java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: MenuItemWrapperICS$OnMenuItemClickListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener)
com.google.zxing.BinaryBitmap: com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)
androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollInternal()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
androidx.fragment.app.FragmentManager: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
kotlinx.coroutines.JobCancellationException: java.lang.String toString()
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()
androidx.fragment.app.FragmentTransition$3: void run()
kotlin.ranges.IntProgression: int hashCode()
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
androidx.fragment.app.Fragment: void onStop()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$4: void onFitSystemWindows(android.graphics.Rect)
androidx.appcompat.widget.AppCompatDrawableManager: AppCompatDrawableManager()
androidx.collection.ArrayMap: ArrayMap()
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel,java.lang.ClassLoader)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.widget.NestedScrollView$SavedState$1: NestedScrollView$SavedState$1()
kotlin.coroutines.jvm.internal.CompletedContinuation: void resumeWith(java.lang.Object)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionViewExpanded()
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: RSSExpandedReader()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: SafeCollectorKt$emitFun$1()
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.MenuPopupWindow: void setTouchModal(boolean)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: java.lang.String toString()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
com.google.zxing.common.reedsolomon.GenericGF: int multiply(int,int)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)
androidx.appcompat.widget.ActionBarContextView: void killMode()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()
androidx.fragment.app.FragmentManager: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
com.journeyapps.barcodescanner.DecoderThread$2: void onPreviewError(java.lang.Exception)
kotlinx.coroutines.EventLoopImplBase: void rescheduleAllDelayed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.collection.ArraySet: int indexOf(java.lang.Object)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
kotlinx.coroutines.CompletedWithCancellation: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuPopupHelper: void showPopup(int,int,boolean,boolean)
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
androidx.collection.MapCollections$EntrySet: int hashCode()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: java.lang.String getStackTrace(java.lang.Exception)
androidx.fragment.app.FragmentManager: void dispatchPause()
com.journeyapps.barcodescanner.RawImageData: com.journeyapps.barcodescanner.RawImageData rotateCameraPreview(int)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: boolean isFinished()
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder()
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlin.collections.EmptyMap: java.util.Set getEntries()
com.google.zxing.oned.rss.expanded.decoders.AI01decoder: AI01decoder(com.google.zxing.common.BitArray)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.ActionProvider: boolean overridesItemVisibility()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
androidx.fragment.app.FragmentManager: void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightStatusBars(boolean)
kotlinx.coroutines.CommonPool: CommonPool()
androidx.fragment.app.Fragment: boolean isHideReplaced()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.provider.CallbackWithHandler: void onTypefaceRetrieved(android.graphics.Typeface)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection)
androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
kotlinx.coroutines.JobSupport: void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable)
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
androidx.core.provider.FontsContractCompat$FontRequestCallback: FontsContractCompat$FontRequestCallback()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
androidx.appcompat.widget.AppCompatTextHelper: android.content.res.ColorStateList getCompoundDrawableTintList()
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
androidx.appcompat.view.menu.ListMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: FinderPatternFinder$FurthestFromAverageComparator(float)
com.google.zxing.pdf417.decoder.DetectionResultColumn: DetectionResultColumn(com.google.zxing.pdf417.decoder.BoundingBox)
androidx.fragment.app.FragmentManager: void dispatchMultiWindowModeChanged(boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: void onGlobalFocusChanged(android.view.View,android.view.View)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.Codeword detectCodeword(com.google.zxing.common.BitMatrix,int,int,boolean,int,int,int,int)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentActivity: void onLowMemory()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
kotlin.coroutines.CombinedContext: int hashCode()
androidx.appcompat.widget.AppCompatImageButton: void drawableStateChanged()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
kotlinx.coroutines.EventLoopImplBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getOutline(android.graphics.Outline)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(int)
androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.View getWrappedView()
androidx.fragment.app.BackStackState$1: BackStackState$1()
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionStart(android.transition.Transition)
com.google.zxing.aztec.AztecReader: AztecReader()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: AnimatedStateListDrawableCompat$AnimatedStateListState(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)
androidx.appcompat.widget.ActionMenuPresenter: android.view.View findViewForItem(android.view.MenuItem)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean getPadding(android.graphics.Rect)
io.flutter.plugin.localization.LocalizationPlugin$1: LocalizationPlugin$1(io.flutter.plugin.localization.LocalizationPlugin)
androidx.appcompat.widget.DropDownListView: void drawableStateChanged()
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int)
com.google.zxing.pdf417.PDF417Reader: int getMaxCodewordWidth(com.google.zxing.ResultPoint[])
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: void barcodeResult(com.journeyapps.barcodescanner.BarcodeResult)
androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)
io.flutter.embedding.android.KeyboardManager: void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
com.google.zxing.oned.rss.expanded.ExpandedPair: int hashNotNull(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void resolveMethod(android.content.Context)
com.google.zxing.pdf417.decoder.DetectionResult: int getBarcodeRowCount()
androidx.appcompat.widget.ListPopupWindow: int getHorizontalOffset()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.core.graphics.Insets: androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets)
com.google.zxing.pdf417.decoder.DetectionResult: DetectionResult(com.google.zxing.pdf417.decoder.BarcodeMetadata,com.google.zxing.pdf417.decoder.BoundingBox)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: boolean isVisibleToUser(android.view.View)
com.google.zxing.oned.UPCEANExtension5Support: int extensionChecksum(java.lang.CharSequence)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspot(float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
androidx.appcompat.view.menu.ActionMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRetrieved(android.graphics.Typeface)
androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlin.collections.EmptyMap: boolean equals(java.lang.Object)
com.google.zxing.common.BitArray: boolean isRange(int,int,boolean)
kotlin.Result$Failure: boolean equals(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable)
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
androidx.fragment.app.FragmentManager: void dispatchViewCreated()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean setFrame(int,int,int,int)
androidx.appcompat.widget.ActionBarContextView: void initTitle()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: MethodCallHandlerImpl$1$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1,boolean)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.zxing.oned.rss.expanded.decoders.DecodedChar: DecodedChar(int,char)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
androidx.core.graphics.TypefaceCompatApi21Impl: TypefaceCompatApi21Impl()
androidx.core.graphics.TypefaceCompatApi21Impl: void init()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.appcompat.view.menu.CascadingMenuPopup: boolean isShowing()
androidx.fragment.app.DefaultSpecialEffectsController$2: DefaultSpecialEffectsController$2(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo)
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
androidx.appcompat.view.menu.StandardMenuPopup: void setShowTitle(boolean)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint getFrom()
androidx.fragment.app.FragmentTransitionImpl: java.lang.String findKeyForValue(java.util.Map,java.lang.String)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumberIfValid(int,int,com.google.zxing.pdf417.decoder.Codeword)
androidx.appcompat.view.menu.StandardMenuPopup: void onDismiss()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int)
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.google.zxing.oned.rss.expanded.ExpandedRow: java.lang.String toString()
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void startListening()
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
androidx.fragment.app.FragmentTransition$1: void run()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
androidx.appcompat.widget.SearchView$3: void onFocusChange(android.view.View,boolean)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.collection.ArraySet: void ensureCapacity(int)
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceive(kotlinx.coroutines.channels.Receive)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.DecoderFactory getDecoderFactory()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)
com.google.zxing.oned.rss.AbstractRSSReader: void decrement(int[],float[])
androidx.core.content.res.ResourcesCompat$ThemeCompat: void rebase(android.content.res.Resources$Theme)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
androidx.fragment.app.FragmentManager: void addBackStackState(androidx.fragment.app.BackStackRecord)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
kotlinx.coroutines.internal.StackTraceRecoveryKt: int frameIndex(java.lang.StackTraceElement[],java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern getBottomLeft()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
androidx.fragment.app.FragmentTransition$3: FragmentTransition$3(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
kotlin.jvm.internal.ClassReference$Companion: java.lang.String getClassSimpleName(java.lang.Class)
androidx.appcompat.widget.Toolbar: void ensureNavButtonView()
androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: SafeCollector_commonKt$checkContext$result$1(kotlinx.coroutines.flow.internal.SafeCollector)
androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()
androidx.core.content.res.ResourcesCompat$FontCallback: android.os.Handler getHandler(android.os.Handler)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.view.menu.MenuItemImpl: boolean isExclusiveCheckable()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
kotlinx.coroutines.JobSupport: void onStart()
androidx.appcompat.view.menu.StandardMenuPopup: void setGravity(int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setExitFadeDuration(int)
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.DetectorResult detect()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.Menu getMenuWrapper(android.view.Menu)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
com.google.zxing.qrcode.decoder.BitMatrixParser: int copyBit(int,int,int)
androidx.appcompat.view.SupportActionModeWrapper: void finish()
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed()
androidx.appcompat.app.WindowDecorActionBar$1: WindowDecorActionBar$1(androidx.appcompat.app.WindowDecorActionBar)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int)
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
kotlin.collections.EmptySet: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout$3: void run()
kotlinx.coroutines.internal.DispatchedContinuation: DispatchedContinuation(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()
com.journeyapps.barcodescanner.camera.CameraManager: void setDisplayConfiguration(com.journeyapps.barcodescanner.camera.DisplayConfiguration)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$600(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()
androidx.appcompat.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)
kotlin.jvm.internal.PackageReference: PackageReference(java.lang.Class,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.journeyapps.barcodescanner.camera.AutoFocusManager: void cancelOutstandingTask()
com.google.zxing.MultiFormatReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.appcompat.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)
androidx.fragment.app.FragmentContainerView: void removeViewsInLayout(int,int)
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcel,java.lang.ClassLoader)
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
kotlin.collections.IntIterator: IntIterator()
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService)
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: ListPopupWindow$PopupTouchInterceptor(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.view.menu.MenuDialogHelper: void show(android.os.IBinder)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
com.journeyapps.barcodescanner.camera.CameraManager: java.lang.String access$100()
com.journeyapps.barcodescanner.CaptureManager: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: void writeToParcel(android.os.Parcel,int)
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
com.google.zxing.qrcode.detector.FinderPatternFinder: FinderPatternFinder(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPointCallback)
androidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.LifecycleRegistry: void popParentState()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: InputContentInfoCompat$InputContentInfoCompatApi25Impl(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)
androidx.lifecycle.ViewModel: java.lang.Object getTag(java.lang.String)
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getItemViewType(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()
androidx.appcompat.view.menu.CascadingMenuPopup: int getNextMenuPosition(int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
com.google.zxing.common.BitMatrix: java.lang.Object clone()
kotlinx.coroutines.Job$Key: Job$Key()
kotlin.coroutines.CombinedContext: CombinedContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.zxing.aztec.detector.Detector: com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hideOverflowMenu()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: AppCompatDelegateImpl$AutoNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow(int,int)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getFetchStrategy()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.journeyapps.barcodescanner.DefaultDecoderFactory: DefaultDecoderFactory(java.util.Collection,java.util.Map,java.lang.String,int)
kotlin.collections.EmptyList: boolean add(java.lang.Object)
androidx.fragment.app.Fragment: boolean isInBackStack()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()
androidx.arch.core.executor.ArchTaskExecutor$1: ArchTaskExecutor$1()
androidx.activity.ImmLeaksCleaner: ImmLeaksCleaner(android.app.Activity)
com.google.zxing.common.GridSampler: void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[])
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentState: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: java.lang.Object getItem(int)
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getNumericModifiers()
kotlin.jvm.internal.Reflection: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
androidx.appcompat.view.menu.MenuWrapperICS: boolean performIdentifierAction(int,int)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)
com.google.zxing.qrcode.decoder.Version: int getVersionNumber()
androidx.core.app.ActivityRecreator: boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity)
androidx.appcompat.widget.ResourcesWrapper: float getFraction(int,int,int)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.SpecialEffectsController$Operation: boolean isComplete()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: FastOutSlowInInterpolator()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
androidx.lifecycle.ViewModelStore: ViewModelStore()
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
androidx.fragment.app.FragmentManagerState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)
androidx.core.widget.NestedScrollView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: void adjustCodewordCount(com.google.zxing.pdf417.decoder.DetectionResult,com.google.zxing.pdf417.decoder.BarcodeValue[][])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.google.zxing.oned.Code93Reader: void checkOneChecksum(java.lang.CharSequence,int,int)
androidx.appcompat.app.AppCompatActivity: void onDestroy()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: FontResourcesParserCompat$FontFileResourceEntry(java.lang.String,int,boolean,java.lang.String,int,int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyShortcut(int,android.view.KeyEvent)
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readCorner3(int,int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.view.menu.MenuWrapperICS: boolean hasVisibleItems()
androidx.appcompat.widget.SearchView: boolean hasVoiceSearch()
androidx.appcompat.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
kotlinx.coroutines.channels.ArrayChannel: java.lang.String getBufferDebugString()
com.google.zxing.ReaderException: ReaderException()
com.journeyapps.barcodescanner.camera.CameraInstance: void close()
com.google.zxing.common.DefaultGridSampler: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.google.zxing.qrcode.detector.FinderPatternFinder: int[] getCrossCheckStateCount()
androidx.lifecycle.LiveData$ObserverWrapper: void detachObserver()
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: void completeSpecialEffect()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.fragment.app.FragmentState: void writeToParcel(android.os.Parcel,int)
com.journeyapps.barcodescanner.camera.CameraSettings: CameraSettings()
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: FinderPatternFinder$CenterComparator(float)
androidx.fragment.app.FragmentManager: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion()
androidx.core.view.ViewCompat$3: ViewCompat$3(int,java.lang.Class,int,int)
androidx.collection.SparseArrayCompat: int size()
androidx.appcompat.view.menu.CascadingMenuPopup: void updateMenuView(boolean)
androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
androidx.fragment.app.FragmentManager: void onContainerAvailable(androidx.fragment.app.FragmentContainerView)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int)
androidx.appcompat.app.AlertController: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)
androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.provider.FontRequestWorker$TypefaceResult: FontRequestWorker$TypefaceResult(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task trySteal(boolean)
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
kotlinx.coroutines.scheduling.CoroutineScheduler: void runSafely(kotlinx.coroutines.scheduling.Task)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
net.touchcapture.qr.flutterqr.QRView$startScan$2: void possibleResultPoints(java.util.List)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformPlugin: boolean clipboardHasStrings()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean checkChecksum()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
kotlin.internal.jdk7.JDK7PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
com.journeyapps.barcodescanner.camera.CameraSurface: CameraSurface(android.view.SurfaceHolder)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isAutoMirrored()
androidx.fragment.app.FragmentManager$3: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.widget.AppCompatPopupWindow: void setSupportOverlapAnchor(boolean)
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
androidx.appcompat.widget.ScrollingTabContainerView$1: void run()
com.google.zxing.common.BitArray: BitArray()
androidx.appcompat.view.StandaloneActionMode: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.common.BitArray getInformation()
androidx.appcompat.app.AppCompatDelegateImpl: void dismissPopups()
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
io.flutter.embedding.android.FlutterView: void init()
kotlin.ranges.IntRange: java.lang.Integer getStart()
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: Detector$ResultPointsAndTransitionsComparator(com.google.zxing.datamatrix.detector.Detector$1)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.appcompat.view.menu.CascadingMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
kotlinx.coroutines.Unconfined: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
kotlinx.coroutines.internal.ConcurrentKt: boolean removeFutureOnCancel(java.util.concurrent.Executor)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
com.google.zxing.qrcode.detector.FinderPattern: com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float)
androidx.core.provider.RequestExecutor$ReplyRunnable: void run()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.appcompat.content.res.AppCompatResources: void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
androidx.appcompat.view.SupportMenuInflater$MenuState: void readItem(android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.fragment.app.FragmentContainer: FragmentContainer()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcel)
androidx.lifecycle.ReportFragment: void onPause()
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$300(io.flutter.embedding.android.FlutterView)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
kotlinx.coroutines.EventLoopImplPlatform: void unpark()
com.journeyapps.barcodescanner.camera.CameraThread: void decrementInstances()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOrNull(java.lang.Iterable)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void close()
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: boolean prefersCondensedTitle()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4802(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object[] newArray(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2112(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.window.embedding.ActivityRule: int hashCode()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: ActionMenuPresenter$OverflowMenuButton(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.KeyboardManager,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3402(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
androidx.appcompat.graphics.drawable.DrawableContainer$1: void run()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateSystemUiOverlays()
com.google.zxing.pdf417.decoder.DetectionResult: java.lang.String toString()
androidx.appcompat.widget.RtlSpacingHelper: int getStart()
kotlinx.coroutines.EventLoopImplBase: long getNextTime()
androidx.appcompat.widget.VectorEnabledTintResources: VectorEnabledTintResources(android.content.Context,android.content.res.Resources)
com.google.zxing.aztec.detector.Detector$Point: java.lang.String toString()
com.google.zxing.common.HybridBinarizer: void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix)
androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)
io.flutter.embedding.android.FlutterSplashView: void onRestoreInstanceState(android.os.Parcelable)
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)
androidx.fragment.app.FragmentManager: void cleanupExec()
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
com.google.zxing.oned.UPCEReader: void determineNumSysAndCheckDigit(java.lang.StringBuilder,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
io.flutter.embedding.android.FlutterSplashView$3: void run()
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.fragment.app.DefaultSpecialEffectsController: DefaultSpecialEffectsController(android.view.ViewGroup)
androidx.appcompat.app.ActionBar: boolean openOptionsMenu()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.lifecycle.SavedStateHandleController: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.collections.EmptyIterator: void remove()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ListPopupWindow$3: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder: void addWeightCode(java.lang.StringBuilder,int)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
com.google.zxing.aztec.AztecReader: void reset()
io.flutter.embedding.android.FlutterActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
androidx.core.view.DisplayCutoutCompat: androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.SearchView: void launchQuerySearch(int,java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.AlertController$5: void run()
io.flutter.plugin.platform.PlatformViewsController: void access$1100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
kotlin.collections.EmptyIterator: void set(java.lang.Object)
com.journeyapps.barcodescanner.DecoderThread: void access$000(com.journeyapps.barcodescanner.DecoderThread,com.journeyapps.barcodescanner.SourceData)
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState[] newArray(int)
androidx.fragment.app.Fragment$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: PreviewScalingStrategy()
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
androidx.appcompat.widget.SearchView$9: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.google.zxing.oned.EAN8Reader: EAN8Reader()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.google.zxing.aztec.detector.Detector: int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)
com.journeyapps.barcodescanner.camera.CameraManager: void open()
androidx.appcompat.view.WindowCallbackWrapper: void onPointerCaptureChanged(boolean)
com.google.zxing.common.BitMatrix: int getHeight()
androidx.appcompat.widget.AppCompatPopupWindow: void update(android.view.View,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setIndexInArray(int)
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: PlatformChannel$SystemUiMode(java.lang.String,int,java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.appcompat.widget.ResourcesWrapper: int[] getIntArray(int)
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.journeyapps.barcodescanner.CaptureManager: void onResume()
androidx.appcompat.app.AppCompatDialog: boolean dispatchKeyEvent(android.view.KeyEvent)
com.journeyapps.barcodescanner.camera.CameraInstance: void setTorch(boolean)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readCorner1(int,int)
com.google.zxing.oned.CodaBarReader: void counterAppend(int)
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int getCount()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
kotlinx.coroutines.internal.Removed: Removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.fragment.app.FragmentManager: void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
com.google.zxing.aztec.detector.Detector: boolean isValid(com.google.zxing.ResultPoint)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable createFinalException(java.lang.Throwable,java.lang.Throwable,java.util.ArrayDeque)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setFilterBitmap(boolean)
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
com.google.zxing.pdf417.decoder.ec.ModulusGF: int getSize()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getStringOrNull(android.database.Cursor,int)
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.fragment.app.LogWriter: void flush()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.zxing.BarcodeFormat: BarcodeFormat(java.lang.String,int)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
androidx.fragment.app.FragmentManager: void dispatchOnAttachFragment(androidx.fragment.app.Fragment)
androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
androidx.appcompat.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)
com.google.zxing.client.android.InactivityTimer: void activity()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setInvertColor(android.hardware.Camera$Parameters)
androidx.activity.ComponentActivity: void setContentView(int)
kotlinx.coroutines.DispatchedCoroutine: void afterCompletion(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: AppCompatDelegateImpl$PanelMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.zxing.qrcode.detector.Detector: int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getCount()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)
androidx.fragment.app.Fragment: boolean isPostponed()
androidx.appcompat.widget.ResourcesWrapper: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)
androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.ArrayList,int)
androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.appcompat.view.menu.MenuBuilder: android.view.View getHeaderView()
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5200(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTooltipText()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterSplashView: android.view.View access$300(io.flutter.embedding.android.FlutterSplashView)
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcelable)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,int)
androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter)
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: AbstractExpandedDecoder(com.google.zxing.common.BitArray)
androidx.lifecycle.ViewModelProvider$KeyedFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspot(float,float)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void teardown()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)
androidx.appcompat.widget.SearchView$SavedState: java.lang.String toString()
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.fragment.app.FragmentStateManager$1: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet)
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
androidx.collection.ArraySet: void clear()
com.journeyapps.barcodescanner.camera.AutoFocusManager$2: AutoFocusManager$2(com.journeyapps.barcodescanner.camera.AutoFocusManager)
kotlinx.coroutines.scheduling.GlobalQueue: GlobalQueue()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityResumed(android.app.Activity)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.view.menu.CascadingMenuPopup: int getInitialMenuPosition()
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentManager: void showFragment(androidx.fragment.app.Fragment)
androidx.collection.MapCollections$KeySet: int size()
androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)
androidx.appcompat.widget.AppCompatReceiveContentHelper$1: boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
androidx.fragment.app.FragmentManager: void dispatchDestroy()
kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)
androidx.core.view.ContentInfoCompat: android.content.ClipData getClip()
kotlin.collections.EmptyList: boolean addAll(int,java.util.Collection)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
kotlin.text.DelimitedRangesSequence$iterator$1: boolean hasNext()
androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.benjaminabel.vibration.VibrationMethodChannelHandler: VibrationMethodChannelHandler(com.benjaminabel.vibration.Vibration)
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory()
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,int)
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.view.WindowInsetsControllerCompat$Impl26: void setAppearanceLightNavigationBars(boolean)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.appcompat.widget.AlertDialogLayout: int resolveMinimumHeight(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.appcompat.widget.AppCompatSpinner: void drawableStateChanged()
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
com.google.zxing.aztec.detector.Detector: float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.journeyapps.barcodescanner.CaptureManager: void finish()
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
androidx.core.view.ViewCompat: java.lang.String[] getOnReceiveContentMimeTypes(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getContentUri()
kotlin.collections.EmptyIterator: int previousIndex()
androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)
androidx.window.embedding.SplitRule: int getLayoutDirection()
kotlinx.coroutines.JobNode: void setJob(kotlinx.coroutines.JobSupport)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence asSequence(java.util.Iterator)
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: ResourcesCompat$ColorStateListCacheKey(android.content.res.Resources,android.content.res.Resources$Theme)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
androidx.cursoradapter.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
androidx.customview.view.AbsSavedState$2: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ResourceManagerInternal: ResourceManagerInternal()
com.journeyapps.barcodescanner.camera.DisplayConfiguration: com.journeyapps.barcodescanner.Size getDesiredPreviewSize(boolean)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintList(android.content.res.ColorStateList)
io.flutter.plugin.editing.TextInputPlugin: void destroy()
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl access$100(io.flutter.plugin.platform.PlatformViewsController)
androidx.collection.ArraySet$1: ArraySet$1(androidx.collection.ArraySet)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setStatusText(java.lang.String)
kotlinx.coroutines.scheduling.DefaultScheduler: DefaultScheduler()
androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.google.zxing.oned.Code128Reader: int[] findStartPattern(com.google.zxing.common.BitArray)
io.flutter.plugin.platform.PlatformPlugin$2: void onSystemUiVisibilityChange(int)
androidx.appcompat.app.AppCompatActivity: boolean performMenuItemShortcut(android.view.KeyEvent)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLayoutDirectionChanged(int)
kotlinx.coroutines.scheduling.WorkQueue: boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue)
androidx.interpolator.view.animation.LookupTableInterpolator: LookupTableInterpolator(float[])
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetSystemUiFlag(int)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.view.ActionMode: void setTag(java.lang.Object)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int describeContents()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
androidx.savedstate.SavedStateRegistryController: SavedStateRegistryController(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void start()
androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.view.menu.MenuWrapperICS: int size()
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeStepGranularity()
io.flutter.view.VsyncWaiter: long access$000(io.flutter.view.VsyncWaiter)
androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.ViewfinderView getViewFinder()
com.journeyapps.barcodescanner.camera.CenterCropStrategy: float getScore(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)
androidx.appcompat.view.SupportMenuInflater$MenuState: void readGroup(android.util.AttributeSet)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key: DownstreamExceptionElement$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferEmpty()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()
com.google.zxing.oned.rss.RSS14Reader: boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair)
kotlinx.coroutines.channels.AbstractChannel: void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2120(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: java.lang.String toString()
androidx.appcompat.view.menu.StandardMenuPopup: void setAnchorView(android.view.View)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()
kotlinx.coroutines.channels.AbstractSendChannel: int countQueueSize()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onPanelClosed(int,android.view.Menu)
com.google.zxing.datamatrix.decoder.Version: int getTotalCodewords()
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern)
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
com.google.zxing.oned.Code39Reader: Code39Reader()
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: void clearObservers()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
androidx.appcompat.view.menu.MenuBuilder: void removeGroup(int)
kotlinx.coroutines.CoroutineId: java.lang.String toString()
androidx.appcompat.widget.DropDownListView: void dispatchDraw(android.graphics.Canvas)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.journeyapps.barcodescanner.camera.FitXYStrategy: float absRatio(float)
androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()
androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()
androidx.fragment.app.FragmentManager$9: void onActivityResult(java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.collection.LruCache: LruCache(int)
androidx.cursoradapter.widget.CursorAdapter: java.lang.Object getItem(int)
com.google.zxing.oned.Code93Reader: int[] findAsteriskPattern(com.google.zxing.common.BitArray)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int,java.lang.Object[])
com.google.zxing.qrcode.decoder.Version: java.lang.String toString()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.collection.ArraySet: java.lang.Object[] toArray()
androidx.appcompat.app.AppCompatDelegateImpl$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)
kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)
kotlinx.coroutines.scheduling.NanoTimeSource: long nanoTime()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)
androidx.lifecycle.LiveData$1: LiveData$1(androidx.lifecycle.LiveData)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
com.google.zxing.common.BitMatrix: BitMatrix(int,int)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.core.graphics.TypefaceCompatApi21Impl: boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
kotlin.ranges.IntProgression: java.util.Iterator iterator()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
androidx.fragment.app.FragmentManagerState: FragmentManagerState(android.os.Parcel)
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
androidx.appcompat.widget.SearchView: boolean onItemClicked(int,int,java.lang.String)
androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState[] newArray(int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1: ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void doBeforeTextChanged(android.widget.AutoCompleteTextView)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
com.journeyapps.barcodescanner.CaptureManager: void returnResultTimeout()
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.CancellableContinuationImpl: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.YieldContext: YieldContext()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
kotlinx.coroutines.scheduling.NonBlockingContext: void afterTask()
kotlin.coroutines.CombinedContext: boolean containsAll(kotlin.coroutines.CombinedContext)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread getThread()
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderFactory createDefaultDecoderFactory()
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: void run()
androidx.fragment.app.FragmentTransition: void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
io.flutter.embedding.android.FlutterSplashView: void transitionToFlutter()
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.zxing.MultiFormatReader: MultiFormatReader()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(java.lang.Object)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.embedding.engine.dart.DartMessenger: void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: AutoScrollHelper$ScrollAnimationRunnable(androidx.core.widget.AutoScrollHelper)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
kotlinx.coroutines.channels.AbstractSendChannel: AbstractSendChannel(kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint getBottomRight()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getChangingConfigurations()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.pdf417.decoder.BoundingBox merge(com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.pdf417.decoder.BoundingBox)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int,int)
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
io.flutter.view.AccessibilityBridge: void access$400(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void drawableStateChanged()
androidx.lifecycle.LiveData$ObserverWrapper: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element)
androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void clearAutoSizeConfiguration()
kotlinx.coroutines.UndispatchedMarker: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntent()
kotlin.collections.EmptyIterator: java.lang.Void previous()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder: AI01393xDecoder(com.google.zxing.common.BitArray)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void distributeKeyframes(android.animation.Keyframe[],float,int,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()
androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)
kotlinx.coroutines.Empty: Empty(boolean)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
kotlinx.coroutines.channels.Receive: Receive()
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
androidx.appcompat.widget.ListPopupWindow$3: ListPopupWindow$3(androidx.appcompat.widget.ListPopupWindow)
com.google.zxing.oned.EAN13Reader: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
androidx.core.widget.AutoScrollHelper: int constrain(int,int,int)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
kotlinx.coroutines.CompletedWithCancellation: java.lang.String toString()
kotlinx.coroutines.internal.UndeliveredElementException: UndeliveredElementException(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
com.journeyapps.barcodescanner.camera.FitXYStrategy: android.graphics.Rect scalePreview(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: boolean isClipPath()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
com.google.zxing.datamatrix.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.datamatrix.decoder.Version$ECB)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Throwable invoke(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowIcon()
com.google.zxing.oned.EAN13Reader: void determineFirstDigit(java.lang.StringBuilder,int)
androidx.appcompat.widget.DropDownListView: void clickPressedItem(android.view.View,int)
com.google.zxing.common.BitArray: int getNextSet(int)
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: ScrollingTabContainerView$TabView(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.appcompat.widget.ActionBarContainer: void jumpDrawablesToCurrentState()
androidx.appcompat.view.menu.ExpandedMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed removed()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void cancel()
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: void adjustIncompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.fragment.app.FragmentManager: boolean dispatchPrepareOptionsMenu(android.view.Menu)
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.BaseMenuPresenter: BaseMenuPresenter(android.content.Context,int,int)
androidx.window.embedding.SplitPairRule: int hashCode()
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()
androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)
com.journeyapps.barcodescanner.CaptureManager: boolean access$400(com.journeyapps.barcodescanner.CaptureManager)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()
kotlinx.coroutines.CompletedContinuation: int hashCode()
androidx.appcompat.view.menu.MenuBuilder: void setExclusiveItemChecked(android.view.MenuItem)
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.journeyapps.barcodescanner.camera.CameraManager: void setDesiredParameters(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: FragmentAnim$EndViewTransitionAnimation(android.view.animation.Animation,android.view.ViewGroup,android.view.View)
kotlinx.coroutines.JobSupport$Finishing: void setCompleting(boolean)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getAlpha()
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(androidx.fragment.app.FragmentActivity)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
kotlin.collections.EmptySet: boolean contains(java.lang.Object)
androidx.fragment.app.FragmentContainerView: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readCorner4(int,int)
androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(android.graphics.Rect)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.journeyapps.barcodescanner.DecoratedBarcodeView: boolean onKeyDown(int,android.view.KeyEvent)
androidx.appcompat.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)
com.google.zxing.qrcode.detector.AlignmentPattern: boolean aboutEquals(float,float,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void draw(android.graphics.Canvas)
androidx.appcompat.widget.ToolbarWidgetWrapper: void initProgress()
kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$6700(io.flutter.view.AccessibilityBridge,int)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Method getTextViewMethod(java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
androidx.appcompat.widget.ActionBarBackgroundDrawable: ActionBarBackgroundDrawable(androidx.appcompat.widget.ActionBarContainer)
androidx.core.graphics.drawable.WrappedDrawableApi14: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)
kotlin.jvm.internal.ClassReference: boolean equals(java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceEntryName(int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void setAlpha()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void onMeasure(int,int)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(int)
kotlinx.coroutines.internal.ArrayQueue: ArrayQueue()
com.journeyapps.barcodescanner.camera.CameraInstance$4: void run()
com.google.zxing.oned.rss.Pair: int getCount()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setTextSizeInternal(int,float)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.google.zxing.client.android.BeepManager: android.media.MediaPlayer playBeepSound()
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.journeyapps.barcodescanner.CameraPreview: void setMarginFraction(double)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3502(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: void run()
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat build()
androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void onDestroy()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
kotlin.coroutines.CoroutineContext$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getLayoutDirection()
kotlinx.coroutines.internal.StackTraceRecoveryKt: kotlin.Pair causeAndStacktrace(java.lang.Throwable)
kotlin.internal.PlatformImplementationsKt: int getJavaVersion()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.activity.contextaware.ContextAwareHelper: ContextAwareHelper()
androidx.appcompat.widget.AbsActionBarView: int next(int,int,boolean)
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)
androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.provider.FontRequestWorker$TypefaceResult: boolean isSuccess()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: NavigationChannel$1(io.flutter.embedding.engine.systemchannels.NavigationChannel)
com.google.zxing.oned.EANManufacturerOrgSupport: java.lang.String lookupCountryIdentifier(java.lang.String)
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
androidx.fragment.app.FragmentTransition: void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
androidx.fragment.app.Fragment: void onDestroy()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean flagActionItems()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
io.flutter.embedding.android.FlutterActivity: void onPostResume()
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionCancel(android.transition.Transition)
net.touchcapture.qr.flutterqr.QRView: net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView access$getBarcodeView$p(net.touchcapture.qr.flutterqr.QRView)
androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCountOrDefault(java.lang.Class,int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.appcompat.widget.ActionMenuPresenter: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat[] values()
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isRemoved()
androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.collection.MapCollections$EntrySet: int size()
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
androidx.core.provider.RequestExecutor: java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int)
kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()
com.google.zxing.pdf417.decoder.BoundingBox: BoundingBox(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] getAutoSizeTextAvailableSizes()
androidx.activity.result.ActivityResultRegistry: void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
kotlin.collections.EmptyIterator: java.lang.Object previous()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
kotlinx.coroutines.JobNode: JobNode()
com.google.zxing.pdf417.detector.PDF417DetectorResult: java.util.List getPoints()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
androidx.appcompat.view.menu.ActionMenuItemView: void onClick(android.view.View)
androidx.core.view.ViewCompat$2: ViewCompat$2(int,java.lang.Class,int)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void onSetButtonDrawable()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
androidx.fragment.app.FragmentManager$11: void onActivityResult(java.lang.Object)
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getLinkUri()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)
androidx.appcompat.widget.DrawableUtils: void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray getWrappedTypeArray()
com.google.zxing.common.BitMatrix: void flip(int,int)
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key()
io.flutter.Log: void i(java.lang.String,java.lang.String)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
androidx.appcompat.widget.LinearLayoutCompat: void onDraw(android.graphics.Canvas)
androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationStart(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setShowAsAction(int)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.appcompat.widget.SearchView: void onSubmitQuery()
kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)
androidx.appcompat.widget.TooltipCompatHandler: boolean onHover(android.view.View,android.view.MotionEvent)
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])
kotlin.internal.ProgressionUtilKt: int mod(int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.String access$000()
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.BarcodeView$DecodeMode access$100(com.journeyapps.barcodescanner.BarcodeView)
io.flutter.embedding.android.FlutterSplashView: void access$200(io.flutter.embedding.android.FlutterSplashView)
kotlinx.coroutines.DispatcherExecutor: java.lang.String toString()
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: boolean onMenuItemClick(android.view.MenuItem)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
com.google.zxing.pdf417.decoder.ec.ModulusGF: int subtract(int,int)
androidx.core.view.KeyEventDispatcher: boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
androidx.fragment.app.FragmentManager: java.util.List getFragments()
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute(io.flutter.view.AccessibilityBridge$1)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)
kotlinx.coroutines.android.HandlerContext: int hashCode()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueue: void close()
com.journeyapps.barcodescanner.Decoder: Decoder(com.google.zxing.Reader)
androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder)
androidx.core.provider.FontsContractCompat$FontInfo: int getWeight()
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: int[] getRowHeights()
androidx.fragment.app.FragmentManager: void removeFragment(androidx.fragment.app.Fragment)
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: void run()
kotlin.text.DelimitedRangesSequence: java.util.Iterator iterator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
androidx.appcompat.view.SupportActionModeWrapper: android.view.Menu getMenu()
androidx.window.embedding.MatcherUtils: MatcherUtils()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
kotlinx.coroutines.internal.LockFreeTaskQueue: LockFreeTaskQueue(boolean)
io.flutter.embedding.android.FlutterView$2: void onFlutterUiDisplayed()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()
net.touchcapture.qr.flutterqr.QRViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
io.flutter.view.AccessibilityBridge: void setAccessibilityPaneTitle(java.lang.String)
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: OnBackPressedDispatcher$OnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)
io.flutter.view.VsyncWaiter$1$1: VsyncWaiter$1$1(io.flutter.view.VsyncWaiter$1,long)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: java.lang.Void invoke(java.lang.Throwable)
androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void checkPaneVisibility(android.view.View,boolean)
com.google.zxing.client.android.InactivityTimer: InactivityTimer(android.content.Context,java.lang.Runnable)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setContentInsetsRelative(int,int)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: void onKeyEventHandled(java.lang.Boolean)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean foundPatternCross(int[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
com.journeyapps.barcodescanner.CameraPreview$5: void previewStopped()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.journeyapps.barcodescanner.BarcodeResult: android.graphics.Bitmap getBitmap()
androidx.fragment.app.SpecialEffectsController$1: void run()
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.fragment.app.Fragment: android.view.View requireView()
com.google.zxing.qrcode.detector.FinderPattern: int getCount()
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: SpecialEffectsController$FragmentStateManagerOperation(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal)
com.google.zxing.client.android.camera.open.OpenCameraInterface: android.hardware.Camera open(int)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence getHintText()
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform buildAdjoint()
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
com.benjaminabel.vibration.VibrationPlugin: VibrationPlugin()
com.google.zxing.qrcode.decoder.DataMask: DataMask(java.lang.String,int,com.google.zxing.qrcode.decoder.DataMask$1)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: ActionMenuPresenter$OverflowPopup(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
io.flutter.view.AccessibilityBridge: void access$200(io.flutter.view.AccessibilityBridge,int,int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEmpty()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void ensureImeVisible(android.widget.AutoCompleteTextView)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3802(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
com.google.zxing.datamatrix.detector.Detector: int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.zxing.oned.UPCEANReader: int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[])
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.appcompat.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()
com.google.zxing.common.BitArray: int[] getBitArray()
kotlinx.coroutines.CoroutineName: int hashCode()
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldInheritContext(android.view.ViewParent)
androidx.fragment.app.DefaultSpecialEffectsController$4: void onAnimationStart(android.view.animation.Animation)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)
androidx.appcompat.view.menu.StandardMenuPopup$1: void onGlobalLayout()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)
androidx.core.util.Preconditions: int checkArgumentNonnegative(int)
androidx.fragment.app.BackStackRecord: void executeOps()
androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.SearchView: void rewriteQueryFromSuggestion(int)
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String encodeList(java.util.List)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void onClick(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.zxing.datamatrix.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix)
androidx.appcompat.app.AppCompatDelegateImpl$6: AppCompatDelegateImpl$6(androidx.appcompat.app.AppCompatDelegateImpl)
kotlin.Unit: Unit()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.app.AlertController$AlertParams$1: AlertController$AlertParams$1(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
kotlinx.coroutines.AbstractCoroutine: void onCancelled(java.lang.Throwable,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)
kotlin.random.AbstractPlatformRandom: int nextBits(int)
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
androidx.appcompat.widget.AppCompatImageHelper: AppCompatImageHelper(android.widget.ImageView)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
kotlinx.coroutines.EventLoopImplBase: java.lang.Runnable dequeue()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
io.flutter.embedding.android.FlutterActivity: void onStop()
kotlinx.coroutines.internal.MainDispatcherLoader: MainDispatcherLoader()
androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void initialize(android.util.AttributeSet)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean collapseActionView()
androidx.lifecycle.ViewModelStore: void clear()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.google.zxing.Binarizer: int getWidth()
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()
com.google.zxing.common.reedsolomon.GenericGF: int addOrSubtract(int,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String nameString()
net.touchcapture.qr.flutterqr.QRView$1: void onActivityPaused(android.app.Activity)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
io.flutter.plugin.platform.PlatformViewsController: void detach()
androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)
com.journeyapps.barcodescanner.BarcodeView: BarcodeView(android.content.Context)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readCorner2(int,int)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint getTopRight()
com.google.zxing.common.BitMatrix: boolean get(int,int)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setFilterBitmap(boolean)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect getEpicenterBounds()
kotlinx.coroutines.internal.DispatchedContinuation: boolean postponeCancellation(java.lang.Throwable)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaX()
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.view.SupportMenuInflater$MenuState: void resetGroup()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)
androidx.appcompat.widget.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
kotlin.sequences.ConstrainedOnceSequence: java.util.Iterator iterator()
androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.appcompat.app.AlertController: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
androidx.fragment.app.DefaultSpecialEffectsController: void startAnimations(java.util.List,java.util.List,boolean,java.util.Map)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenNeededNow()
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate getDelegate()
androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()
kotlin.coroutines.CombinedContext: java.lang.String toString()
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionPause(android.transition.Transition)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])
com.google.zxing.InvertedLuminanceSource: InvertedLuminanceSource(com.google.zxing.LuminanceSource)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: SupportActionModeWrapper$CallbackWrapper(android.content.Context,android.view.ActionMode$Callback)
kotlinx.coroutines.flow.internal.SafeCollector: void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.View onCreateActionView()
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
androidx.appcompat.view.menu.ActionMenuItem: char getAlphabeticShortcut()
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean)
androidx.activity.ComponentActivity$3: ComponentActivity$3(androidx.activity.ComponentActivity)
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.widget.AlertDialogLayout: void setChildFrame(android.view.View,int,int,int,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.embedding.engine.dart.DartMessenger: void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(androidx.appcompat.widget.ActionMenuView$LayoutParams)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)
com.google.zxing.oned.UPCEANExtension5Support: java.lang.String parseExtension5String(java.lang.String)
com.journeyapps.barcodescanner.Size: int hashCode()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: GeneralAppIdDecoder(com.google.zxing.common.BitArray)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getWrappedDrawable()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatSeekBarHelper: void setTickMark(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: void close(boolean)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setChangingConfigurations(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
io.flutter.plugin.editing.TextInputPlugin: void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$402(io.flutter.embedding.android.FlutterSplashView,java.lang.String)
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: FallbackThreadLocalRandom$implStorage$1()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
io.flutter.plugin.platform.PlatformViewsController: void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
com.google.zxing.oned.rss.AbstractRSSReader: float[] getEvenRoundingErrors()
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: ModulusPoly(com.google.zxing.pdf417.decoder.ec.ModulusGF,int[])
kotlinx.coroutines.CoroutinesInternalError: CoroutinesInternalError(java.lang.String,java.lang.Throwable)
androidx.core.text.PrecomputedTextCompat: java.lang.String toString()
com.google.zxing.qrcode.detector.AlignmentPatternFinder: boolean foundPatternCross(int[])
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: void rebase(android.content.res.Resources$Theme)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getChildJobCancellationCause()
androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)
kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)
io.flutter.view.AccessibilityBridge: int access$7100()
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator)
com.google.zxing.aztec.decoder.Decoder: java.lang.String getEncodedData(boolean[])
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.DefaultExecutor: java.lang.Thread createThreadSync()
com.journeyapps.barcodescanner.camera.CameraManager: void startPreview()
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()
androidx.activity.result.ActivityResultRegistry: int registerKey(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: boolean showOverflowMenu()
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int)
androidx.lifecycle.LifecycleRegistry: void sync()
androidx.fragment.app.FragmentStateManager: boolean isFragmentViewChild(android.view.View)
com.google.zxing.qrcode.decoder.Version: Version(int,int[],com.google.zxing.qrcode.decoder.Version$ECBlocks[])
androidx.core.graphics.TypefaceCompatApi28Impl: TypefaceCompatApi28Impl()
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean handlePossibleCenter(int[],int,int)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.Object parseResult(int,android.content.Intent)
com.google.zxing.common.DefaultGridSampler: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform)
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.journeyapps.barcodescanner.RawImageData: byte[] rotateCCW(byte[],int,int)
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isAutoFocusEnabled()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.BoundingBox adjustBoundingBox(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn)
androidx.appcompat.app.AlertController: void setView(android.view.View)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
androidx.fragment.app.FragmentManager$5: void run()
androidx.fragment.app.FragmentViewLifecycleOwner: void setCurrentState(androidx.lifecycle.Lifecycle$State)
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
androidx.fragment.app.FragmentContainerView: void removeViewInLayout(android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab getTab()
com.google.zxing.qrcode.decoder.BitMatrixParser: void setMirror(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)
androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl: java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.fragment.app.FragmentManager: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)
androidx.activity.result.ActivityResult$1: ActivityResult$1()
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: FragmentAnim$AnimationOrAnimator(android.view.animation.Animation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void unscheduleSelf(java.lang.Runnable)
androidx.appcompat.widget.ForwardingListener: boolean onTouchObserved(android.view.MotionEvent)
kotlinx.coroutines.channels.AbstractChannel: AbstractChannel(kotlin.jvm.functions.Function1)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)
kotlinx.coroutines.LazyStandaloneCoroutine: LazyStandaloneCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getAlpha()
kotlin.text.StringsKt__StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.Object invoke(java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setBarcodeSceneMode(android.hardware.Camera$Parameters)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: boolean isZero()
androidx.fragment.app.FragmentManager: boolean dispatchOptionsItemSelected(android.view.MenuItem)
com.google.zxing.aztec.detector.Detector: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: void run()
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: void setRowNumbers()
com.google.zxing.common.reedsolomon.GenericGFPoly: java.lang.String toString()
androidx.appcompat.widget.SearchView: void onTextChanged(java.lang.CharSequence)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getCancellationException()
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()
kotlin.collections.EmptyMap: int getSize()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: kotlin.Pair invoke(java.lang.CharSequence,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)
androidx.fragment.app.FragmentManager$8: FragmentManager$8(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
net.touchcapture.qr.flutterqr.QRViewFactory: QRViewFactory(io.flutter.plugin.common.BinaryMessenger)
com.google.zxing.maxicode.MaxiCodeReader: void reset()
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationCancel(android.view.View)
androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.core.content.res.ComplexColorCompat: boolean willDraw()
androidx.fragment.app.FragmentAnim$2: void onAnimationEnd(android.view.animation.Animation)
io.flutter.embedding.android.FlutterActivity: void onStart()
androidx.appcompat.view.menu.MenuBuilder: int getOrdering(int)
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.RtlSpacingHelper: int getEnd()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
androidx.savedstate.Recreator$SavedStateProvider: android.os.Bundle saveState()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
kotlin.coroutines.CombinedContext: boolean contains(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: OnUndeliveredElementKt$bindCancellationFun$1(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
kotlin.collections.EmptySet: boolean removeAll(java.util.Collection)
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findTask(boolean)
kotlinx.coroutines.JobSupport: void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$2: ListPopupWindow$2(androidx.appcompat.widget.ListPopupWindow)
androidx.fragment.app.FragmentManager: void dispatchOptionsMenuClosed(android.view.Menu)
androidx.appcompat.widget.AppCompatSeekBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getSubtitle()
androidx.fragment.app.FragmentStore: void burpActive()
com.google.zxing.qrcode.detector.AlignmentPatternFinder: com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setPromptText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.shapes.Shape getDrawableShape()
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
androidx.collection.ArraySet$1: int colGetSize()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
com.google.zxing.datamatrix.decoder.Decoder: void correctErrors(byte[],int)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)
androidx.appcompat.app.AlertController$AlertParams: void createListView(androidx.appcompat.app.AlertController)
androidx.fragment.app.FragmentTransition: void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean canApplyTheme()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()
com.journeyapps.barcodescanner.camera.DisplayConfiguration: int getRotation()
com.google.zxing.common.BitMatrix: BitMatrix(int,int,int,int[])
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable)
androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllState()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 access$getEmitFun$p()
androidx.appcompat.widget.ActionMenuPresenter: boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.String parseFieldsInGeneralPurpose(java.lang.String)
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence)
com.google.zxing.common.DecoderResult: void setErrorsCorrected(java.lang.Integer)
com.google.zxing.datamatrix.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$1)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
com.google.zxing.maxicode.decoder.Decoder: void correctErrors(byte[],int,int,int,int)
androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: java.lang.String getNewString()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isAlphaOr646ToNumericLatch(int)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: DartMessenger$DefaultTaskQueueFactory()
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong getCOROUTINE_ID()
androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.core.Version: int getPatch()
androidx.appcompat.widget.SearchView: void updateSubmitButton(boolean)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
com.google.zxing.ResultPoint: float getX()
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStopped()
androidx.appcompat.view.menu.MenuPopupHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.app.AppCompatDialog$1: AppCompatDialog$1(androidx.appcompat.app.AppCompatDialog)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.FinderPattern getFinderPattern()
androidx.appcompat.view.ActionMode: boolean getTitleOptionalHint()
com.google.zxing.qrcode.detector.AlignmentPattern: AlignmentPattern(float,float,float)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.fragment.app.Fragment: void onDetach()
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint getTo()
com.google.zxing.qrcode.decoder.DataMask$4: DataMask$4(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: AppCompatTextViewAutoSizeHelper(android.widget.TextView)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onLayoutDirectionChanged(int)
androidx.appcompat.widget.ListPopupWindow: void setInputMethodMode(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.journeyapps.barcodescanner.CameraPreview$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView$6: SearchView$6(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.SearchView: void updateSearchAutoComplete()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerBefore()
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.tracing.TraceApi18Impl: void endSection()
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: void run()
androidx.collection.SparseArrayCompat: void gc()
kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier getTextClassifier()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)
com.journeyapps.barcodescanner.BarcodeResult: byte[] getRawBytes()
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: AppCompatResources$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getOpacity()
kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
com.google.zxing.MultiFormatReader: com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap)
androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()
com.google.zxing.oned.UPCEReader: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
kotlinx.coroutines.flow.SafeFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
androidx.collection.MapCollections$ValuesCollection: void clear()
androidx.appcompat.view.menu.StandardMenuPopup: void updateMenuView(boolean)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)
com.google.zxing.pdf417.decoder.BarcodeValue: int[] getValue()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setRawTextSize(float)
com.google.zxing.oned.ITFReader: int[] decodeStart(com.google.zxing.common.BitArray)
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
kotlin.coroutines.CombinedContext: boolean equals(java.lang.Object)
kotlin.coroutines.jvm.internal.DebugMetadataKt: int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
io.flutter.embedding.android.KeyboardManager: KeyboardManager(android.view.View,io.flutter.plugin.editing.TextInputPlugin,io.flutter.embedding.android.KeyboardManager$Responder[])
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.ThreadLocalEventLoop: void resetEventLoop$kotlinx_coroutines_core()
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: ResourceManagerInternal$DrawableDelegate()
net.touchcapture.qr.flutterqr.QRView$1: QRView$1(net.touchcapture.qr.flutterqr.QRView)
com.google.zxing.qrcode.detector.AlignmentPatternFinder: float crossCheckVertical(int,int,int,int)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
androidx.appcompat.view.ActionMode: void setTitleOptionalHint(boolean)
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
com.google.zxing.datamatrix.decoder.Version: int getDataRegionSizeRows()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(android.view.View)
com.google.zxing.oned.ITFReader: ITFReader()
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.Toolbar$3: void onClick(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int)
kotlin.text.DelimitedRangesSequence: int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.app.WindowDecorActionBar: void hideForActionMode()
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.appcompat.widget.ForwardingListener: void onLongPress()
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,char,int,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getContentDescription()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.SearchView$SearchAutoComplete: void showSoftInputIfNecessary()
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
androidx.appcompat.view.StandaloneActionMode: StandaloneActionMode(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
com.google.zxing.aztec.detector.Detector$Point: int getX()
com.journeyapps.barcodescanner.DecoratedBarcodeView: void pauseAndWait()
androidx.arch.core.internal.SafeIterableMap: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char)
androidx.fragment.app.FragmentViewLifecycleOwner: void performRestore(android.os.Bundle)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: MethodCallHandlerImpl$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl,android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.appcompat.view.menu.StandardMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
androidx.appcompat.widget.ListPopupWindow: int getWidth()
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition()
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType valueOf(java.lang.String)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
androidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void setHorizontalOffset(int)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.Lifecycle: Lifecycle()
androidx.appcompat.view.menu.MenuPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)
com.google.zxing.common.BitSource: int available()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeTextType()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()
androidx.appcompat.app.AppCompatDelegateImpl$7: AppCompatDelegateImpl$7(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()
com.journeyapps.barcodescanner.camera.CameraInstance: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty()
androidx.appcompat.view.menu.ListMenuPresenter: void updateMenuView(boolean)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
androidx.core.widget.TextViewOnReceiveContentListener: java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: AppCompatSpinner$DropdownPopup(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.view.menu.MenuAdapter: void setForceShowIcon(boolean)
com.journeyapps.barcodescanner.camera.DisplayConfiguration: com.journeyapps.barcodescanner.Size getBestPreviewSize(java.util.List,boolean)
androidx.appcompat.widget.SearchView: boolean isIconified()
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.Object invoke(java.lang.Object)
com.google.zxing.Result: void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object)
androidx.fragment.app.FragmentAnim$3: FragmentAnim$3(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(android.view.View)
androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
com.google.zxing.ChecksumException: com.google.zxing.ChecksumException getChecksumInstance()
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: ArgbEvaluator()
androidx.appcompat.widget.ForwardingListener: boolean pointInView(android.view.View,float,float,float)
androidx.core.provider.FontRequestWorker$3: FontRequestWorker$3(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
androidx.core.view.OneShotPreDrawListener: OneShotPreDrawListener(android.view.View,java.lang.Runnable)
androidx.appcompat.widget.ForwardingListener: void onViewAttachedToWindow(android.view.View)
com.google.zxing.LuminanceSource: boolean isRotateSupported()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()
androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.view.menu.CascadingMenuPopup: void onDismiss()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlinx.coroutines.CancelledContinuation: CancelledContinuation(kotlin.coroutines.Continuation,java.lang.Throwable,boolean)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.widget.SuggestionsAdapter: void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
com.google.zxing.qrcode.decoder.DataBlock: DataBlock(int,byte[])
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int getDecodedCodewordValue(int[])
androidx.appcompat.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])
androidx.core.widget.NestedScrollView: void fling(int)
com.google.zxing.qrcode.decoder.Decoder: void correctErrors(byte[],int)
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
com.google.zxing.qrcode.decoder.FormatInformation: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.google.zxing.pdf417.decoder.ec.ModulusGF: int log(int)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
androidx.appcompat.widget.TooltipCompatHandler$1: TooltipCompatHandler$1(androidx.appcompat.widget.TooltipCompatHandler)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int getChangingConfigurations()
androidx.fragment.app.FragmentStore: FragmentStore()
com.google.zxing.Result: java.lang.String toString()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionStart(android.transition.Transition)
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
androidx.appcompat.app.AlertController$RecycleListView: void setHasDecor(boolean,boolean)
androidx.appcompat.widget.ResourcesWrapper: android.util.DisplayMetrics getDisplayMetrics()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
androidx.window.core.Version$Companion: Version$Companion()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType valueOf(java.lang.String)
io.flutter.Log: void e(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)
kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)
kotlinx.coroutines.Empty: kotlinx.coroutines.NodeList getList()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.window.core.Version: boolean equals(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: AppCompatCompoundButtonHelper(android.widget.CompoundButton)
androidx.customview.view.AbsSavedState$1: AbsSavedState$1()
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
androidx.appcompat.widget.DropDownListView: boolean isFocused()
kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
com.google.zxing.common.reedsolomon.GenericGF: GenericGF(int,int,int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.window.embedding.ActivityStack: boolean isEmpty()
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String toString()
kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.Map getAllPrefs()
com.google.zxing.InvertedLuminanceSource: byte[] getRow(int,byte[])
kotlinx.coroutines.channels.Send: Send()
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getPostCode2(byte[])
androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraThread access$700(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: LinearOutSlowInInterpolator()
androidx.core.widget.TextViewOnReceiveContentListener: TextViewOnReceiveContentListener()
kotlinx.coroutines.intrinsics.CancellableKt: void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetInvalidated()
kotlinx.coroutines.DispatchedTask: DispatchedTask(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
kotlin.collections.IntIterator: java.lang.Object next()
androidx.core.graphics.TypefaceCompatBaseImpl$2: TypefaceCompatBaseImpl$2(androidx.core.graphics.TypefaceCompatBaseImpl)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationStart(android.view.View)
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
androidx.appcompat.widget.AppCompatBackgroundHelper: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.TintInfo: TintInfo()
androidx.appcompat.widget.SearchView$10: void beforeTextChanged(java.lang.CharSequence,int,int,int)
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: void run()
androidx.core.view.inputmethod.EditorInfoCompat: void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int)
io.flutter.embedding.android.FlutterImageView: void logW(java.lang.String,java.lang.Object[])
androidx.core.view.NestedScrollingParentHelper: NestedScrollingParentHelper(android.view.ViewGroup)
androidx.appcompat.widget.LinearLayoutCompat: int measureNullChild(int)
com.google.zxing.pdf417.decoder.Codeword: boolean hasValidRowNumber()
androidx.fragment.app.Fragment: android.content.Context requireContext()
androidx.appcompat.app.AlertController: void setCustomTitle(android.view.View)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.sequences.TransformingSequence$iterator$1: TransformingSequence$iterator$1(kotlin.sequences.TransformingSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
androidx.appcompat.widget.ResourcesWrapper: int getInteger(int)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: float getScore(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly negative()
androidx.core.graphics.Insets: Insets(int,int,int,int)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler access$000(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
androidx.fragment.app.FragmentStateManager: void ensureInflatedView()
androidx.fragment.app.FragmentTransition: void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void notifyDataSetChanged()
androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
kotlinx.coroutines.DefaultExecutor: DefaultExecutor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCacheStates()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
com.journeyapps.barcodescanner.RotationListener: int access$202(com.journeyapps.barcodescanner.RotationListener,int)
com.google.zxing.pdf417.decoder.Codeword: int getStartX()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
androidx.activity.result.ActivityResultRegistry: ActivityResultRegistry()
androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: SingleViewPresentation$WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
kotlin.text.StringsKt__AppendableKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.collection.ArrayMap$1: void colRemoveAt(int)
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: FlutterRenderer$SurfaceTextureFinalizerRunnable(long,io.flutter.embedding.engine.FlutterJNI)
com.journeyapps.barcodescanner.CameraPreview$2: CameraPreview$2(com.journeyapps.barcodescanner.CameraPreview)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int)
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(java.lang.CharSequence)
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
com.journeyapps.barcodescanner.BarcodeResult: com.google.zxing.BarcodeFormat getBarcodeFormat()
androidx.collection.LongSparseArray: java.lang.Object clone()
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setBestPreviewFPS(android.hardware.Camera$Parameters,int,int)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
androidx.appcompat.view.menu.MenuBuilder: void setGroupDividerEnabled(boolean)
com.journeyapps.barcodescanner.camera.CameraManager: int getCameraRotation()
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair)
androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.journeyapps.barcodescanner.CaptureManager: void setMissingCameraPermissionResult()
kotlinx.coroutines.InvokeOnCancel: java.lang.Object invoke(java.lang.Object)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
androidx.fragment.app.SpecialEffectsController$Operation: void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.window.core.Version: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader()
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)
com.google.zxing.oned.OneDReader: float patternMatchVariance(int[],int[],float)
androidx.core.app.ActivityRecreator$1: ActivityRecreator$1(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
kotlinx.coroutines.scheduling.CoroutineScheduler: void execute(java.lang.Runnable)
androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
com.google.zxing.oned.UPCEANExtension2Support: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[])
androidx.window.layout.EmptyDecorator: EmptyDecorator()
androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()
io.flutter.embedding.engine.FlutterJNI$Factory: io.flutter.embedding.engine.FlutterJNI provideFlutterJNI()
androidx.appcompat.widget.ListPopupWindow: android.widget.ListView getListView()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)
androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
androidx.appcompat.app.AppCompatDialog: void invalidateOptionsMenu()
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferAlwaysEmpty()
net.touchcapture.qr.flutterqr.QRView: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: ScrollingTabContainerView$TabClickListener(androidx.appcompat.widget.ScrollingTabContainerView)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
com.google.zxing.pdf417.decoder.DetectionResultColumn: java.lang.String toString()
kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
com.journeyapps.barcodescanner.CameraPreview: void initialize(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl: void updateStatusGuardColor(android.view.View)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.appcompat.app.AppCompatDialog: void setContentView(int)
androidx.appcompat.widget.TintTypedArray: float getFloat(int,float)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()
androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: boolean isAlpha()
androidx.appcompat.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin)
androidx.fragment.app.FragmentAnim: androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean)
kotlinx.coroutines.InvokeOnCancel: void invoke(java.lang.Throwable)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.fragment.app.Fragment: java.lang.String toString()
androidx.fragment.app.FragmentActivity: void onStart()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.qrcode.decoder.DataMask$6: boolean isMasked(int,int)
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()
androidx.appcompat.widget.SuggestionsAdapter: void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()
com.journeyapps.barcodescanner.camera.CameraManager: CameraManager(android.content.Context)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key()
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder: AI01320xDecoder(com.google.zxing.common.BitArray)
androidx.appcompat.app.ActionBar: ActionBar()
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
androidx.fragment.app.FragmentTransitionImpl: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
com.journeyapps.barcodescanner.CameraPreview: void previewSized(com.journeyapps.barcodescanner.Size)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
com.example.testprojet.MainActivity: MainActivity()
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
androidx.appcompat.view.menu.CascadingMenuPopup$1: void onGlobalLayout()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: FlutterActivityAndFragmentDelegate$2(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,io.flutter.embedding.android.FlutterView)
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
com.google.zxing.qrcode.detector.FinderPattern: FinderPattern(float,float,float,int)
com.google.zxing.qrcode.detector.Detector: float sizeOfBlackWhiteBlackRun(int,int,int,int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.fragment.app.BackStackRecord: java.lang.String getName()
kotlinx.coroutines.CancellableContinuationImpl: void releaseClaimedReusableContinuation()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.common.DecoderResult createDecoderResult(com.google.zxing.pdf417.decoder.DetectionResult)
androidx.core.view.WindowInsetsCompat: void setRootViewData(androidx.core.graphics.Insets)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: int byteCompaction(int,int[],java.nio.charset.Charset,int,java.lang.StringBuilder)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.ColorStateList getColorStateList(int)
androidx.fragment.app.Fragment: int hashCode()
kotlin.collections.EmptyList: int getSize()
com.google.zxing.oned.rss.AbstractRSSReader: int[] getOddCounts()
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
androidx.window.R$attr: R$attr()
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
kotlin.Result$Failure: Result$Failure(java.lang.Throwable)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: ActivityResultContracts$RequestMultiplePermissions()
kotlin.collections.EmptyMap: int hashCode()
androidx.appcompat.view.menu.MenuPopup: androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
androidx.lifecycle.LiveData: void onActive()
androidx.fragment.app.FragmentTransitionCompat21$4: FragmentTransitionCompat21$4(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable)
androidx.core.view.WindowInsetsCompat: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.core.content.res.ComplexColorCompat: boolean isGradient()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()
androidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
androidx.appcompat.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)
androidx.appcompat.widget.SearchView$2: void run()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
kotlin.collections.EmptySet: boolean containsAll(java.util.Collection)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
kotlin.jvm.internal.ClassReference: java.util.Map access$getSimpleNames$cp()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isEnabled()
kotlin.ranges.IntProgressionIterator: boolean hasNext()
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.core.os.CancellationSignal: void cancel()
androidx.appcompat.view.menu.MenuBuilder: int size()
androidx.fragment.app.FragmentTransitionCompat21: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void onChange()
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
kotlin.collections.EmptyList: boolean isEmpty()
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: void adjustCompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentById(int)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)
androidx.window.layout.WindowMetrics: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
io.flutter.plugin.editing.TextInputPlugin: boolean handleKeyEvent(android.view.KeyEvent)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onKeyDown(int,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.zxing.common.DecoderResult: int getStructuredAppendSequenceNumber()
kotlinx.coroutines.DebugKt: boolean getDEBUG()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void onPause()
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object cancelMakeCompleting(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()
androidx.core.widget.NestedScrollView: void abortAnimatedScroll()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: int hashCode()
com.google.zxing.qrcode.QRCodeReader: QRCodeReader()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int correctErrors(int[],int[],int)
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()
androidx.appcompat.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStarted()
androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)
kotlinx.coroutines.DefaultExecutor: void acknowledgeShutdownIfNeeded()
androidx.core.widget.NestedScrollView: void addView(android.view.View)
androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
kotlin.jvm.internal.TypeIntrinsics: java.lang.ClassCastException throwCce(java.lang.ClassCastException)
androidx.core.provider.FontRequestWorker$1: java.lang.Object call()
com.google.zxing.oned.Code39Reader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.core.graphics.TypefaceCompat: java.lang.String createResourceUid(android.content.res.Resources,int,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map optimizeReadOnlyMap(java.util.Map)
io.flutter.plugin.editing.TextEditingDelta: org.json.JSONObject toJSON()
androidx.appcompat.app.ActionBar: void onDestroy()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
com.journeyapps.barcodescanner.camera.CameraSettings: void setRequestedCameraId(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeWithDefaults(int)
kotlinx.coroutines.internal.ThreadSafeHeap: void setSize(int)
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewDetachedFromWindow(android.view.View)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.util.ArrayDeque createStackTrace(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isNumericToAlphaNumericLatch(int)
androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()
androidx.fragment.app.SpecialEffectsController$Operation$State: void applyState(android.view.View)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object constructor-impl(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable)
kotlin.collections.EmptyList: boolean contains(java.lang.Void)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setSystemUiFlag(int)
com.journeyapps.barcodescanner.camera.FitXYStrategy: FitXYStrategy()
androidx.appcompat.view.menu.CascadingMenuPopup: boolean closeMenuOnSubMenuOpened()
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getNumberOfECCodeWords(int)
androidx.fragment.app.FragmentController: void dispatchDestroy()
kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: ClassesInfoCache$CallbackInfo(java.util.Map)
com.journeyapps.barcodescanner.CaptureManager: void returnResult(com.journeyapps.barcodescanner.BarcodeResult)
io.flutter.FlutterInjector$Builder: FlutterInjector$Builder()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.app.AppCompatActivity: void onStart()
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlinx.coroutines.CompletedContinuation: void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getAnimation(int)
kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult$Closed: ChannelResult$Closed(java.lang.Throwable)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.google.zxing.MultiFormatReader: com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap)
com.google.zxing.oned.rss.RSSUtils: int combins(int,int)
androidx.fragment.app.SpecialEffectsController$Operation: void completeSpecialEffect(androidx.core.os.CancellationSignal)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.appcompat.widget.Toolbar$1: Toolbar$1(androidx.appcompat.widget.Toolbar)
androidx.window.core.Version: java.lang.String getDescription()
kotlinx.coroutines.scheduling.WorkQueue: void decrementIfBlocking(kotlinx.coroutines.scheduling.Task)
androidx.customview.view.AbsSavedState: int describeContents()
androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder)
androidx.fragment.app.FragmentAnim$1: void onCancel()
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.widget.ActionBarContainer: boolean isCollapsed(android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)
com.google.zxing.PlanarYUVLuminanceSource: void reverseHorizontal(int,int)
com.google.zxing.common.HybridBinarizer: com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource)
com.google.zxing.oned.UPCEReader: boolean checkChecksum(java.lang.String)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
com.journeyapps.barcodescanner.CaptureManager: void onSaveInstanceState(android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.app.AlertController: void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean showOverflowMenu()
androidx.appcompat.app.LayoutIncludeDetector: boolean isParserOutdated(org.xmlpull.v1.XmlPullParser)
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup getPopup()
com.journeyapps.barcodescanner.Size: com.journeyapps.barcodescanner.Size scaleFit(com.journeyapps.barcodescanner.Size)
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
androidx.appcompat.view.menu.StandardMenuPopup: void setVerticalOffset(int)
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: void setCallback(com.journeyapps.barcodescanner.camera.PreviewCallback)
com.journeyapps.barcodescanner.CameraPreview$4: void onRotationChanged(int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void idleReset(int)
androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)
androidx.fragment.app.FragmentManager: void forcePostponedTransactions()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)
kotlin.collections.EmptyMap: java.lang.Object get(java.lang.Object)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)
kotlin.ranges.IntProgression$Companion: kotlin.ranges.IntProgression fromClosedRange(int,int,int)
kotlinx.coroutines.scheduling.LimitingDispatcher: void close()
androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.journeyapps.barcodescanner.ViewfinderView$1: void previewStopped()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.zxing.client.android.DecodeFormatManager: java.util.Set parseDecodeFormats(android.content.Intent)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)
kotlin.SynchronizedLazyImpl: java.lang.Object getValue()
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
com.google.zxing.qrcode.QRCodeReader: void reset()
androidx.appcompat.widget.ActionMenuView: void onMeasureExactFormat(int,int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.ActionMenuPresenter: ActionMenuPresenter(android.content.Context)
androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()
androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
kotlinx.coroutines.internal.SystemPropsKt: int systemProp(java.lang.String,int,int,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
androidx.core.widget.AutoScrollHelper: void requestStop()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaY()
androidx.appcompat.view.menu.MenuPopupHelper$1: void onDismiss()
androidx.appcompat.widget.ActionMenuPresenter: void setMenuView(androidx.appcompat.widget.ActionMenuView)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int getIndex()
androidx.appcompat.widget.ListPopupWindow: void setWidth(int)
androidx.appcompat.widget.Toolbar$2: void run()
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionStart(android.transition.Transition)
com.benjaminabel.vibration.Vibration: android.os.Vibrator getVibrator()
androidx.collection.ArrayMap: java.util.Collection values()
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner createSpinner()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: boolean isValidBarcodeColumn(com.google.zxing.pdf417.decoder.DetectionResult,int)
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean showOverflowMenu()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerAfter()
androidx.appcompat.widget.ForwardingListener: ForwardingListener(android.view.View)
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
io.flutter.plugin.platform.PlatformPlugin: void access$1000(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)
kotlin.text.StringsKt__IndentKt: java.lang.String trimIndent(java.lang.String)
androidx.appcompat.app.LayoutIncludeDetector: boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void autoSizeText()
androidx.fragment.app.BackStackRecord: boolean interactsWith(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiChangeListener()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
com.benjaminabel.vibration.VibrationPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.view.menu.MenuItemWrapperICS: MenuItemWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenuItem)
androidx.fragment.app.FragmentManager: FragmentManager()
com.google.zxing.oned.UPCAReader: com.google.zxing.Result maybeReturnResult(com.google.zxing.Result)
androidx.appcompat.widget.ButtonBarLayout: boolean isStacked()
com.google.zxing.datamatrix.decoder.Version$ECB: int getCount()
androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment$2: Fragment$2(androidx.fragment.app.Fragment)
androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()
net.touchcapture.qr.flutterqr.QRView: android.view.View getView()
com.journeyapps.barcodescanner.camera.CameraSettings: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode getFocusMode()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)
androidx.appcompat.widget.SearchView$10: void afterTextChanged(android.text.Editable)
com.journeyapps.barcodescanner.BarcodeView: void pause()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.appcompat.view.menu.StandardMenuPopup: boolean flagActionItems()
androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
androidx.appcompat.app.AlertController$1: AlertController$1(androidx.appcompat.app.AlertController)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry getPlatformViewRegistry()
kotlin.text.StringsKt__StringsKt$splitToSequence$1: StringsKt__StringsKt$splitToSequence$1(java.lang.CharSequence)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean canApplyTheme()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.SplitInfo: int hashCode()
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.appcompat.view.SupportMenuInflater$MenuState: char getShortcut(java.lang.String)
kotlinx.coroutines.internal.OpDescriptor: boolean isEarlierThan(kotlinx.coroutines.internal.OpDescriptor)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: long getItemId(int)
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation()
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: DecoratedBarcodeView$WrappedCallback(com.journeyapps.barcodescanner.DecoratedBarcodeView,com.journeyapps.barcodescanner.BarcodeCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ActionMenuItem: boolean isActionViewExpanded()
androidx.fragment.app.FragmentState$1: FragmentState$1()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
androidx.fragment.app.FragmentContainerView: void removeViews(int,int)
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.DrawableSplashScreen$1: DrawableSplashScreen$1(io.flutter.embedding.android.DrawableSplashScreen,java.lang.Runnable)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDisplayOptions()
androidx.appcompat.view.menu.MenuItemImpl: char getAlphabeticShortcut()
kotlinx.coroutines.EventLoop: boolean isUnconfinedQueueEmpty()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
androidx.appcompat.widget.ScrollingTabContainerView: void onDetachedFromWindow()
androidx.window.core.Bounds: int getLeft()
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation()
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)
com.journeyapps.barcodescanner.camera.CameraInstance: void setSurface(com.journeyapps.barcodescanner.camera.CameraSurface)
androidx.activity.result.ActivityResult$1: androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
androidx.fragment.app.FragmentActivity$1: android.os.Bundle saveState()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.plugin.platform.VirtualDisplayController: void dispose()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object removeFirstOrNull()
androidx.appcompat.view.SupportMenuInflater$MenuState: void setItem(android.view.MenuItem)
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: int compare(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.Intrinsics: int compare(int,int)
androidx.fragment.app.FragmentManager$1: void handleOnBackPressed()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: FlutterRenderer$DisplayFeatureState(java.lang.String,int,int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: BarcodeView$DecodeMode(java.lang.String,int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetWindowFlag(int)
com.google.zxing.client.android.InactivityTimer: void registerReceiver()
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.Closed: void completeResumeSend()
androidx.fragment.app.Fragment$AnimationInfo: Fragment$AnimationInfo()
androidx.appcompat.widget.AppCompatImageHelper: void setImageResource(int)
kotlinx.coroutines.StandaloneCoroutine: boolean handleJobException(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.appcompat.widget.LinearLayoutCompat: void measureHorizontal(int,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()
androidx.fragment.app.LogWriter: void close()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()
com.journeyapps.barcodescanner.camera.CameraInstance$2: void run()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void start()
androidx.fragment.app.FragmentStateManager: void attach()
androidx.lifecycle.CompositeGeneratedAdaptersObserver: CompositeGeneratedAdaptersObserver(androidx.lifecycle.GeneratedAdapter[])
kotlin.random.AbstractPlatformRandom: AbstractPlatformRandom()
androidx.core.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: boolean isTitleOptional()
androidx.fragment.app.BackStackRecord: void commitNowAllowingStateLoss()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeWithDefaults(int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
kotlin.jvm.internal.ClassReference: java.lang.String getSimpleName()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation)
androidx.window.core.Bounds: int getRight()
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementTargetNames()
androidx.core.view.WindowInsetsCompat: boolean isConsumed()
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.internal.SystemPropsKt: int getAVAILABLE_PROCESSORS()
androidx.appcompat.app.WindowDecorActionBar: void onWindowVisibilityChanged(int)
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutsVisible()
kotlinx.coroutines.JobSupport$Finishing: java.util.List sealLocked(java.lang.Throwable)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String getStateDebugRepresentation()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean isValidSequence(java.util.List)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenuPrepared()
kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)
io.flutter.view.AccessibilityBridge: void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean)
androidx.core.graphics.TypefaceCompatBaseImpl$1: TypefaceCompatBaseImpl$1(androidx.core.graphics.TypefaceCompatBaseImpl)
kotlin.collections.EmptyList: java.util.ListIterator listIterator(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.google.zxing.pdf417.PDF417ResultMetadata: boolean isLastSegment()
io.flutter.embedding.android.SplashScreen: android.os.Bundle saveSplashScreenState()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String)
androidx.fragment.app.FragmentController: boolean execPendingActions()
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)
com.benjaminabel.vibration.Vibration: Vibration(android.os.Vibrator)
com.journeyapps.barcodescanner.camera.CameraManager: void setCameraDisplayOrientation(int)
androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineDetachedFromFlutterView()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBuffer()
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.JobCancellationException: boolean equals(java.lang.Object)
com.google.zxing.pdf417.PDF417Reader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
kotlin.coroutines.EmptyCoroutineContext: EmptyCoroutineContext()
com.journeyapps.barcodescanner.camera.CameraInstance: void requestPreview(com.journeyapps.barcodescanner.camera.PreviewCallback)
com.google.zxing.aztec.decoder.Decoder: boolean[] correctBits(boolean[])
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuOpened(int)
androidx.fragment.app.FragmentTransition: void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getServiceClass(byte[])
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getNumericShortcut()
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
com.google.zxing.common.CharacterSetECI: CharacterSetECI(java.lang.String,int,int,java.lang.String[])
com.journeyapps.barcodescanner.CaptureManager: void closeAndFinish()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean isStateful()
com.google.zxing.qrcode.decoder.DataMask: DataMask(java.lang.String,int)
androidx.appcompat.widget.Toolbar: void addChildrenForExpandedActionView()
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class)
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
androidx.fragment.app.FragmentContainerView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getViewTypeCount()
androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
androidx.core.view.inputmethod.InputContentInfoCompat: void requestPermission()
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
kotlinx.coroutines.DefaultExecutor: java.lang.Thread getThread()
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
net.touchcapture.qr.flutterqr.Shared: void setActivity(android.app.Activity)
com.journeyapps.barcodescanner.DefaultDecoderFactory: com.journeyapps.barcodescanner.Decoder createDecoder(java.util.Map)
com.journeyapps.barcodescanner.camera.CameraManager: void setTorch(boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.core.graphics.TypefaceCompatApi29Impl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)
androidx.appcompat.app.AlertController: android.view.ViewGroup resolvePanel(android.view.View,android.view.View)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.SearchView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: SearchView$UpdatableTouchDelegate(android.graphics.Rect,android.graphics.Rect,android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowShortcut()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(java.lang.Object[],java.lang.Object,int,int)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.journeyapps.barcodescanner.camera.CameraManager: java.util.List getPreviewSizes(android.hardware.Camera$Parameters)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder)
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl: void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel access$1200(io.flutter.plugin.platform.PlatformPlugin)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,int)
androidx.fragment.app.FragmentStateManager: void moveToExpectedState()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()
com.google.zxing.oned.rss.DataCharacter: int getChecksumPortion()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)
androidx.fragment.app.Fragment: void performDestroyView()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable checkIconCache(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void initializeFromIntent(android.content.Intent)
androidx.appcompat.widget.Toolbar: boolean hasExpandedActionView()
androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)
androidx.appcompat.widget.AppCompatTextHelper: boolean isAutoSizeEnabled()
io.flutter.embedding.android.SplashScreen: boolean doesSplashViewRememberItsTransition()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)
androidx.appcompat.widget.AppCompatReceiveContentHelper: boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.fragment.app.FragmentManager: void dispatchActivityCreated()
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29: void rebase(android.content.res.Resources$Theme)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.zxing.common.BitArray: com.google.zxing.common.BitArray clone()
com.google.zxing.qrcode.detector.Detector: float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
androidx.appcompat.widget.ActionMenuPresenter: boolean flagActionItems()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean hasSubMenu()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
kotlin.jvm.internal.TypeIntrinsics: boolean isFunctionOfArity(java.lang.Object,int)
androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)
androidx.fragment.app.FragmentTransitionImpl: void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])
androidx.savedstate.Recreator$SavedStateProvider: Recreator$SavedStateProvider(androidx.savedstate.SavedStateRegistry)
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
kotlinx.coroutines.flow.AbstractFlow: AbstractFlow()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
androidx.appcompat.widget.AbsActionBarView: void access$101(androidx.appcompat.widget.AbsActionBarView,int)
androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: VectorDrawableCommon()
androidx.appcompat.widget.AppCompatTextHelper: AppCompatTextHelper(android.widget.TextView)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode peek()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumHeight()
com.google.zxing.oned.UPCAReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.journeyapps.barcodescanner.CameraPreview: void setFramingRectSize(com.journeyapps.barcodescanner.Size)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: PreviewScalingStrategy$1(com.journeyapps.barcodescanner.camera.PreviewScalingStrategy,com.journeyapps.barcodescanner.Size)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
com.google.zxing.client.android.InactivityTimer: void unregisterReceiver()
com.google.zxing.oned.Code39Reader: int toNarrowWidePattern(int[])
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: AppCompatDelegateImpl$PanelFeatureState(int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatTextHelper: void onSetCompoundDrawables()
androidx.appcompat.view.menu.MenuPopup: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
kotlinx.coroutines.JobSupport: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.zxing.oned.CodaBarReader: boolean arrayContains(char[],char)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: AppCompatDelegateImpl$6$1(androidx.appcompat.app.AppCompatDelegateImpl$6)
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
com.google.zxing.oned.UPCEReader: UPCEReader()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()
androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setColorFilter(int,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitle()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float getInterpolation(float)
com.google.zxing.oned.rss.expanded.ExpandedRow: java.util.List getPairs()
com.google.zxing.pdf417.PDF417ResultMetadata: void setFileSize(long)
io.flutter.plugin.platform.PlatformViewRegistryImpl: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
com.google.zxing.aztec.decoder.Decoder: boolean[] extractBits(com.google.zxing.common.BitMatrix)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
androidx.fragment.app.Fragment: Fragment()
androidx.collection.LongSparseArray: void remove(long)
com.google.zxing.common.detector.WhiteRectangleDetector: WhiteRectangleDetector(com.google.zxing.common.BitMatrix)
com.journeyapps.barcodescanner.RotationListener: void listen(android.content.Context,com.journeyapps.barcodescanner.RotationCallback)
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int hashCode()
androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.google.zxing.InvertedLuminanceSource: com.google.zxing.LuminanceSource invert()
com.google.zxing.oned.OneDReader: void recordPattern(com.google.zxing.common.BitArray,int,int[])
com.google.zxing.qrcode.decoder.DataMask$2: boolean isMasked(int,int)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.internal.OnUndeliveredElementKt: void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
androidx.core.view.ViewCompat$3: java.lang.Object frameworkGet(android.view.View)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(java.lang.CharSequence)
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getCONDITION_FALSE()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.widget.ForwardingListener: boolean onTouchForwarded(android.view.MotionEvent)
com.google.zxing.common.reedsolomon.GenericGFPoly: GenericGFPoly(com.google.zxing.common.reedsolomon.GenericGF,int[])
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.core.text.PrecomputedTextCompat: int length()
androidx.appcompat.widget.ListPopupWindow: boolean isModal()
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object)
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int)
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumbersByRow()
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isBarcodeSceneModeEnabled()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)
androidx.fragment.app.FragmentManager: boolean checkForMenus()
androidx.core.view.OneShotPreDrawListener: void removeListener()
io.flutter.view.VsyncWaiter: long access$002(io.flutter.view.VsyncWaiter,long)
com.google.zxing.pdf417.detector.Detector: com.google.zxing.ResultPoint[] findRowsWithPattern(com.google.zxing.common.BitMatrix,int,int,int,int,int[])
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore getFragmentStore()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.fragment.app.FragmentManager$8: void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)
kotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()
com.journeyapps.barcodescanner.CaptureManager: void onPause()
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
androidx.appcompat.view.SupportActionModeWrapper: boolean isTitleOptional()
androidx.appcompat.widget.SearchView$2: SearchView$2(androidx.appcompat.widget.SearchView)
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
io.flutter.embedding.android.FlutterTextureView: void init()
androidx.loader.app.LoaderManager: LoaderManager()
com.journeyapps.barcodescanner.CameraPreview: android.os.Handler access$500(com.journeyapps.barcodescanner.CameraPreview)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest getRequest()
androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.appcompat.app.AppCompatActivity: void initDelegate()
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.content.Context,android.util.AttributeSet)
com.google.zxing.pdf417.PDF417Reader: int getMaxWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: FinderPatternFinder$FurthestFromAverageComparator(float,com.google.zxing.qrcode.detector.FinderPatternFinder$1)
kotlin.ResultKt: void throwOnFailure(java.lang.Object)
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: FragmentManager$LaunchedFragmentInfo$1()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean)
androidx.collection.SparseArrayCompat: void clear()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet,int)
androidx.collection.LruCache: java.lang.Object get(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
kotlinx.coroutines.channels.ChannelResult$Closed: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)
kotlin.reflect.KVisibility: KVisibility(java.lang.String,int)
net.touchcapture.qr.flutterqr.QRView: void resumeCamera(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getNavigationMode()
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int)
androidx.core.view.ViewCompat$2: java.lang.Boolean frameworkGet(android.view.View)
kotlin.text.DelimitedRangesSequence$iterator$1: java.lang.Object next()
androidx.appcompat.view.menu.ActionMenuItem: int getNumericModifiers()
androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationEnd(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.flutter.embedding.android.DrawableSplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
kotlinx.coroutines.Empty: java.lang.String toString()
com.google.zxing.qrcode.decoder.DataMask$5: DataMask$5(java.lang.String,int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.collection.MapCollections: java.util.Set getEntrySet()
androidx.lifecycle.FullLifecycleObserverAdapter: FullLifecycleObserverAdapter(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)
kotlinx.coroutines.UndispatchedMarker: UndispatchedMarker()
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int)
androidx.lifecycle.SavedStateHandleController$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.fragment.app.FragmentTransitionCompat21: boolean canHandle(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
androidx.appcompat.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)
androidx.cursoradapter.widget.CursorFilter: CursorFilter(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.CascadingMenuPopup$1: CascadingMenuPopup$1(androidx.appcompat.view.menu.CascadingMenuPopup)
io.flutter.embedding.android.FlutterSplashView: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void stop()
androidx.fragment.app.Fragment: void performPause()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitleCondensed()
androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
com.google.zxing.qrcode.decoder.FormatInformation: int hashCode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
com.google.zxing.aztec.detector.Detector: void extractParameters(com.google.zxing.ResultPoint[])
com.google.zxing.common.BitArray: int getSize()
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: AI013x0x1xDecoder(com.google.zxing.common.BitArray,java.lang.String,java.lang.String)
androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Region getTransparentRegion()
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect onGetEpicenter(android.transition.Transition)
androidx.collection.MapCollections: java.util.Set getKeySet()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Field getTextViewField(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: AppCompatSpinner$DropdownPopup$3(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(int)
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
androidx.appcompat.app.WindowDecorActionBar$3: WindowDecorActionBar$3(androidx.appcompat.app.WindowDecorActionBar)
com.google.zxing.oned.ITFReader: int[] decodeEnd(com.google.zxing.common.BitArray)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
kotlin.ranges.IntProgressionIterator: int nextInt()
androidx.appcompat.widget.ListPopupWindow: boolean isInputMethodNotNeeded()
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.collection.SimpleArrayMap: int hashCode()
androidx.fragment.app.Fragment: android.content.Context getContext()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitPairFilter: int hashCode()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
com.google.zxing.qrcode.decoder.FormatInformation: com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int)
androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int)
kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isQwertyMode()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.Region getTransparentRegion()
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle installParentHandle()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
androidx.core.content.res.ComplexColorCompat: boolean isStateful()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)
androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
kotlinx.coroutines.JobKt: void ensureActive(kotlinx.coroutines.Job)
kotlin.SynchronizedLazyImpl: boolean isInitialized()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: int textCompaction(int[],int,java.lang.StringBuilder)
androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)
androidx.fragment.app.FragmentManagerViewModel$1: FragmentManagerViewModel$1()
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerAfter()
kotlinx.coroutines.internal.FastServiceLoader: FastServiceLoader()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.appcompat.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)
androidx.appcompat.widget.SuggestionsAdapter: void updateSpinnerState(android.database.Cursor)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(int)
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.SubMenu getSubMenu()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
kotlinx.coroutines.JobSupport: void addSuppressedExceptions(java.lang.Throwable,java.util.List)
androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.google.zxing.pdf417.decoder.DetectionResultColumn: int imageRowToCodewordIndex(int)
kotlinx.coroutines.CommonPool: int getParallelism()
androidx.appcompat.view.SupportActionModeWrapper: void setCustomView(android.view.View)
kotlin.Pair: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int)
androidx.appcompat.widget.TooltipCompatHandler: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()
androidx.fragment.app.FragmentManagerState$1: FragmentManagerState$1()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlinx.coroutines.scheduling.NonBlockingContext: NonBlockingContext()
net.touchcapture.qr.flutterqr.QRView: void flipCamera(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.Toolbar: void collapseActionView()
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
kotlinx.coroutines.CoroutineId: int hashCode()
androidx.core.widget.AutoScrollHelper: void cancelTargetTouch()
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
com.google.zxing.ChecksumException: ChecksumException()
androidx.cursoradapter.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void stop()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void removeCollectedSpans(android.view.View)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldHideActionBarOnFling(float)
com.google.zxing.pdf417.decoder.Codeword: Codeword(int,int,int,int)
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setFilterBitmap(boolean)
com.google.zxing.common.BitMatrix: int hashCode()
com.google.zxing.BinaryBitmap: BinaryBitmap(com.google.zxing.Binarizer)
androidx.collection.SimpleArrayMap: boolean isEmpty()
androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
kotlin.random.FallbackThreadLocalRandom: FallbackThreadLocalRandom()
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
androidx.appcompat.widget.Toolbar: void removeChildrenForExpandedActionView()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object)
kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getActionSymbolicName(int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.zxing.client.android.camera.open.OpenCameraInterface: int getCameraId(int)
io.flutter.view.AccessibilityBridge: android.graphics.Rect getBoundsInScreen(android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
com.journeyapps.barcodescanner.BarcodeView: void previewStarted()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.google.zxing.common.BitMatrix: com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray)
kotlinx.coroutines.channels.ClosedReceiveChannelException: ClosedReceiveChannelException(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
kotlin.collections.EmptyList: java.util.List subList(int,int)
androidx.appcompat.widget.SuggestionsAdapter: void setQueryRefinement(int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setState(int[])
androidx.appcompat.view.menu.SubMenuBuilder: void setQwertyMode(boolean)
androidx.appcompat.widget.TintTypedArray: android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback)
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean addLast(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.appcompat.widget.ToolbarWidgetWrapper: int detectDisplayOptions()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)
androidx.collection.ArraySet: int hashCode()
androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.lifecycle.LiveData: void changeActiveCounter(int)
com.journeyapps.barcodescanner.camera.CameraInstance$1: void run()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.InvokeOnCancel: java.lang.String toString()
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
androidx.activity.contextaware.ContextAwareHelper: void clearAvailableContext()
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.JobNode: kotlinx.coroutines.NodeList getList()
kotlinx.coroutines.intrinsics.CancellableKt: void access$dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[])
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: AppCompatSpinner$DropdownPopup$2(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
com.google.zxing.common.reedsolomon.GenericGFPoly: boolean isZero()
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence[] getTextArray(int)
androidx.appcompat.app.LayoutIncludeDetector: boolean detect(android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: ResourcesCompat$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void onReceive(android.content.Context,android.content.Intent)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)
com.google.zxing.pdf417.PDF417Reader: com.google.zxing.Result[] decode(com.google.zxing.BinaryBitmap,java.util.Map,boolean)
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator getInstance()
com.google.zxing.maxicode.decoder.Decoder: Decoder()
com.journeyapps.barcodescanner.CaptureActivity: void onDestroy()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String)
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.fragment.app.FragmentManager: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: SearchView$SearchAutoComplete$1(androidx.appcompat.widget.SearchView$SearchAutoComplete)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
androidx.appcompat.widget.ButtonBarLayout: int getNextVisibleChildIndex(int)
com.google.zxing.pdf417.decoder.BoundingBox: int getMaxX()
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
com.google.zxing.pdf417.decoder.DetectionResult: void setDetectionResultColumn(int,com.google.zxing.pdf417.decoder.DetectionResultColumn)
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup createPopup()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
com.journeyapps.barcodescanner.BarcodeView: void decodeSingle(com.journeyapps.barcodescanner.BarcodeCallback)
androidx.collection.SparseArrayCompat: java.lang.Object clone()
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl(java.lang.Object)
androidx.fragment.app.Fragment: void onStart()
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity onGetHost()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
com.journeyapps.barcodescanner.DecoderThread: void decode(com.journeyapps.barcodescanner.SourceData)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem findItem(int)
androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()
androidx.appcompat.view.menu.BaseMenuPresenter: void setId(int)
androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: boolean isIsoIec646()
androidx.fragment.app.FragmentStateManager: void destroy()
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()
androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler)
com.google.zxing.common.DecoderResult: byte[] getRawBytes()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
io.flutter.view.AccessibilityBridge: boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)
com.journeyapps.barcodescanner.DecoderThread: com.google.zxing.LuminanceSource createSource(com.journeyapps.barcodescanner.SourceData)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
com.google.zxing.client.android.AmbientLightManager: void stop()
androidx.appcompat.view.menu.MenuWrapperICS: void setQwertyMode(boolean)
com.google.zxing.datamatrix.decoder.Version$ECB: Version$ECB(int,int)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.appcompat.widget.TintResources: TintResources(android.content.Context,android.content.res.Resources)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2(java.lang.reflect.Constructor)
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
com.journeyapps.barcodescanner.CameraPreview: void startPreviewIfReady()
com.google.zxing.MultiFormatReader: void setHints(java.util.Map)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.widget.AutoScrollHelper: AutoScrollHelper(android.view.View)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStarted()
kotlin.collections.EmptyList: java.lang.Void get(int)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
kotlin.jvm.internal.Lambda: int getArity()
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: NestedScrollView$AccessibilityDelegate()
androidx.core.widget.NestedScrollView: boolean pageScroll(int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.collection.LruCache: void trimToSize(int)
androidx.lifecycle.ViewModel: void onCleared()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.zxing.Result: com.google.zxing.BarcodeFormat getBarcodeFormat()
com.google.zxing.oned.rss.RSS14Reader: void adjustOddEvenCounts(boolean,int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.zxing.qrcode.decoder.FormatInformation: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel()
net.touchcapture.qr.flutterqr.QRView: boolean hasSystemFeature(java.lang.String)
androidx.fragment.app.FragmentController: void dispatchStop()
androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setVisible(boolean,boolean)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(java.lang.CharSequence)
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeAndroidViewForPlatformView(int)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.Log: void d(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterView$4: void onFlutterUiDisplayed()
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(java.lang.Object)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getInt(byte[],byte[])
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object pollInternal()
androidx.appcompat.app.AlertController: boolean canTextInput(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.view.menu.ActionMenuItem: void setShowAsAction(int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
com.google.zxing.common.DefaultGridSampler: DefaultGridSampler()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()
com.google.zxing.qrcode.decoder.Version$ECB: Version$ECB(int,int)
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
kotlin.collections.EmptyMap: EmptyMap()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.appcompat.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(androidx.core.view.WindowInsetsCompat)
kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()
kotlinx.coroutines.internal.SystemPropsKt: long systemProp(java.lang.String,long,long,long)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback()
kotlinx.coroutines.JobSupport: java.lang.Object makeCancelling(java.lang.Object)
androidx.appcompat.widget.TooltipCompatHandler: void scheduleShow()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
com.google.zxing.common.BitMatrix: void set(int,int)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: java.lang.String decodeBase900toBase10(int[],int)
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
com.journeyapps.barcodescanner.camera.CameraInstance: void configureCamera()
com.google.zxing.aztec.AztecDetectorResult: int getNbDatablocks()
kotlinx.coroutines.JobSupport: void cancel(java.util.concurrent.CancellationException)
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasComposing()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
io.flutter.view.AccessibilityBridge: int access$1172(io.flutter.view.AccessibilityBridge,int)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)
androidx.appcompat.view.menu.MenuBuilder: void changeMenuMode()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
androidx.window.embedding.SplitRule: int getMinWidth()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,int,int)
kotlinx.coroutines.DispatchedCoroutine: boolean tryResume()
androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void executeTask(kotlinx.coroutines.scheduling.Task)
com.benjaminabel.vibration.VibrationPlugin: void setupChannels(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])
io.flutter.embedding.android.KeyChannelResponder: KeyChannelResponder(io.flutter.embedding.engine.systemchannels.KeyEventChannel)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.SubMenu getSubMenuWrapper(android.view.SubMenu)
androidx.appcompat.widget.AppCompatTextHelper$1: void onFontRetrieved(android.graphics.Typeface)
kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)
androidx.collection.MapCollections: MapCollections()
kotlin.Pair: java.lang.Object component2()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$200(io.flutter.plugin.platform.PlatformViewsController)
com.google.zxing.oned.rss.DataCharacter: int hashCode()
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void show(int,int)
androidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector build()
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawTickMarks(android.graphics.Canvas)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.appcompat.app.TwilightCalculator: TwilightCalculator()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionResume(android.transition.Transition)
com.journeyapps.barcodescanner.CaptureManager$2: void previewSized()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)
com.journeyapps.barcodescanner.CaptureManager: void displayFrameworkBugMessageAndExit(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryPark()
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: AppCompatDelegateImpl$ActionMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
